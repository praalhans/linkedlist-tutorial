\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jan 21 12:26:35 CET 2020
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\bootclasspath "../jre";

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jan 21 12:26:35 CET 2020
name=java.util.LinkedList[java.util.LinkedList\\:\\:remove(java.lang.Object)].JML normal_behavior operation contract.0
contract=java.util.LinkedList[java.util.LinkedList\\:\\:remove(java.lang.Object)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mac" ) (keyVersion "7d3deab0763c88edee4f7a08e604661e0dbdd450"))
(keyLog "1" (keyUser "mac" ) (keyVersion "7d3deab0763c88edee4f7a08e604661e0dbdd450"))

(autoModeTime "95742")

(branch "dummy ID"
(rule "ifthenelse_false" (formula "1") (term "1,0,0,0,0,0,1,1") (newnames "o,self,result,exc,heapAtPre,o_0,f"))
(rule "false_to_not_true" (formula "1") (term "0,0,0,0,0,1,1"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "ifthenelse_true" (formula "1") (term "1,0,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,1,0,0,0,0,1"))
(rule "eqSymm" (formula "8") (term "1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "8") (term "1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "castedGetAny" (formula "8") (term "1,0,0,1,0,1,0,0,1,0,0,0,0,1"))
(rule "castedGetAny" (formula "8") (term "1,2,0,1,1,1,1,0,1,0,1,0,0,0,1"))
(rule "castedGetAny" (formula "8") (term "1,2,0,0,1,1,1,0,0,1,0,0,0,0,1"))
(rule "castedGetAny" (formula "8") (term "1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "castedGetAny" (formula "8") (term "1,0,0,1,0,1,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "castedGetAny" (formula "8") (term "1,0,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "8") (term "0,1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "assignment" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "8") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0,0,1,0,0,0,0,1"))
(rule "all_unused" (formula "8") (term "0,1,0,1"))
(rule "all_unused" (formula "8") (term "1,0,1"))
(rule "concrete_and_3" (formula "8") (term "0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "1,1,0,0,1,0,0,0,1"))
(rule "double_not" (formula "8") (term "0,1,1,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,1,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "1,1,1,0,1,0,1,0,0,1"))
(rule "double_not" (formula "8") (term "0,1,1,1,0,1,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,1,1,0,1,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,0,0,1,0,1,0,1,0,0,1"))
(rule "nnf_notAnd" (formula "8") (term "0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "8") (term "1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,1,0,1,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "1,1,0,0,0,1,0,1,0,1,0,0,1"))
(rule "double_not" (formula "8") (term "0,1,1,0,0,0,1,0,1,0,1,0,0,1"))
(rule "nnf_imp2or" (formula "8") (term "0,1,0,0,0,1,0,1,0,1,0,0,1"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_remove,savedHeapBefore_remove,_oBefore_remove"))
(rule "simplifyUpdate2" (formula "8") (term "1"))
(rule "variableDeclarationGhostAssign" (formula "8") (term "1"))
(rule "variableDeclarationGhost" (formula "8") (term "1") (newnames "index_1"))
(rule "assignment" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "ifElseUnfold" (formula "8") (term "1") (inst "#boolv=x_1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "x_1"))
(rule "equality_comparison_simple" (formula "8") (term "1"))
(rule "sequentialToParallel2" (formula "8"))
(rule "simplifyUpdate3" (formula "8") (term "1,0"))
(rule "applyOnElementary" (formula "8") (term "1,0"))
(rule "applyOnRigidTerm" (formula "8") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "8") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "8") (term "2,0,1,0"))
(rule "applyOnRigidFormula" (formula "8") (term "0,0,1,0"))
(rule "applyOnPV" (formula "8") (term "0,0,0,1,0"))
(rule "simplifyUpdate1" (formula "8") (term "1,0,0,1,0"))
(rule "ifElseSplit" (formula "8"))
(branch "Case 1"
   (rule "simplifyUpdate2" (formula "1"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "ifthenelse_concrete3" (formula "1"))
   (rule "boolean_not_equal_2" (formula "1") (term "1"))
   (rule "concrete_or_4" (formula "1"))
   (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
   (rule "concrete_or_1" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "for_to_while" (formula "8") (term "1") (inst "#outerLabel=_label5") (inst "#innerLabel=_label4"))
   (rule "variableDeclarationAssign" (formula "8") (term "1"))
   (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_7"))
   (rule "assignment_read_attribute_this" (formula "8"))
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (builtin "Loop Invariant" (formula "8") (newnames "variant_1,b_3,heapBefore_LOOP_1,x_7Before_LOOP,index_1Before_LOOP_1,x_7_0,index_1_2,heap_After_LOOP_1,anon_heap_LOOP_1,o_0,f"))
   (branch "Case 1"
      (rule "simplifyUpdate2" (formula "8"))
      (rule "applyOnRigidFormula" (formula "8"))
      (rule "simplifyUpdate2" (formula "8") (term "1"))
      (rule "applyOnRigidFormula" (formula "8") (term "0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,0"))
      (rule "simplifyUpdate2" (formula "8") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,0"))
      (rule "simplifyUpdate2" (formula "8") (term "0,1,0"))
      (rule "simplifyUpdate2" (formula "8") (term "1,1,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,0,0"))
      (rule "simplifyUpdate2" (formula "8") (term "0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,1,0"))
      (rule "applyOnPV" (formula "8") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,1,1,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,1,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "0,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,1,1,0,0"))
      (rule "applyOnPV" (formula "8") (term "0,1,1,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,1,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "8") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,0,1,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "1,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "0,1,1,1,0,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "0,0,1,0,0"))
      (rule "applyOnPV" (formula "8") (term "0,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,1,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "0,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,1,0,0,0"))
      (rule "simplifyUpdate2" (formula "8") (term "1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "1,1,1,1,0,0"))
      (rule "applyOnPV" (formula "8") (term "0,1,1,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,1,1,1,1,0,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "0,1,0,0,0,0"))
      (rule "applyOnPV" (formula "8") (term "0,0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,0,1,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "8") (term "0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,1,0,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "0,0,1,0,0,0"))
      (rule "simplifyUpdate2" (formula "8") (term "0,0,0,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "8") (term "1,0,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "0,1,0,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "1,1,0,0,1,0,0,0"))
      (rule "applyOnPV" (formula "8") (term "0,1,1,0,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "8") (term "1,1,1,0,0,1,0,0,0"))
      (rule "andRight" (formula "8"))
      (branch "Case 1"
         (rule "andRight" (formula "8"))
         (branch "Case 1"
            (rule "andRight" (formula "8"))
            (branch "Case 1"
               (rule "andRight" (formula "8"))
               (branch "Case 1"
                  (rule "andRight" (formula "8"))
                  (branch "Case 1"
                     (rule "add_literals" (formula "8") (term "1"))
                     (rule "leq_literals" (formula "8"))
                     (rule "closeTrue" (formula "8"))
                  )
                  (branch "Case 2"
                     (rule "add_literals" (formula "8") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "8"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "lenNonNegative" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (rule "concrete_and_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "add_literals" (formula "8") (term "1,1,0,0"))
                  (rule "allRight" (formula "8") (inst "sk=i_9"))
                  (rule "impRight" (formula "8"))
                  (rule "notRight" (formula "9"))
                  (rule "andLeft" (formula "2"))
                  (rule "castedGetAny" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "Case 2"
               (rule "impRight" (formula "8"))
               (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "orLeft" (formula "10"))
               (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "insert_constant_value" (formula "8") (term "1"))
                  (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                  (rule "add_literals" (formula "16") (term "1,1"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "eqSymm" (formula "13") (term "1,0"))
                  (rule "eqSymm" (formula "14") (term "1,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                  (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                  (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                  (rule "castedGetAny" (formula "14") (term "0,1,0"))
                  (rule "eqSymm" (formula "14") (term "1,0"))
                  (rule "castedGetAny" (formula "13") (term "0,1,0"))
                  (rule "eqSymm" (formula "13") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "10"))
                  (rule "lenOfSeqEmpty" (formula "1") (term "0,1,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "11"))
                  (rule "notLeft" (formula "10"))
                  (rule "add_literals" (formula "20") (term "1,1") (userinteraction))
                  (rule "allLeft" (formula "9") (inst "t=Z(0(#))") (userinteraction))
                  (rule "impLeft" (formula "9") (userinteraction))
                  (branch "Case 1"
                     (rule "insert_constant_value" (formula "8") (term "1"))
                     (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                     (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_and_1" (formula "16"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "close" (formula "16") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (rule "andLeft" (formula "9") (userinteraction))
                     (rule "castAdd" (formula "22") (term "1") (ifseqformula "10") (userinteraction))
                     (rule "close" (formula "22") (ifseqformula "14") (userinteraction))
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "add_literals" (formula "8") (term "0,0"))
            (rule "eqSymm" (formula "8") (term "0"))
            (rule "equiv_right" (formula "8"))
            (branch
               (rule "lenNonNegative" (formula "1") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "3"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "10"))
               (rule "concrete_or_2" (formula "1"))
               (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
               (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0"))
               (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "12") (term "1,0"))
               (rule "eqSymm" (formula "11") (term "1,0,1"))
               (rule "eqSymm" (formula "11") (term "1,1"))
               (rule "replace_known_right" (formula "11") (term "1,0,0") (ifseqformula "16"))
               (rule "concrete_and_4" (formula "11") (term "0,0"))
               (rule "concrete_and_2" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "12"))
               (rule "notLeft" (formula "11"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
               (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "13") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "16") (term "0,1,0"))
               (rule "eqSymm" (formula "16") (term "1,0"))
               (rule "castedGetAny" (formula "15") (term "0,1,0"))
               (rule "eqSymm" (formula "15") (term "1,0"))
               (rule "castedGetAny" (formula "14") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
               (rule "eqSymm" (formula "8"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "2"))
               (rule "add_zero_right" (formula "14") (term "1,0"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
               (rule "leq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
               (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
               (rule "times_zero_2" (formula "9") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
               (rule "times_zero_2" (formula "15") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "17") (inst "iv=iv"))
               (rule "lenOfSeqEmpty" (formula "17") (term "1,0"))
               (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "2"))
               (rule "concrete_and_1" (formula "17"))
               (rule "allRight" (formula "17") (inst "sk=iv_3"))
               (rule "impRight" (formula "17"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
               (rule "times_zero_2" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (rule "concrete_and_2" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "lenNonNegative" (formula "9") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "10"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "10") (ifseqformula "1"))
               (rule "times_zero_1" (formula "10") (term "1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0"))
               (rule "leq_literals" (formula "10") (term "0"))
               (rule "concrete_and_2" (formula "10"))
               (rule "false_right" (formula "10"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "4"))
               (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
               (rule "concrete_or_1" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
               (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0"))
               (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "12") (term "1,0"))
               (rule "eqSymm" (formula "11") (term "1,1"))
               (rule "eqSymm" (formula "11") (term "1,0,1"))
               (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "11") (term "0,0"))
               (rule "replace_known_left" (formula "11") (term "0,1,0,0,0,0,0,1") (ifseqformula "2"))
               (rule "concrete_not_1" (formula "11") (term "1,0,0,0,0,0,1"))
               (rule "concrete_and_4" (formula "11") (term "0,0,0,0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,0,0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,1"))
               (rule "concrete_and_2" (formula "11") (term "1"))
               (rule "concrete_or_4" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
               (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "14") (term "0,1,0"))
               (rule "eqSymm" (formula "14") (term "1,0"))
               (rule "castedGetAny" (formula "13") (term "0,1,0"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "11"))
               (rule "lenOfSeqEmpty" (formula "10") (term "0,1,0,0,1,0,0"))
               (rule "times_zero_2" (formula "10") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "11"))
               (rule "lenOfSeqEmpty" (formula "9") (term "0"))
               (rule "leq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
               (rule "lenOfSeqEmpty" (formula "8") (term "0"))
               (rule "eqSymm" (formula "8"))
               (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
               (rule "lenOfSeqEmpty" (formula "12") (term "0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "9") (term "0,0,0,1,1,0") (ifseqformula "10"))
               (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
               (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "10"))
               (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "10"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "10"))
               (rule "lenOfSeqEmpty" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch
         (rule "close" (formula "8") (ifseqformula "2"))
      )
   )
   (branch "Body Preserves Invariant"
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "10") (term "1"))
      (rule "eqSymm" (formula "8") (term "0,1,0,1,1"))
      (rule "eqSymm" (formula "8") (term "1,1,0,0,1,1"))
      (rule "eqSymm" (formula "10") (term "0,0,1,0,1,1,1,0,1,1,1,1,1"))
      (rule "eqSymm" (formula "10") (term "0,1,0,0,1,1,1,0,1,1,1,1,1"))
      (rule "eqSymm" (formula "10") (term "1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1,1,1,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "0,0,1,1,1"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "0"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,1,1,0,1,1,1,1,1"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,1"))
      (rule "sequentialToParallel2" (formula "15"))
      (rule "simplifyUpdate3" (formula "15") (term "1,0"))
      (rule "sequentialToParallel2" (formula "15") (term "1"))
      (rule "simplifyUpdate3" (formula "15") (term "1,0,1"))
      (rule "applyOnElementary" (formula "15") (term "1,0,1"))
      (rule "sequentialToParallel2" (formula "15"))
      (rule "simplifyUpdate2" (formula "15"))
      (rule "simplifyUpdate3" (formula "15") (term "1,0"))
      (rule "impRight" (formula "15"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "simplifyUpdate3" (formula "1") (term "0"))
      (rule "applyOnParallel" (formula "16") (term "1,0"))
      (rule "simplifyUpdate3" (formula "16") (term "0,1,0"))
      (rule "applyOnElementary" (formula "16") (term "1,1,0"))
      (rule "sequentialToParallel1" (formula "16") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,1,0"))
      (rule "simplifyUpdate3" (formula "16") (term "0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "13") (term "1,0,1"))
      (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "12") (term "1,0,1,1"))
      (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,1"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1"))
      (rule "polySimp_addComm0" (formula "9") (term "1,1"))
      (rule "polySimp_addComm0" (formula "16") (term "0,1,0,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,1,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,1,1,0,1"))
      (rule "mul_literals" (formula "16") (term "0,1,0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "16") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "1,0,1,1,0"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "castedGetAny" (formula "11") (term "1,0,0,1,0,1"))
      (rule "castedGetAny" (formula "16") (term "1,0,0,1,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "simplifyUpdate2" (formula "13") (term "1"))
      (rule "simplifyUpdate2" (formula "13") (term "0"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate2" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "10"))
      (rule "simplifyUpdate1" (formula "10") (term "1"))
      (rule "applyOnRigidFormula" (formula "9"))
      (rule "simplifyUpdate1" (formula "9") (term "0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,1,1,0"))
      (rule "applyOnRigidFormula" (formula "14") (term "0"))
      (rule "applyOnPV" (formula "14") (term "0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "14") (term "1"))
      (rule "simplifyUpdate1" (formula "14") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "applyOnRigidFormula" (formula "13") (term "1"))
      (rule "applyOnPV" (formula "13") (term "0,1"))
      (rule "simplifyUpdate1" (formula "13") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "13") (term "0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0"))
      (rule "eqSymm" (formula "13") (term "0"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,1"))
      (rule "applyOnPV" (formula "12") (term "1,1"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "12") (term "0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "10") (term "0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,0"))
      (rule "applyOnPV" (formula "10") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "9") (term "1"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1"))
      (rule "applyOnPV" (formula "9") (term "1,1"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0,1,1,0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0,1"))
      (rule "simplifyUpdate1" (formula "14") (term "0,0,1"))
      (rule "applyOnPV" (formula "14") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "14") (term "2,0,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "simplifyUpdate2" (formula "11") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,0"))
      (rule "applyOnPV" (formula "13") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0,0"))
      (rule "eqSymm" (formula "13") (term "0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,1,1,0"))
      (rule "polySimp_addComm0" (formula "16") (term "0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "1,0,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0,0"))
      (rule "simplifyUpdate2" (formula "11") (term "0,0,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,0,1"))
      (rule "applyOnPV" (formula "12") (term "1,1,0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,1,0,1"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,1,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "16") (term "0,1,1,0"))
      (rule "applyOnRigidFormula" (formula "11") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "11") (term "1,1,0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1,1,0,0"))
      (rule "applyOnPV" (formula "11") (term "1,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0,0,0,0,0,1,1,1,0,1"))
      (rule "times_zero_2" (formula "16") (term "1,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "9"))
      (rule "times_zero_2" (formula "9") (term "1,0"))
      (rule "add_zero_right" (formula "9") (term "0"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_3_2"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "rtrn_2"))
      (rule "assignment" (formula "16") (term "1"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "returnExpr_2"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "exc_4"))
      (rule "assignment" (formula "16") (term "1"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "thrownExc_2"))
      (rule "blockReturn" (formula "16") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "16") (term "1,0,0,1"))
      (rule "blockReturn" (formula "16") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "16") (term "1,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0,1,0,0,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "16") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "inequality_comparison_simple" (formula "14") (term "1"))
      (rule "sequentialToParallel2" (formula "14"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "applyOnElementary" (formula "14") (term "0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "2,0,0"))
      (rule "applyOnRigidFormula" (formula "14") (term "0,0,0"))
      (rule "applyOnPV" (formula "14") (term "0,0,0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (rule "emptyModality" (formula "14") (term "1"))
      (rule "notRight" (formula "14"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete4" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "14"))
      (rule "concrete_or_2" (formula "13"))
      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "14"))
      (rule "concrete_eq_4" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "13"))
      (rule "polySimp_addAssoc" (formula "9") (term "1"))
      (rule "add_literals" (formula "9") (term "0,1"))
      (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
      (rule "concrete_impl_1" (formula "11"))
      (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "9"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0"))
      (rule "leq_literals" (formula "13") (term "0"))
      (rule "concrete_and_2" (formula "13"))
      (rule "false_right" (formula "13"))
      (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_8"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_8"))
      (rule "inequality_comparison_simple" (formula "15") (term "1"))
      (rule "sequentialToParallel2" (formula "15"))
      (rule "simplifyUpdate3" (formula "15") (term "1,0"))
      (rule "applyOnElementary" (formula "15") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "15") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
      (rule "replace_known_right" (formula "15") (term "0,0,1,0") (ifseqformula "13"))
      (rule "ifthenelse_false" (formula "15") (term "0,1,0"))
      (rule "ifSplit" (formula "15"))
      (branch "if x_8 true"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "boolean_equal" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignmentAdditionBigint1" (formula "15") (term "1"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "simplifyUpdate3" (formula "15") (term "1,0"))
         (rule "applyOnElementary" (formula "15") (term "1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
         (rule "ifUnfold" (formula "15") (term "1") (inst "#boolv=x_8"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_9"))
         (rule "compound_equality_comparison_1" (formula "15") (term "1") (inst "#v0=o"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "o_2"))
         (rule "assignment_read_attribute" (formula "15"))
         (branch "Normal Execution (x_7 != null)"
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
            (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
            (rule "equality_comparison_simple" (formula "15") (term "1"))
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
            (rule "applyOnRigidFormula" (formula "15") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0"))
            (rule "lenNonNegative" (formula "9") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "seqGetAlphaCast" (formula "12") (term "0"))
            (rule "castDel" (formula "12") (term "0"))
            (rule "eqClose" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "ifSplit" (formula "16"))
            (branch "if x_9 true"
               (rule "simplifyUpdate2" (formula "17"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "ifthenelse_concrete3" (formula "1"))
               (rule "boolean_not_equal_2" (formula "1") (term "1"))
               (rule "concrete_or_4" (formula "1"))
               (rule "assignment_write_attribute_this" (formula "17"))
               (rule "sequentialToParallel2" (formula "17"))
               (rule "simplifyUpdate3" (formula "17") (term "1,0"))
               (rule "applyOnElementary" (formula "17") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "17") (term "3,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
               (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_unlink_0,result_2,exc_5,heapAfter_unlink_0,anon_heap_unlink_0") (contract "java.util.LinkedList[java.util.LinkedList::unlink(java.util.LinkedList.Node)].JML normal_behavior operation contract.0"))
               (branch "Post (unlink)"
                  (rule "simplifyUpdate2" (formula "16"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,0,1,1,1,1,1"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,1,1,1,1,1"))
                  (rule "eqSymm" (formula "16") (term "0,0,0,0,1,1,1,1,1"))
                  (rule "sequentialToParallel2" (formula "19"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "simplifyUpdate3" (formula "19") (term "1,0"))
                  (rule "sequentialToParallel2" (formula "16"))
                  (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                  (rule "andLeft" (formula "16"))
                  (rule "simplifyUpdate2" (formula "16"))
                  (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                  (rule "parallelWithSkip2" (formula "16") (term "0"))
                  (rule "applyOnElementary" (formula "17") (term "1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0"))
                  (rule "sequentialToParallel2" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                  (rule "andLeft" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "andLeft" (formula "18"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "andLeft" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "andLeft" (formula "18"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "andLeft" (formula "18"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "andLeft" (formula "18"))
                  (rule "simplifyUpdate2" (formula "18"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "polySimp_addComm0" (formula "19") (term "1,1,0,1"))
                  (rule "applyOnRigidFormula" (formula "16"))
                  (rule "simplifyUpdate1" (formula "16") (term "1"))
                  (rule "applyOnRigidFormula" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17") (term "0"))
                  (rule "applyOnRigidFormula" (formula "21"))
                  (rule "simplifyUpdate1" (formula "21") (term "1"))
                  (rule "applyOnPV" (formula "21") (term "0"))
                  (rule "applyOnRigidFormula" (formula "20"))
                  (rule "simplifyUpdate1" (formula "20") (term "1"))
                  (rule "simplifyUpdate1" (formula "20") (term "0"))
                  (rule "applyOnRigidFormula" (formula "18"))
                  (rule "simplifyUpdate1" (formula "18") (term "1"))
                  (rule "applyOnRigidFormula" (formula "19"))
                  (rule "simplifyUpdate1" (formula "19") (term "1"))
                  (rule "applyOnRigidTerm" (formula "16") (term "0"))
                  (rule "applyOnPV" (formula "16") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "16") (term "2,0"))
                  (rule "simplifyUpdate1" (formula "16") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1"))
                  (rule "applyOnRigidTerm" (formula "20") (term "1"))
                  (rule "simplifyUpdate1" (formula "20") (term "2,1"))
                  (rule "applyOnPV" (formula "20") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "20") (term "1,1"))
                  (rule "applyOnRigidTerm" (formula "20") (term "0"))
                  (rule "simplifyUpdate1" (formula "20") (term "2,0"))
                  (rule "applyOnPV" (formula "20") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "20") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "18") (term "0"))
                  (rule "simplifyUpdate1" (formula "18") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "18") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "18") (term "2,0"))
                  (rule "applyOnPV" (formula "18") (term "0,0"))
                  (rule "applyOnPV" (formula "18") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "1"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,1"))
                  (rule "applyOnPV" (formula "19") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1") (ifseqformula "16"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1"))
                  (rule "dismissNonSelectedField" (formula "18") (term "0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "0,0,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "0,1,0"))
                  (rule "dismissNonSelectedField" (formula "17") (term "0,0,1"))
                  (rule "applyOnRigidTerm" (formula "19") (term "2,0,0"))
                  (rule "applyOnPV" (formula "19") (term "0,2,0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,2,0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,2,0,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "0,0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,0,0,0"))
                  (rule "applyOnPV" (formula "19") (term "0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "2,1,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "1,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "0,1,1,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "19") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "19") (term "0,0,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "0,2,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,0,2,1,0"))
                  (rule "applyOnPV" (formula "19") (term "0,0,2,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,0,2,1,0"))
                  (rule "applyOnRigidTerm" (formula "19") (term "1,1,1,0"))
                  (rule "applyOnPV" (formula "19") (term "0,1,1,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "1,1,1,1,0"))
                  (rule "simplifyUpdate1" (formula "19") (term "2,1,1,1,0"))
                  (rule "dismissNonSelectedField" (formula "19") (term "0,1,0"))
                  (rule "dismissNonSelectedField" (formula "19") (term "0,2,1,0"))
                  (rule "assignment" (formula "25") (term "1"))
                  (rule "sequentialToParallel2" (formula "25"))
                  (rule "simplifyUpdate2" (formula "25"))
                  (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                  (rule "assignment" (formula "25") (term "1"))
                  (rule "sequentialToParallel2" (formula "25"))
                  (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                  (rule "blockBreakNoLabel" (formula "25") (term "1"))
                  (rule "pullOutSelect" (formula "20") (term "1") (inst "selectSK=java_util_LinkedList_nodeIndex_2"))
                  (rule "simplifySelectOfStore" (formula "21"))
                  (rule "eqClose" (formula "21") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "21") (term "0,0,0"))
                  (rule "eqClose" (formula "21") (term "0,0,0"))
                  (rule "concrete_and_1" (formula "21") (term "0,0"))
                  (rule "equalUnique" (formula "21") (term "0,0,0"))
                  (rule "concrete_not_2" (formula "21") (term "0,0"))
                  (rule "ifthenelse_true" (formula "21") (term "0"))
                  (rule "castDel" (formula "21") (term "0"))
                  (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "16"))
                  (rule "replaceKnownSelect_taclet000010_0" (formula "20") (term "2,0"))
                  (rule "ifthenelse_concrete4" (formula "20"))
                  (rule "replaceKnownSelect_taclet000010_1" (formula "19") (term "2,0,0"))
                  (rule "elementOfFreshLocs" (formula "20") (term "1,0,0"))
                  (rule "replaceKnownSelect_taclet000010_1" (formula "19") (term "1,1,1,0"))
                  (rule "elementOfAllLocs" (formula "20") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "20") (term "0,0,0"))
                  (rule "equalUnique" (formula "20") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "20") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "20") (term "0,0"))
                  (rule "concrete_not_1" (formula "20") (term "0"))
                  (rule "concrete_or_2" (formula "20"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000010_2" (formula "20") (term "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000010_2" (formula "19") (term "2,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000010_2" (formula "19") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "1,1,0"))
                  (rule "add_literals" (formula "19") (term "0,1,1,0"))
                  (rule "pullOutSelect" (formula "19") (term "1") (inst "selectSK=java_util_LinkedList_nodeList_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                  (rule "elementOfFreshLocs" (formula "19") (term "1,0,0"))
                  (rule "elementOfAllLocs" (formula "19") (term "0,0,0,0"))
                  (rule "concrete_and_1" (formula "19") (term "0,0,0"))
                  (rule "equalUnique" (formula "19") (term "0,0,0,0"))
                  (rule "concrete_not_2" (formula "19") (term "0,0,0"))
                  (rule "concrete_or_1" (formula "19") (term "0,0"))
                  (rule "ifthenelse_true" (formula "19") (term "0"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "19") (term "1"))
                  (rule "eqSymm" (formula "19"))
                  (rule "shift_paren_or" (formula "17"))
                  (rule "blockBreakLabel" (formula "25") (term "1"))
                  (rule "blockEmpty" (formula "25") (term "1"))
                  (rule "tryEmpty" (formula "25") (term "1"))
                  (rule "methodCallEmpty" (formula "25") (term "1"))
                  (rule "emptyModality" (formula "25") (term "1"))
                  (rule "applyOnRigidFormula" (formula "25"))
                  (rule "simplifyUpdate2" (formula "25") (term "0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,0,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,1,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0"))
                  (rule "boolean_not_equal_2" (formula "25") (term "0,0"))
                  (rule "concrete_impl_2" (formula "25") (term "0"))
                  (rule "concrete_and_1" (formula "25"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,1,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0"))
                  (rule "boolean_equal" (formula "25") (term "0,0"))
                  (rule "concrete_impl_1" (formula "25") (term "0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,0,1,1"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,1"))
                  (rule "simplifyUpdate1" (formula "25") (term "0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,1,1"))
                  (rule "applyOnPV" (formula "25") (term "1,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,1"))
                  (rule "boolean_equal" (formula "25") (term "0,0,0,1"))
                  (rule "concrete_or_1" (formula "25") (term "0,0,1"))
                  (rule "concrete_not_1" (formula "25") (term "0,1"))
                  (rule "concrete_impl_2" (formula "25") (term "1"))
                  (rule "concrete_and_3" (formula "25"))
                  (rule "methodCallReturn" (formula "25") (term "1"))
                  (rule "assignment" (formula "25") (term "1"))
                  (rule "sequentialToParallel2" (formula "25"))
                  (rule "simplifyUpdate2" (formula "25"))
                  (rule "simplifyUpdate3" (formula "25") (term "1,0"))
                  (rule "applyOnElementary" (formula "25") (term "1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,1,0"))
                  (rule "methodCallEmpty" (formula "25") (term "1"))
                  (rule "tryEmpty" (formula "25") (term "1"))
                  (rule "emptyModality" (formula "25") (term "1"))
                  (rule "applyOnRigidFormula" (formula "25"))
                  (rule "simplifyUpdate2" (formula "25") (term "0"))
                  (rule "simplifyUpdate2" (formula "25") (term "1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1"))
                  (rule "applyOnPV" (formula "25") (term "0,1"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "0,1,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,1,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,1,1,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,1,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,1,1,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "1,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "0,1,0,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "0,1,1,0,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,1,0,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,1,0,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,0,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,1,0,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,1,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,1,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,1,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,1,1,0,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,1,1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,1,1,0,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,1,1,0,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,1,0,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,1,1,0,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,0,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "2,1,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate2" (formula "25") (term "0,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,0,1,0,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,0,1,0,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0,0,1,0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,1,0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,0,1,0,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,2,1,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,2,1,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,2,1,0,1,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,2,1,0,1,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,1,0,1,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0,1,0,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,1,0,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,2,0,0,1,1,1,0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "25") (term "0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,2,0,1,1,1,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnRigidTerm" (formula "25") (term "0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "applyOnPV" (formula "25") (term "0,0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "1,0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "simplifyUpdate1" (formula "25") (term "2,0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                  (rule "andRight" (formula "25"))
                  (branch "Case 1"
                     (rule "andRight" (formula "25"))
                     (branch "Case 1"
                        (rule "impRight" (formula "25"))
                        (rule "notLeft" (formula "1"))
                        (rule "andRight" (formula "26"))
                        (branch "Case 1"
                           (rule "boolean_equal" (formula "23"))
                           (rule "closeTrue" (formula "23"))
                        )
                        (branch "Case 2"
                           (rule "boolean_equal" (formula "23"))
                           (rule "closeTrue" (formula "23"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "25"))
                        (branch "Case 1"
                           (rule "impRight" (formula "25"))
                           (rule "exRight" (formula "26") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                           (rule "andRight" (formula "26"))
                           (branch "Case 1"
                              (rule "andRight" (formula "26"))
                              (branch "Case 1"
                                 (rule "boolean_equal" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replaceKnownSelect_taclet000010_3" (formula "26") (term "1,1,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "26") (term "1,1,0,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "26") (term "0,0,1,0,0,0,1,0"))
                                 (rule "concrete_or_2" (formula "26") (term "0,1,0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "concrete_or_1" (formula "26") (term "1,1,0,0,0,1,0"))
                                 (rule "concrete_and_3" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "26") (term "0,0,1,1,0"))
                                 (rule "concrete_or_2" (formula "26") (term "0,1,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,1,1,0") (ifseqformula "2"))
                                 (rule "concrete_or_1" (formula "26") (term "1,1,1,0"))
                                 (rule "concrete_and_3" (formula "26") (term "1,1,0"))
                                 (rule "inEqSimp_geqRight" (formula "25"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                 (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "2"))
                                 (rule "concrete_or_1" (formula "18") (term "0"))
                                 (rule "concrete_or_1" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "25") (term "1,1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "10") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "10") (term "0"))
                                 (rule "concrete_and_2" (formula "10"))
                                 (rule "closeFalse" (formula "10"))
                              )
                              (branch "Case 2"
                                 (rule "boolean_equal" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "replaceKnownSelect_taclet000010_3" (formula "26") (term "1,1,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "26") (term "1,1,0,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0,1,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "26") (term "0,0,1,1,0"))
                                 (rule "concrete_or_2" (formula "26") (term "0,1,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "concrete_or_1" (formula "26") (term "1,1,0,0,0,1,0"))
                                 (rule "concrete_and_3" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,1,1,1,0") (ifseqformula "2"))
                                 (rule "concrete_or_1" (formula "26") (term "1,1,1,0"))
                                 (rule "concrete_and_3" (formula "26") (term "1,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,1,0,0,0,1,0") (ifseqformula "2"))
                                 (rule "concrete_not_1" (formula "26") (term "0,1,0,0,0,1,0"))
                                 (rule "concrete_or_2" (formula "26") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_leqRight" (formula "25"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "19"))
                                 (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "2"))
                                 (rule "concrete_or_1" (formula "18") (term "0"))
                                 (rule "concrete_or_1" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "applyEq" (formula "25") (term "1,1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "26"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "26"))
                                 (branch "Case 1"
                                    (rule "boolean_equal" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replaceKnownSelect_taclet000010_3" (formula "26") (term "1,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "26") (term "1,1,0,1,0"))
                                    (rule "allRight" (formula "25") (inst "sk=i_15"))
                                    (rule "orRight" (formula "25"))
                                    (rule "orRight" (formula "25"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                    (rule "concrete_or_2" (formula "28") (term "0,1,0,0,0,1,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                    (rule "concrete_or_1" (formula "28") (term "1,1,0,0,0,1,0"))
                                    (rule "concrete_and_3" (formula "28") (term "1,0,0,0,1,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,1,1,1,0") (ifseqformula "2"))
                                    (rule "concrete_or_1" (formula "28") (term "1,1,1,0"))
                                    (rule "concrete_and_3" (formula "28") (term "1,1,0"))
                                    (rule "replace_known_left" (formula "28") (term "0,0,1,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "28") (term "0,1,1,0"))
                                    (rule "concrete_or_2" (formula "28") (term "1,1,0"))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "27") (term "0,0"))
                                    (rule "concrete_or_2" (formula "27") (term "0"))
                                    (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "2"))
                                    (rule "concrete_or_1" (formula "27") (term "1"))
                                    (rule "concrete_and_3" (formula "27"))
                                    (rule "notRight" (formula "27"))
                                    (rule "inEqSimp_leqRight" (formula "26"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "21"))
                                    (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "4"))
                                    (rule "concrete_or_1" (formula "20") (term "0"))
                                    (rule "concrete_or_1" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "applyEq" (formula "27") (term "1,1,0,1,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "20") (term "1") (ifseqformula "4"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "nnf_ex2all" (formula "27"))
                                    (rule "nnf_notAnd" (formula "1") (term "0"))
                                    (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "1") (term "0,1,0"))
                                    (rule "nnf_notAll" (formula "1") (term "0,0,1,0"))
                                    (rule "nnf_notOr" (formula "1") (term "0,0,0,1,0"))
                                    (rule "double_not" (formula "1") (term "1,0,0,0,1,0"))
                                    (rule "nnf_notOr" (formula "1") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0,1,0"))
                                    (rule "commute_and_2" (formula "1") (term "0,0,0,1,0"))
                                    (rule "commute_and" (formula "1") (term "0,0,0,0,1,0"))
                                    (rule "allLeft" (formula "16") (inst "t=i_15"))
                                    (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "16") (term "0,0"))
                                    (rule "concrete_or_2" (formula "16") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                    (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                    (rule "leq_literals" (formula "16") (term "0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "16") (term "0"))
                                    (rule "concrete_and_2" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                                 (branch "Case 2"
                                    (rule "boolean_equal" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replaceKnownSelect_taclet000010_3" (formula "25") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "25") (term "1"))
                                    (rule "replaceKnownSelect_taclet000010_3" (formula "26") (term "1,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "26") (term "1,1,0,1,0"))
                                    (rule "eqSymm" (formula "25"))
                                    (rule "replace_known_left" (formula "26") (term "0,1,1,1,0") (ifseqformula "2"))
                                    (rule "concrete_or_1" (formula "26") (term "1,1,1,0"))
                                    (rule "concrete_and_3" (formula "26") (term "1,1,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                    (rule "concrete_or_1" (formula "26") (term "1,1,0,0,0,1,0"))
                                    (rule "concrete_and_3" (formula "26") (term "1,0,0,0,1,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,1,0,0,0,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "26") (term "0,1,0,0,0,1,0"))
                                    (rule "concrete_or_2" (formula "26") (term "1,0,0,0,1,0"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,1,1,0") (ifseqformula "2"))
                                    (rule "concrete_not_1" (formula "26") (term "0,1,1,0"))
                                    (rule "concrete_or_2" (formula "26") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "1,1,1"))
                                    (rule "add_literals" (formula "25") (term "0,1,1,1"))
                                    (rule "eqClose" (formula "25"))
                                    (rule "closeTrue" (formula "25"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "26"))
                                 (branch "Case 1"
                                    (rule "orRight" (formula "26"))
                                    (rule "notRight" (formula "26"))
                                    (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "6") (userinteraction))
                                    (rule "andLeft" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "orLeft" (formula "11"))
                                    (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "boolean_equal" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "replaceKnownSelect_taclet000010_3" (formula "33") (term "1,1,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "33") (term "1,1,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                       (rule "eqSymm" (formula "13") (term "1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                       (rule "concrete_or_2" (formula "33") (term "0,1,0,0,0,1,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                       (rule "concrete_or_1" (formula "33") (term "1,1,0,0,0,1,0"))
                                       (rule "concrete_and_3" (formula "33") (term "1,0,0,0,1,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,1,1,1,0") (ifseqformula "2"))
                                       (rule "concrete_or_1" (formula "33") (term "1,1,1,0"))
                                       (rule "concrete_and_3" (formula "33") (term "1,1,0"))
                                       (rule "replace_known_left" (formula "33") (term "0,0,1,1,0") (ifseqformula "2"))
                                       (rule "concrete_not_1" (formula "33") (term "0,1,1,0"))
                                       (rule "concrete_or_2" (formula "33") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0,1,0"))
                                       (rule "eqSymm" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "33") (term "0,1,0,1,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "26") (term "0,0,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "33") (term "0,2,1,1,1,0,1,0") (ifseqformula "10"))
                                       (rule "lenOfSeqEmpty" (formula "33") (term "2,1,1,1,0,1,0"))
                                       (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "25") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "25"))
                                       (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "25"))
                                       (rule "concrete_or_1" (formula "24") (term "0"))
                                       (rule "concrete_or_1" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "lenOfSeqEmpty" (formula "9") (term "0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "32") (term "0,0,0,1,0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "32") (term "2,1,0,1,0,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "25") (term "2,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "10"))
                                       (rule "lenOfSeqEmpty" (formula "32") (term "1,1,1,0,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "32") (term "0,1,0,1,0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                       (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "9") (term "0,0,0,1,1,0") (ifseqformula "10"))
                                       (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
                                       (rule "lenOfSeqEmpty" (formula "8") (term "0"))
                                       (rule "leq_literals" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "applyEq" (formula "8") (term "0,0,0,0,1,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "31") (term "0,0,1,1,0,1,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "lenOfSeqEmpty" (formula "12") (term "0,1,0,0,1,0,0"))
                                       (rule "times_zero_2" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                                       (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                                       (rule "eqSymm" (formula "7"))
                                       (rule "applyEq" (formula "31") (term "0,1,1,1,0,1,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "31") (term "2,1,0,1,0,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "24") (term "2,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                       (rule "mul_literals" (formula "17") (term "1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "applyEq" (formula "30") (term "1,1,0,1,0") (ifseqformula "23"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                       (rule "mul_literals" (formula "16") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "16"))
                                       (rule "qeq_literals" (formula "15") (term "0"))
                                       (rule "concrete_and_2" (formula "15"))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                    (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "notLeft" (formula "12"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "notLeft" (formula "12"))
                                       (rule "notLeft" (formula "11"))
                                       (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                                       (rule "impLeft" (formula "10") (userinteraction))
                                       (branch "Case 1"
                                          (rule "boolean_equal" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "insert_constant_value" (formula "8") (term "1"))
                                          (rule "replaceKnownSelect_taclet000010_3" (formula "38") (term "1,1,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet000010_4" (formula "38") (term "1,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "replace_known_left" (formula "38") (term "0,1,1,1,0") (ifseqformula "2"))
                                          (rule "concrete_or_1" (formula "38") (term "1,1,1,0"))
                                          (rule "concrete_and_3" (formula "38") (term "1,1,0"))
                                          (rule "replace_known_left" (formula "38") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "38") (term "0,0,1,0,0,0,1,0"))
                                          (rule "concrete_or_2" (formula "38") (term "0,1,0,0,0,1,0"))
                                          (rule "replace_known_left" (formula "38") (term "0,1,1,0,0,0,1,0") (ifseqformula "2"))
                                          (rule "concrete_or_1" (formula "38") (term "1,1,0,0,0,1,0"))
                                          (rule "concrete_and_3" (formula "38") (term "1,0,0,0,1,0"))
                                          (rule "replace_known_left" (formula "38") (term "0,0,1,1,0") (ifseqformula "2"))
                                          (rule "concrete_not_1" (formula "38") (term "0,1,1,0"))
                                          (rule "concrete_or_2" (formula "38") (term "1,1,0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "12") (term "0"))
                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,1"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                          (rule "times_zero_2" (formula "31") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "31") (term "0,0"))
                                          (rule "applyEq" (formula "38") (term "1,1,0,1,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "26"))
                                          (rule "concrete_or_1" (formula "25") (term "0"))
                                          (rule "concrete_or_1" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "applyEq" (formula "37") (term "1,1,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "30") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "26") (term "2,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "37") (term "2,1,0,1,0,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0"))
                                          (rule "mul_literals" (formula "30") (term "1,0"))
                                          (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "17"))
                                          (rule "concrete_and_1" (formula "30"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "20"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                          (rule "add_literals" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0"))
                                          (rule "leq_literals" (formula "20"))
                                          (rule "closeFalse" (formula "20"))
                                       )
                                       (branch "Case 2"
                                          (rule "andLeft" (formula "10") (userinteraction))
                                          (rule "castAdd" (formula "24") (term "0") (ifseqformula "11") (userinteraction))
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "24") (userinteraction))
                                          (rule "castedGetAny" (formula "2") (term "1,0") (userinteraction))
                                          (rule "close" (formula "39") (ifseqformula "2") (userinteraction))
                                       )
                                    )
                                 )
                                 (branch
                                    (rule "orRight" (formula "26"))
                                    (rule "close" (formula "26") (ifseqformula "3"))
                                 )
                              )
                           )
                        )
                        (branch
                           (rule "close" (formula "25") (ifseqformula "21"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "eqClose" (formula "25"))
                     (rule "closeTrue" (formula "25"))
                  )
               )
               (branch "Exceptional Post (unlink)"
                  (rule "simplifyUpdate2" (formula "16"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,1,1,1,1,1"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,0,1,1,1,1,1"))
                  (rule "eqSymm" (formula "16") (term "0,0,0,0,1,1,1,1,1"))
                  (rule "sequentialToParallel2" (formula "19"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "simplifyUpdate3" (formula "19") (term "1,0"))
                  (rule "sequentialToParallel2" (formula "16"))
                  (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                  (rule "andLeft" (formula "16"))
                  (rule "simplifyUpdate2" (formula "16"))
                  (rule "simplifyUpdate3" (formula "16") (term "1,0"))
                  (rule "parallelWithSkip2" (formula "16") (term "0"))
                  (rule "applyOnElementary" (formula "17") (term "1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0"))
                  (rule "sequentialToParallel2" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                  (rule "andLeft" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "andLeft" (formula "18"))
                  (rule "simplifyUpdate2" (formula "19"))
                  (rule "andLeft" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "andLeft" (formula "19"))
                  (rule "simplifyUpdate2" (formula "20"))
                  (rule "notLeft" (formula "17"))
                  (rule "close" (formula "21") (ifseqformula "20"))
               )
               (branch "Case 3"
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17") (term "1"))
                  (rule "applyOnRigidFormula" (formula "17"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "1,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,1,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,1,1,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,0,1,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,1,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0,0,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0,1,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,1,0,0,1,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,0,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,0,0,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,1,0,1,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,1,1,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,1,1,0,0,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,1,0,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,1,1,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,1,0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,1,1,1,0,0,0"))
                  (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "orLeft" (formula "10"))
                  (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "insert_constant_value" (formula "8") (term "1"))
                     (rule "wellFormedStorePrimitive" (formula "24") (term "0,1"))
                     (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                     (rule "eqSymm" (formula "14") (term "1,0"))
                     (rule "eqSymm" (formula "13") (term "1,0"))
                     (rule "replace_known_right" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                     (rule "concrete_not_2" (formula "24") (term "1,1,0"))
                     (rule "concrete_and_3" (formula "24") (term "1,0"))
                     (rule "replace_known_right" (formula "24") (term "0,1,1") (ifseqformula "22"))
                     (rule "concrete_or_2" (formula "24") (term "1,1"))
                     (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "3"))
                     (rule "concrete_and_1" (formula "24") (term "1"))
                     (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                     (rule "dismissNonSelectedField" (formula "24") (term "0,1,1,1,0,0,0"))
                     (rule "castedGetAny" (formula "24") (term "0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "replace_known_left" (formula "24") (term "0,0,0,0,0") (ifseqformula "10"))
                     (rule "concrete_not_1" (formula "24") (term "0,0,0,0"))
                     (rule "concrete_and_2" (formula "24") (term "0,0,0"))
                     (rule "concrete_and_2" (formula "24") (term "0,0"))
                     (rule "concrete_and_2" (formula "24") (term "0"))
                     (rule "concrete_and_2" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                     (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                     (rule "castedGetAny" (formula "14") (term "0,1,0"))
                     (rule "eqSymm" (formula "14") (term "1,0"))
                     (rule "castedGetAny" (formula "13") (term "0,1,0"))
                     (rule "eqSymm" (formula "13") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                     (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "applyEq" (formula "19") (term "0,1,0,0,0,0,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                     (rule "lenOfSeqEmpty" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                     (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "10"))
                     (rule "lenOfSeqEmpty" (formula "17") (term "0"))
                     (rule "qeq_literals" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                     (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "9") (term "0,0,0,1,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "10"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "10"))
                     (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                     (rule "eqSymm" (formula "7"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "leq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                     (rule "inEqSimp_homoInEq1" (formula "16"))
                     (rule "times_zero_2" (formula "16") (term "1,0"))
                     (rule "add_zero_right" (formula "16") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "16"))
                     (rule "qeq_literals" (formula "15") (term "0"))
                     (rule "concrete_and_2" (formula "15"))
                     (rule "closeFalse" (formula "15"))
                  )
                  (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "10"))
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                 (rule "notRight" (formula "28"))
                                 (rule "insert_constant_value" (formula "9") (term "1"))
                                 (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                 (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                 (rule "close" (formula "24") (ifseqformula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "28"))
                                 (branch "Case 1"
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                    (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "24") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeIndex_6"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (rule "concrete_and_2" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "Case 2"
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "28") (term "0,1"))
                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "castedGetAny" (formula "13") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "24") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeIndex_5"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_commuteGeq" (formula "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "dismissNonSelectedField" (formula "28") (term "0,0,0") (userinteraction))
                              (rule "selectOfStore" (formula "28") (term "1,0,0") (userinteraction))
                              (rule "eqClose" (formula "28") (term "0,0,0,1,0,0") (userinteraction))
                              (rule "equalUnique" (formula "28") (term "1,0,0,1,0,0") (userinteraction))
                              (rule "equalUnique" (formula "28") (term "0,1,0,1,0,0") (userinteraction))
                              (rule "concrete_and_3" (formula "28") (term "0,0,1,0,0") (userinteraction))
                              (rule "concrete_and_1" (formula "28") (term "0,1,0,0") (userinteraction))
                              (rule "concrete_not_2" (formula "28") (term "0,1,0,0") (userinteraction))
                              (rule "ifthenelse_true" (formula "28") (term "1,0,0") (userinteraction))
                              (rule "castDel" (formula "28") (term "1,0,0") (userinteraction))
                              (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                              (rule "impLeft" (formula "9") (userinteraction))
                              (branch "Case 1"
                                 (rule "insert_constant_value" (formula "8") (term "1"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                 (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                 (rule "castedGetAny" (formula "29") (term "0"))
                                 (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "12") (term "0"))
                                 (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "castedGetAny" (formula "13") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                 (rule "times_zero_2" (formula "23") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                 (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "23") (term "0,1,0,1") (ifseqformula "7"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0"))
                                 (rule "mul_literals" (formula "23") (term "1,0"))
                                 (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "17"))
                                 (rule "concrete_and_1" (formula "23"))
                                 (rule "inEqSimp_leqRight" (formula "23"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "andLeft" (formula "9") (userinteraction))
                                 (rule "castAdd" (formula "23") (term "0") (ifseqformula "10") (userinteraction))
                                 (rule "close" (formula "30") (ifseqformula "23"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                              (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "28") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
                              (rule "andRight" (formula "28"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "28"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "28"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "28"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "28"))
                                          (branch "Case 1"
                                             (rule "insert_constant_value" (formula "8") (term "1"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                                             (rule "close" (formula "28") (ifseqformula "7"))
                                          )
                                          (branch "Case 2"
                                             (rule "insert_constant_value" (formula "8") (term "1"))
                                             (rule "insert_constant_value" (formula "28") (term "1"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "0,0"))
                                             (rule "close" (formula "28") (ifseqformula "8"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "insert_constant_value" (formula "8") (term "1"))
                                          (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                          (rule "allRight" (formula "28") (inst "sk=i_1_0"))
                                          (rule "impRight" (formula "28"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "eqSymm" (formula "17") (term "1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,1"))
                                          (rule "dismissNonSelectedField" (formula "30") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                          (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0"))
                                          (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0"))
                                          (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "15") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv"))
                                          (rule "lenOfSeqEmpty" (formula "25") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                          (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1") (ifseqformula "9"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "add_literals" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "nnf_imp2or" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                          (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                          (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "commute_or_2" (formula "18") (term "0"))
                                          (rule "commute_or" (formula "17") (term "0,0"))
                                          (rule "commute_or" (formula "18") (term "0,0"))
                                          (rule "cnf_rightDist" (formula "12") (term "0"))
                                          (rule "distr_forallAnd" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "commute_or_2" (formula "12") (term "0"))
                                          (rule "shift_paren_or" (formula "13") (term "0"))
                                          (rule "commute_or" (formula "12") (term "0,0"))
                                          (rule "cut_direct" (formula "33") (term "0,0"))
                                          (branch "CUT: self.nodeList[i_1_0] = null TRUE"
                                             (rule "typeEqDerived" (formula "34") (term "0,1") (ifseqformula "1"))
                                             (rule "boolean_equal" (formula "34") (term "1"))
                                             (rule "concrete_and_3" (formula "34"))
                                             (rule "concrete_not_1" (formula "34"))
                                             (rule "false_right" (formula "34"))
                                             (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                             (rule "castedGetAny" (formula "17") (term "0"))
                                             (rule "eqClose" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                             (rule "castedGetAny" (formula "18") (term "0"))
                                             (rule "eqClose" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "allLeft" (formula "13") (inst "t=i_1_0"))
                                             (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "13") (term "0,0"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                             (rule "leq_literals" (formula "13") (term "0,1"))
                                             (rule "concrete_and_2" (formula "13") (term "1"))
                                             (rule "concrete_or_4" (formula "13"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "13"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_and_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: self.nodeList[i_1_0] = null FALSE"
                                             (rule "concrete_not_2" (formula "34") (term "0"))
                                             (rule "concrete_and_1" (formula "34"))
                                             (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "0"))
                                             (rule "eqClose" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                             (rule "castedGetAny" (formula "17") (term "0"))
                                             (rule "eqClose" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "allLeft" (formula "13") (inst "t=i_1_0"))
                                             (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "35"))
                                             (rule "concrete_or_2" (formula "13") (term "0"))
                                             (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "13") (term "0,0,1"))
                                             (rule "leq_literals" (formula "13") (term "0,1"))
                                             (rule "concrete_and_2" (formula "13") (term "1"))
                                             (rule "concrete_or_4" (formula "13"))
                                             (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "13"))
                                             (rule "leq_literals" (formula "2") (term "0"))
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "28"))
                                       (rule "andRight" (formula "29"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "29"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "29"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "29"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "29"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "29"))
                                                      (branch "Case 1"
                                                         (rule "notRight" (formula "29"))
                                                         (rule "andRight" (formula "29"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "29"))
                                                            (branch
                                                               (rule "close" (formula "29") (ifseqformula "1"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "insert_constant_value" (formula "9") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "eqSymm" (formula "16") (term "1,0"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "eqSymm" (formula "14"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                               (rule "close" (formula "24") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "insert_constant_value" (formula "9") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "16") (term "1,0"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "close" (formula "24") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "notRight" (formula "29"))
                                                         (rule "andRight" (formula "29"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "29"))
                                                            (branch "Case 1"
                                                               (rule "insert_constant_value" (formula "9") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "eqSymm" (formula "16") (term "1,0"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "eqSymm" (formula "14"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                               (rule "close" (formula "25") (ifseqformula "1"))
                                                            )
                                                            (branch
                                                               (rule "close" (formula "29") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "insert_constant_value" (formula "9") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "16") (term "1,0"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "close" (formula "25") (ifseqformula "1"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "28"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "28"))
                                                         (branch "Case 1"
                                                            (rule "insert_constant_value" (formula "8") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "28") (term "1,0"))
                                                            (rule "castedGetAny" (formula "12") (term "0"))
                                                            (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                            (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                            (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                            (rule "close" (formula "28") (ifseqformula "10"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "insert_constant_value" (formula "8") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                            (rule "castedGetAny" (formula "12") (term "0"))
                                                            (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                            (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                            (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "28") (term "1,0"))
                                                            (rule "close" (formula "28") (ifseqformula "10"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "insert_constant_value" (formula "8") (term "1"))
                                                         (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "12"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                         (rule "castedGetAny" (formula "12") (term "0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "28") (term "1,0"))
                                                         (rule "close" (formula "28") (ifseqformula "10"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "notRight" (formula "29"))
                                                   (rule "andRight" (formula "29"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "29"))
                                                      (branch "Case 1"
                                                         (rule "insert_constant_value" (formula "9") (term "1"))
                                                         (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "16") (term "1,0"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "eqSymm" (formula "14"))
                                                         (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "close" (formula "26") (ifseqformula "1"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "insert_constant_value" (formula "9") (term "1"))
                                                         (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "16") (term "1,0"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "eqSymm" (formula "14"))
                                                         (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                         (rule "close" (formula "26") (ifseqformula "1"))
                                                      )
                                                   )
                                                   (branch
                                                      (rule "close" (formula "29") (ifseqformula "1"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "28"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "28"))
                                                   (branch "Case 1"
                                                      (rule "insert_constant_value" (formula "8") (term "1"))
                                                      (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                      (rule "close" (formula "28") (ifseqformula "11"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "insert_constant_value" (formula "8") (term "1"))
                                                      (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                      (rule "castedGetAny" (formula "12") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "28") (term "1,0"))
                                                      (rule "close" (formula "28") (ifseqformula "11"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "insert_constant_value" (formula "8") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "29") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                   (rule "castedGetAny" (formula "12") (term "0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "1,0"))
                                                   (rule "close" (formula "28") (ifseqformula "11"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "28"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "28"))
                                                (branch "Case 1"
                                                   (rule "insert_constant_value" (formula "8") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                                   (rule "close" (formula "28") (ifseqformula "12"))
                                                )
                                                (branch "Case 2"
                                                   (rule "insert_constant_value" (formula "8") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "29"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                                   (rule "close" (formula "28") (ifseqformula "12"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "insert_constant_value" (formula "8") (term "1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                                (rule "close" (formula "28") (ifseqformula "12"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "28"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "28"))
                                             (branch "Case 1"
                                                (rule "insert_constant_value" (formula "8") (term "1"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "29") (term "1,0,1"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0,0,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "28") (term "0"))
                                                (rule "close" (formula "28") (ifseqformula "13"))
                                             )
                                             (branch "Case 2"
                                                (rule "insert_constant_value" (formula "8") (term "1"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "29") (term "1,0,1"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "29"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                                (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "28") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "28") (term "0"))
                                                (rule "close" (formula "28") (ifseqformula "13"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "insert_constant_value" (formula "8") (term "1"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "29") (term "1,0,1"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "29"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "12") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "1"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "13") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "28") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "28") (term "0"))
                                             (rule "close" (formula "28") (ifseqformula "13"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                    (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                    (rule "allRight" (formula "28") (inst "sk=i_0_0"))
                                    (rule "impRight" (formula "28"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "30") (term "1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                    (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "30") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "castedGetAny" (formula "30") (term "1,1"))
                                    (rule "castedGetAny" (formula "30") (term "0"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1") (ifseqformula "9"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or_2" (formula "17") (term "0"))
                                    (rule "cnf_rightDist" (formula "12") (term "0"))
                                    (rule "distr_forallAnd" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "19") (term "0,0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "shift_paren_or" (formula "13") (term "0"))
                                    (rule "commute_or" (formula "12") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (rule "eqClose" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "33") (term "1"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "33") (term "1,0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (rule "eqClose" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "18") (inst "t=i_0_0"))
                                    (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "34"))
                                    (rule "concrete_or_2" (formula "18") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0"))
                                    (rule "concrete_or_2" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "3"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "insert_constant_value" (formula "8") (term "1"))
                                 (rule "translateJavaSubInt" (formula "28") (term "1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                 (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                 (rule "allRight" (formula "28") (inst "sk=i_12"))
                                 (rule "impRight" (formula "28"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                 (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "14") (term "0"))
                                 (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                 (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "castedGetAny" (formula "15") (term "0"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                 (rule "castedGetAny" (formula "30") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "30") (term "0,0,1,0"))
                                 (rule "castedGetAny" (formula "30") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv"))
                                 (rule "lenOfSeqEmpty" (formula "25") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "9"))
                                 (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1") (ifseqformula "9"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "nnf_imp2or" (formula "12") (term "0"))
                                 (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or_2" (formula "18") (term "0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "commute_or" (formula "18") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "12") (term "0"))
                                 (rule "distr_forallAnd" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "commute_or_2" (formula "12") (term "0"))
                                 (rule "shift_paren_or" (formula "13") (term "0"))
                                 (rule "commute_or" (formula "12") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castedGetAny" (formula "16") (term "0"))
                                 (rule "eqClose" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "seqGetAlphaCast" (formula "33") (term "1"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "33") (term "1,0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castedGetAny" (formula "17") (term "0"))
                                 (rule "eqClose" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "allLeft" (formula "19") (inst "t=i_12"))
                                 (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "34"))
                                 (rule "concrete_or_2" (formula "19") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                 (rule "concrete_and_2" (formula "19") (term "1"))
                                 (rule "concrete_or_4" (formula "19"))
                                 (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (rule "concrete_and_2" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                           )
                           (branch "Case 2"
                              (rule "notRight" (formula "28"))
                              (rule "close" (formula "27") (ifseqformula "1"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "wellFormedStorePrimitive" (formula "28"))
                           (rule "close" (formula "28") (ifseqformula "3"))
                        )
                        (branch "Case 2"
                           (rule "orRight" (formula "28"))
                           (rule "insert_constant_value" (formula "8") (term "1"))
                           (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                           (rule "eqSymm" (formula "12"))
                           (rule "eqSymm" (formula "15") (term "1,0"))
                           (rule "eqSymm" (formula "14") (term "1,0"))
                           (rule "eqSymm" (formula "13"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                           (rule "dismissNonSelectedField" (formula "28") (term "0"))
                           (rule "close" (formula "28") (ifseqformula "22"))
                        )
                     )
                  )
               )
            )
            (branch "if x_9 false"
               (rule "false_to_not_true" (formula "1") (term "1"))
               (rule "simplifyUpdate2" (formula "17"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "applyOnRigidFormula" (formula "14"))
               (rule "applyOnPV" (formula "14") (term "0"))
               (rule "simplifyUpdate1" (formula "14") (term "1"))
               (rule "ifthenelse_concrete3" (formula "14"))
               (rule "boolean_not_equal_2" (formula "14") (term "1"))
               (rule "concrete_or_4" (formula "14"))
               (rule "blockEmpty" (formula "17") (term "1"))
               (rule "assignment_read_attribute" (formula "17"))
               (branch "Normal Execution (x_7 != null)"
                  (rule "sequentialToParallel2" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17"))
                  (rule "simplifyUpdate3" (formula "17") (term "1,0"))
                  (rule "applyOnElementary" (formula "17") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "17") (term "1,0,1,0"))
                  (rule "blockEmptyLabel" (formula "17") (term "1"))
                  (rule "blockEmpty" (formula "17") (term "1"))
                  (rule "tryEmpty" (formula "17") (term "1"))
                  (rule "methodCallEmpty" (formula "17") (term "1"))
                  (rule "emptyModality" (formula "17") (term "1"))
                  (rule "applyOnRigidFormula" (formula "17"))
                  (rule "simplifyUpdate2" (formula "17") (term "0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0"))
                  (rule "boolean_not_equal_2" (formula "17") (term "0,0"))
                  (rule "concrete_impl_2" (formula "17") (term "0"))
                  (rule "concrete_and_1" (formula "17"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0"))
                  (rule "boolean_not_equal_2" (formula "17") (term "0,0"))
                  (rule "concrete_impl_2" (formula "17") (term "0"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,1"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,0,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,0,1,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "0,1,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,1,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,1,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,0,1,1,1"))
                  (rule "applyOnPV" (formula "17") (term "0,1,0,0,1,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,0,0,1,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,1,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,0,1,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,1,1,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,1,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,0,0,1,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,1,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "2,0,0,0,1,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,0,1,1,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,1,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,0,1,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "1,0,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,0,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "0,0,0,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "1,0,0,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,1,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,1,1,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,0,1,1,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "0,0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate2" (formula "17") (term "0,0,0,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,1,0,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,1,0,0,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,1,0,0,0,0,0,1,1"))
                  (rule "applyOnRigidFormula" (formula "17") (term "1,0,0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,0,0,1,0,0,0,0,1,1"))
                  (rule "applyOnRigidTerm" (formula "17") (term "1,1,0,0,1,0,0,0,0,1,1"))
                  (rule "simplifyUpdate1" (formula "17") (term "0,1,1,0,0,1,0,0,0,0,1,1"))
                  (rule "applyOnPV" (formula "17") (term "1,1,1,0,0,1,0,0,0,0,1,1"))
                  (rule "concrete_and_1" (formula "17") (userinteraction))
                  (rule "impRight" (formula "17") (userinteraction))
                  (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "orLeft" (formula "10"))
                  (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                     (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                     (rule "insert_constant_value" (formula "8") (term "1"))
                     (rule "concrete_or_4" (formula "1") (term "0"))
                     (rule "concrete_not_2" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eqClose" (formula "24") (term "0,0,1,0"))
                     (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
                     (rule "eqSymm" (formula "13") (term "1,0"))
                     (rule "eqSymm" (formula "12") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,1,0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,1,1,0,0,0,0,0"))
                     (rule "replace_known_left" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "17"))
                     (rule "concrete_and_3" (formula "24") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,1,1,0,0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,1,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,1,0,1,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "1,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,1,0,1,0,0"))
                     (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1"))
                     (rule "castedGetAny" (formula "12") (term "1,1,1,0"))
                     (rule "castedGetAny" (formula "13") (term "0,1,0"))
                     (rule "eqSymm" (formula "13") (term "1,0"))
                     (rule "castedGetAny" (formula "12") (term "0,1,0"))
                     (rule "eqSymm" (formula "12") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "precOfInt" (formula "24") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,1"))
                     (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "24") (term "0,1,1"))
                     (rule "add_literals" (formula "24") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "24") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "24") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "24") (term "0,0,1,1"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,1"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1,1"))
                     (rule "add_literals" (formula "24") (term "1,0,1,1"))
                     (rule "times_zero_1" (formula "24") (term "0,1,1"))
                     (rule "leq_literals" (formula "24") (term "1,1"))
                     (rule "concrete_and_3" (formula "24") (term "1"))
                     (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "24") (term "1"))
                     (rule "times_zero_2" (formula "24") (term "1,0,1"))
                     (rule "add_zero_right" (formula "24") (term "0,1"))
                     (rule "applyEq" (formula "12") (term "0,1,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                     (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "24") (term "0,0,1,1,0,0,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "9"))
                     (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                     (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                     (rule "leq_literals" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "16") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1,0"))
                     (rule "add_zero_right" (formula "16") (term "0"))
                     (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "7") (term "0,1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "23") (term "0,0,0,1,0,0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "23") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0,0,0"))
                     (rule "times_zero_2" (formula "23") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,0"))
                     (rule "applyEq" (formula "17") (term "0,1,0,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "6") (term "0"))
                     (rule "eqSymm" (formula "6"))
                     (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "15") (term "0"))
                     (rule "qeq_literals" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,1,0,0,0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "22") (term "1,0,1"))
                     (rule "add_zero_right" (formula "22") (term "0,1"))
                     (rule "applyEq" (formula "22") (term "0,0,0,1,0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "22") (term "0,0,1,0,0"))
                     (rule "polySimp_homoEq" (formula "22") (term "0,1,0,0"))
                     (rule "times_zero_2" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "0,0,0,0,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "7") (term "0,0,0,1,1,0") (ifseqformula "8"))
                     (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                     (rule "lenOfSeqEmpty" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "22") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                     (rule "mul_literals" (formula "15") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                     (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "22") (term "1,0,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "22") (term "0,1"))
                     (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "15"))
                     (rule "concrete_and_3" (formula "22"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_contradEq7" (formula "22") (term "0,1,0") (ifseqformula "14"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                     (rule "leq_literals" (formula "22") (term "0,0,1,0"))
                     (rule "concrete_and_2" (formula "22") (term "0,1,0"))
                     (rule "concrete_eq_2" (formula "22") (term "1,0"))
                     (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "15"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (rule "concrete_and_2" (formula "14"))
                     (rule "closeFalse" (formula "14"))
                  )
                  (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "notLeft" (formula "10"))
                     (rule "andRight" (formula "29"))
                     (branch "Case 1"
                        (rule "andRight" (formula "29"))
                        (branch "Case 1"
                           (rule "andRight" (formula "29"))
                           (branch "Case 1"
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "concrete_or_4" (formula "1") (term "0"))
                                       (rule "concrete_not_2" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                                       (rule "eqSymm" (formula "13") (term "1,0"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "11") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "28"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "17") (term "0"))
                                       (rule "concrete_and_2" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "Case 2"
                                       (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "concrete_or_4" (formula "1") (term "0"))
                                       (rule "concrete_not_2" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "13") (term "1,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "1"))
                                       (rule "add_literals" (formula "28") (term "0,1"))
                                       (rule "close" (formula "28") (ifseqformula "18"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "29") (inst "sk=i_11") (userinteraction))
                                    (rule "orRight" (formula "29") (userinteraction))
                                    (rule "orRight" (formula "29") (userinteraction))
                                    (rule "notRight" (formula "31") (userinteraction))
                                    (rule "allLeft" (formula "21") (inst "t=i_11") (userinteraction))
                                    (rule "orLeft" (formula "21") (userinteraction))
                                    (branch " ! (java.util.LinkedList.Node)self.nodeList[i_11].item = null | i_11 <= -1"
                                       (rule "orLeft" (formula "21") (userinteraction))
                                       (branch "! (java.util.LinkedList.Node)self.nodeList[i_11].item = null"
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "insert_constant_value" (formula "9") (term "1"))
                                          (rule "eq_or" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                          (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "close" (formula "23") (ifseqformula "1"))
                                       )
                                       (branch "i_11 <= -1"
                                          (rule "close" (formula "31") (ifseqformula "21"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "geq_to_lt_alt" (formula "21") (userinteraction))
                                       (rule "orLeft" (formula "21") (userinteraction))
                                       (branch "i_11 > 1 + index_1_2"
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "insert_constant_value" (formula "9") (term "1"))
                                          (rule "eq_or" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                          (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "1"))
                                          (rule "add_literals" (formula "31") (term "0,1"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                          (rule "inEqSimp_leqRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                          (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "21"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "31"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "i_11 = 1 + index_1_2"
                                          (rule "applyEqRigid" (formula "1") (term "1,1,0") (ifseqformula "21") (userinteraction))
                                          (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                                          (rule "impLeft" (formula "10") (userinteraction))
                                          (branch "Case 1"
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "concrete_or_2" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "polySimp_homoEq" (formula "20"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "1"))
                                             (rule "add_literals" (formula "32") (term "0,1"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "12") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "31"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                             (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                             (rule "inEqSimp_geqRight" (formula "32"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "9"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "polySimp_sepPosMonomial" (formula "22"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1"))
                                             (rule "mul_literals" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                             (rule "applyEqRigid" (formula "24") (term "1,1,0") (ifseqformula "22"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                             (rule "add_literals" (formula "24") (term "0,1,0"))
                                             (rule "add_zero_left" (formula "24") (term "1,0"))
                                             (rule "applyEqRigid" (formula "3") (term "1,1,1,0") (ifseqformula "22"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "1,1,0"))
                                             (rule "add_literals" (formula "3") (term "0,1,1,0"))
                                             (rule "add_zero_left" (formula "3") (term "1,1,0"))
                                             (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "22"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                             (rule "add_literals" (formula "20") (term "0,1"))
                                             (rule "applyEqRigid" (formula "22") (term "1,1,1,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1,1,0"))
                                             (rule "add_literals" (formula "22") (term "0,1,1,0"))
                                             (rule "add_zero_left" (formula "22") (term "1,1,0"))
                                             (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "21"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "25") (term "0,0"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                             (rule "concrete_and_1" (formula "25"))
                                             (rule "inEqSimp_leqRight" (formula "25"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                                             (rule "inEqSimp_homoInEq1" (formula "19"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0"))
                                             (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_invertInEq0" (formula "19"))
                                             (rule "times_zero_2" (formula "19") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0"))
                                             (rule "add_zero_right" (formula "20") (term "0"))
                                             (rule "leq_literals" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                          (branch "Case 2"
                                             (rule "andLeft" (formula "10") (userinteraction))
                                             (rule "castAdd" (formula "25") (term "0") (ifseqformula "11") (userinteraction))
                                             (rule "castedGetAny" (formula "25") (term "0") (userinteraction))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "25") (userinteraction))
                                             (rule "close" (formula "30") (ifseqformula "1") (userinteraction))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "impRight" (formula "29"))
                                 (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                                 (rule "impLeft" (formula "10") (userinteraction))
                                 (branch "Case 1"
                                    (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                    (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                    (rule "insert_constant_value" (formula "9") (term "1"))
                                    (rule "eq_or" (formula "2") (term "0"))
                                    (rule "concrete_not_2" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "1,0"))
                                    (rule "add_literals" (formula "30") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                    (rule "add_literals" (formula "1") (term "0,1"))
                                    (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0"))
                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "castedGetAny" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                    (rule "times_zero_2" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0"))
                                    (rule "mul_literals" (formula "23") (term "1,0"))
                                    (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "17"))
                                    (rule "concrete_and_1" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "23"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0"))
                                    (rule "add_literals" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                                 (branch "Case 2"
                                    (rule "andLeft" (formula "10") (userinteraction))
                                    (rule "castAdd" (formula "24") (term "0") (ifseqformula "11") (userinteraction))
                                    (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                                    (rule "impLeft" (formula "18") (userinteraction))
                                    (branch "Case 1"
                                       (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                       (rule "insert_constant_value" (formula "9") (term "1"))
                                       (rule "concrete_or_2" (formula "2") (term "0"))
                                       (rule "concrete_not_2" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                       (rule "translateJavaSubInt" (formula "25") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0"))
                                       (rule "notLeft" (formula "9"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                                       (rule "mul_literals" (formula "25") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                       (rule "add_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
                                       (rule "add_literals" (formula "32") (term "0,1,0"))
                                       (rule "castedGetAny" (formula "22") (term "0"))
                                       (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0"))
                                       (rule "mul_literals" (formula "25") (term "1,0"))
                                       (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "18"))
                                       (rule "concrete_and_1" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                       (rule "concrete_or_1" (formula "21"))
                                       (rule "true_left" (formula "21"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "25") (userinteraction))
                                       (rule "allLeftHide" (formula "12") (inst "t=add(Z(1(#)), add(Z(1(#)), index_1_2))") (userinteraction))
                                       (rule "impLeft" (formula "12") (userinteraction))
                                       (branch "Case 1"
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "insert_constant_value" (formula "9") (term "1"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                          (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "eqSymm" (formula "15"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "15") (term "1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                          (rule "add_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "1,0"))
                                          (rule "add_literals" (formula "25") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
                                          (rule "add_literals" (formula "32") (term "0,1,0"))
                                          (rule "castedGetAny" (formula "22") (term "0"))
                                          (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "12") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                          (rule "times_zero_2" (formula "25") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0"))
                                          (rule "mul_literals" (formula "25") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                                          (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                                          (rule "concrete_and_3" (formula "25"))
                                          (rule "inEqSimp_geqRight" (formula "25"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "19") (term "0"))
                                          (rule "concrete_and_2" (formula "19"))
                                          (rule "closeFalse" (formula "19"))
                                       )
                                       (branch "Case 2"
                                          (rule "andLeft" (formula "12") (userinteraction))
                                          (rule "castAdd" (formula "34") (term "0") (ifseqformula "13") (userinteraction))
                                          (rule "switch_brackets" (formula "19") (term "1,0,1") (userinteraction))
                                          (rule "switch_params" (formula "19") (term "1,1,0,1") (userinteraction))
                                          (rule "eqSymm" (formula "34") (userinteraction))
                                          (rule "close" (formula "34") (ifseqformula "19") (userinteraction))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                              (rule "impLeft" (formula "9") (userinteraction))
                              (branch "Case 1"
                                 (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                 (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                 (rule "insert_constant_value" (formula "8") (term "1"))
                                 (rule "concrete_or_2" (formula "1") (term "0"))
                                 (rule "concrete_not_2" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                                 (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "eqSymm" (formula "13") (term "1,0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "1,0"))
                                 (rule "add_literals" (formula "29") (term "0,1,0"))
                                 (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "11") (term "0"))
                                 (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                 (rule "castedGetAny" (formula "13") (term "0,1,0"))
                                 (rule "eqSymm" (formula "13") (term "1,0"))
                                 (rule "castedGetAny" (formula "12") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0"))
                                 (rule "mul_literals" (formula "22") (term "1,0"))
                                 (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "16"))
                                 (rule "concrete_and_1" (formula "22"))
                                 (rule "inEqSimp_leqRight" (formula "22"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradEq3" (formula "29") (term "0") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (rule "concrete_and_2" (formula "29") (term "0"))
                                 (rule "concrete_eq_2" (formula "29"))
                                 (rule "notRight" (formula "29"))
                                 (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "2"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "Case 2"
                                 (rule "andLeft" (formula "9") (userinteraction))
                                 (rule "castAdd" (formula "23") (term "0") (ifseqformula "10") (userinteraction))
                                 (rule "allLeft" (formula "11") (inst "t=add(Z(1(#)), add(Z(1(#)), index_1_2))") (userinteraction))
                                 (rule "impLeft" (formula "11") (userinteraction))
                                 (branch "Case 1"
                                    (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                    (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "concrete_or_2" (formula "1") (term "0"))
                                    (rule "concrete_not_2" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                    (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                    (rule "notLeft" (formula "8"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                    (rule "add_literals" (formula "24") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "1,0"))
                                    (rule "add_literals" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                    (rule "castedGetAny" (formula "21") (term "0"))
                                    (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0"))
                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "castedGetAny" (formula "13") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                    (rule "times_zero_2" (formula "24") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0"))
                                    (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0"))
                                    (rule "mul_literals" (formula "24") (term "1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (term "0") (ifseqformula "17"))
                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                    (rule "concrete_or_1" (formula "24") (term "0"))
                                    (rule "concrete_and_1" (formula "24"))
                                    (rule "inEqSimp_geqRight" (formula "24"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "25") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "20"))
                                    (rule "concrete_eq_1" (formula "32"))
                                    (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "1,0"))
                                    (rule "times_zero_1" (formula "21") (term "0"))
                                    (rule "leq_literals" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "1,1,0,0"))
                                    (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                    (rule "add_literals" (formula "14") (term "0,1,0"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq0" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "25") (term "1,1,1,0,0,1") (ifseqformula "20"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,1"))
                                    (rule "add_literals" (formula "25") (term "0,1,1,0,0,1"))
                                    (rule "applyEq" (formula "25") (term "0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,0"))
                                    (rule "times_zero_1" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "13") (term "1") (ifseqformula "21"))
                                    (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "21"))
                                    (rule "close" (formula "30") (ifseqformula "11"))
                                 )
                                 (branch "Case 2"
                                    (rule "andLeft" (formula "11") (userinteraction))
                                    (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), index_1_2)") (userinteraction))
                                    (rule "impLeft" (formula "19") (userinteraction))
                                    (branch "Case 1"
                                       (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "eq_or" (formula "1") (term "0"))
                                       (rule "concrete_not_2" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "translateJavaSubInt" (formula "26") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                       (rule "notLeft" (formula "8"))
                                       (rule "notLeft" (formula "9"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "polySimp_elimSub" (formula "26") (term "1,1"))
                                       (rule "mul_literals" (formula "26") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                                       (rule "add_literals" (formula "33") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,1,0,0"))
                                       (rule "castedGetAny" (formula "22") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                       (rule "add_literals" (formula "24") (term "0,1,0"))
                                       (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                       (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0"))
                                       (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0"))
                                       (rule "mul_literals" (formula "26") (term "1,0"))
                                       (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "18"))
                                       (rule "concrete_and_1" (formula "26"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "27") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "21"))
                                       (rule "concrete_eq_1" (formula "34"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "21"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "28") (term "1,1,1,0,0,1") (ifseqformula "21"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "28") (term "0,1,1,0,0,1"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_pullOutFactor1" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,0"))
                                       (rule "times_zero_1" (formula "22") (term "0"))
                                       (rule "leq_literals" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0"))
                                       (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "16") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "22"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "22"))
                                       (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "22"))
                                       (rule "close" (formula "31") (ifseqformula "12"))
                                    )
                                    (branch "Case 2"
                                       (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "26") (userinteraction))
                                       (rule "equiv_right" (formula "34") (userinteraction))
                                       (branch "Case 1"
                                          (rule "cut" (inst "cutFormula=  sub(seqLen(Seq::select(heap,
                         self,
                         java.util.LinkedList::$nodeList)),
      Z(1(#)))
= add(Z(1(#)), index_1_2)") (userinteraction))
                                          (branch "CUT: self.nodeList.length - 1 = 1 + index_1_2 TRUE"
                                             (rule "translateJavaSubInt" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_elimSub" (formula "19") (term "1,0,1"))
                                             (rule "polySimp_elimOneLeft0" (formula "19") (term "1,1,0,1"))
                                             (rule "applyEq" (formula "19") (term "0,1,0,1") (ifseqformula "9"))
                                             (rule "polySimp_addComm0" (formula "19") (term "1,0,1"))
                                             (rule "applyEqReverse" (formula "19") (term "1,1,0,1") (ifseqformula "9") (userinteraction))
                                             (rule "sub" (formula "1") (term "0") (userinteraction))
                                             (rule "switch_params" (formula "19") (term "1,0,1") (userinteraction))
                                             (rule "neg_literal" (formula "1") (term "1,0") (userinteraction))
                                             (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "1") (userinteraction))
                                             (rule "applyEq" (formula "19") (term "1") (ifseqformula "28") (userinteraction))
                                             (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "19") (userinteraction))
                                             (rule "close" (formula "36") (ifseqformula "17") (userinteraction))
                                          )
                                          (branch "CUT: self.nodeList.length - 1 = 1 + index_1_2 FALSE"
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "eq_or" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "17") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "notLeft" (formula "10"))
                                             (rule "eqSymm" (formula "18") (term "1,0"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "polySimp_elimSub" (formula "28") (term "0"))
                                             (rule "mul_literals" (formula "28") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_homoEq" (formula "28"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "17") (term "1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "28") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                             (rule "add_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "1,0"))
                                             (rule "add_literals" (formula "26") (term "0,1,0"))
                                             (rule "castedGetAny" (formula "24") (term "0"))
                                             (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                             (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                             (rule "eqSymm" (formula "18") (term "1,0"))
                                             (rule "castedGetAny" (formula "17") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "1"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                                             (rule "add_literals" (formula "15") (term "0,1,0"))
                                             (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "7"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                             (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "7"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                                             (rule "add_literals" (formula "28") (term "1,0"))
                                             (rule "times_zero_1" (formula "28") (term "0"))
                                             (rule "eqClose" (formula "28"))
                                             (rule "closeTrue" (formula "28"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "1") (userinteraction))
                                          (rule "translateJavaSubInt" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,0,1"))
                                          (rule "polySimp_elimOneLeft0" (formula "18") (term "1,1,0,1"))
                                          (rule "applyEq" (formula "18") (term "0,1,0,1") (ifseqformula "8"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,0,1"))
                                          (rule "allLeft" (formula "14") (inst "t=add(add(Z(1(#)), index_1_2), Z(1(#)))") (userinteraction))
                                          (rule "impLeft" (formula "14") (userinteraction))
                                          (branch "Case 1"
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "eq_or" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "20") (term "1,1,0,0"))
                                             (rule "notLeft" (formula "11"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "eqSymm" (formula "18") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "1,0"))
                                             (rule "add_literals" (formula "28") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                             (rule "add_literals" (formula "28") (term "0,0,1"))
                                             (rule "polySimp_addComm1" (formula "17") (term "1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                             (rule "add_literals" (formula "35") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
                                             (rule "add_literals" (formula "27") (term "0,1,0"))
                                             (rule "castedGetAny" (formula "24") (term "0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "17") (term "0"))
                                             (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                             (rule "eqSymm" (formula "18") (term "1,0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "28") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                             (rule "mul_literals" (formula "28") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0"))
                                             (rule "applyEq" (formula "28") (term "0,1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "35") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "22") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0"))
                                             (rule "mul_literals" (formula "28") (term "1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "28") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_strengthen1" (formula "22") (ifseqformula "35"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "1"))
                                             (rule "add_literals" (formula "22") (term "0,1"))
                                             (rule "replace_known_left" (formula "28") (term "1") (ifseqformula "22"))
                                             (rule "concrete_and_3" (formula "28"))
                                             (rule "inEqSimp_geqRight" (formula "28"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "23"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                             (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0"))
                                             (rule "leq_literals" (formula "35") (term "0"))
                                             (rule "concrete_and_2" (formula "35"))
                                             (rule "false_right" (formula "35"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "21"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andLeft" (formula "14") (userinteraction))
                                             (rule "castAdd" (formula "14") (term "0,0") (ifseqformula "15") (userinteraction))
                                             (rule "notLeft" (formula "14") (userinteraction))
                                             (rule "eqSymm" (formula "21") (userinteraction))
                                             (rule "close" (formula "30") (ifseqformula "21") (userinteraction))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                           (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                           (rule "insert_constant_value" (formula "8") (term "1"))
                           (rule "concrete_or_4" (formula "1") (term "0"))
                           (rule "concrete_not_2" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "eqClose" (formula "28") (term "0,0"))
                           (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                           (rule "allRight" (formula "28") (inst "sk=f_0"))
                           (rule "allRight" (formula "28") (inst "sk=o_0_0"))
                           (rule "closeTrue" (formula "28"))
                        )
                     )
                     (branch "Case 2"
                        (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                        (rule "insert_constant_value" (formula "8") (term "1"))
                        (rule "concrete_or_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                        (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                        (rule "eqSymm" (formula "11"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                        (rule "castedGetAny" (formula "11") (term "0"))
                        (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                        (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "castedGetAny" (formula "14") (term "0,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "castedGetAny" (formula "13") (term "0,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "castedGetAny" (formula "12") (term "0"))
                        (rule "precOfInt" (formula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,1"))
                        (rule "mul_literals" (formula "28") (term "0,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,1"))
                        (rule "add_literals" (formula "28") (term "1,1,0,1"))
                        (rule "times_zero_1" (formula "28") (term "1,0,1"))
                        (rule "add_zero_right" (formula "28") (term "0,1"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,1"))
                        (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1"))
                        (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1"))
                        (rule "add_literals" (formula "28") (term "1,0,1"))
                        (rule "times_zero_1" (formula "28") (term "0,1"))
                        (rule "leq_literals" (formula "28") (term "1"))
                        (rule "concrete_and_3" (formula "28"))
                        (rule "inEqSimp_leqRight" (formula "28"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (x_7 = null)"
                  (rule "false_right" (formula "18"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "close" (formula "16") (ifseqformula "1"))
               )
            )
         )
         (branch "Null Reference (x_7 = null)"
            (rule "false_right" (formula "16"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "14") (ifseqformula "1"))
         )
      )
      (branch "if x_8 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "13"))
         (rule "applyOnPV" (formula "13") (term "0"))
         (rule "simplifyUpdate1" (formula "13") (term "1"))
         (rule "boolean_equal" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
   )
   (branch "Use Case"
      (rule "false_to_not_true" (formula "10") (term "0,0,1,1"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "simplifyUpdate2" (formula "10") (term "1"))
      (rule "eqSymm" (formula "8") (term "0,1,0,1,1"))
      (rule "eqSymm" (formula "8") (term "1,1,0,0,1,1"))
      (rule "sequentialToParallel2" (formula "10"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "simplifyUpdate3" (formula "10") (term "1,0"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "0"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_addComm0" (formula "12") (term "1,0,1"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1"))
      (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,1"))
      (rule "polySimp_addComm0" (formula "9") (term "0,1"))
      (rule "polySimp_addComm0" (formula "8") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "castedGetAny" (formula "10") (term "1,0,0,1,0,1"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate2" (formula "12") (term "0"))
      (rule "simplifyUpdate2" (formula "12") (term "1"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "simplifyUpdate2" (formula "11") (term "0"))
      (rule "applyOnRigidFormula" (formula "9"))
      (rule "simplifyUpdate1" (formula "9") (term "1"))
      (rule "applyOnRigidFormula" (formula "8"))
      (rule "simplifyUpdate1" (formula "8") (term "0"))
      (rule "applyOnRigidFormula" (formula "13") (term "0"))
      (rule "applyOnPV" (formula "13") (term "0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "13") (term "1"))
      (rule "simplifyUpdate1" (formula "13") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "10"))
      (rule "applyOnRigidFormula" (formula "12") (term "0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0"))
      (rule "eqSymm" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "applyOnPV" (formula "12") (term "0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "1"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1"))
      (rule "simplifyUpdate1" (formula "11") (term "1,1"))
      (rule "applyOnPV" (formula "11") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "simplifyUpdate1" (formula "11") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,0"))
      (rule "applyOnPV" (formula "9") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "1"))
      (rule "applyOnPV" (formula "8") (term "1,1"))
      (rule "simplifyUpdate1" (formula "8") (term "0,1"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,1"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,1"))
      (rule "applyOnPV" (formula "13") (term "1,0,1"))
      (rule "applyOnRigidFormula" (formula "10") (term "0"))
      (rule "simplifyUpdate2" (formula "10") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,0"))
      (rule "eqSymm" (formula "12") (term "0"))
      (rule "applyOnRigidTerm" (formula "11") (term "0,1"))
      (rule "simplifyUpdate1" (formula "11") (term "0,0,1"))
      (rule "applyOnRigidTerm" (formula "11") (term "0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,0,0"))
      (rule "applyOnPV" (formula "11") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "10") (term "0,0"))
      (rule "simplifyUpdate2" (formula "10") (term "0,0,0"))
      (rule "applyOnRigidTerm" (formula "11") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1,0,1"))
      (rule "applyOnPV" (formula "11") (term "1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "10") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "10") (term "1,1,0,0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,1,1,0,0"))
      (rule "applyOnPV" (formula "10") (term "1,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "times_zero_2" (formula "8") (term "1,0"))
      (rule "add_zero_right" (formula "8") (term "0"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "b_3_1"))
      (rule "blockEmpty" (formula "15") (term "1,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "inequality_comparison_simple" (formula "15") (term "1"))
      (rule "sequentialToParallel2" (formula "15"))
      (rule "simplifyUpdate2" (formula "15"))
      (rule "simplifyUpdate3" (formula "15") (term "1,0"))
      (rule "applyOnElementary" (formula "15") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "15") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0"))
      (rule "applyOnPV" (formula "15") (term "0,0,0,1,0"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "emptyModality" (formula "15") (term "1"))
      (rule "impRight" (formula "15"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "simplifyUpdate1" (formula "14") (term "1"))
      (rule "applyOnPV" (formula "14") (term "0"))
      (rule "ifthenelse_concrete4" (formula "14"))
      (rule "boolean_not_equal_2" (formula "14") (term "1"))
      (rule "concrete_or_4" (formula "14"))
      (rule "notRight" (formula "14"))
      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "1"))
      (rule "concrete_eq_3" (formula "13"))
      (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
      (rule "concrete_or_1" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "1"))
      (rule "methodCallReturn" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (rule "sequentialToParallel2" (formula "15"))
      (rule "simplifyUpdate3" (formula "15") (term "1,0"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "tryEmpty" (formula "15") (term "1"))
      (rule "emptyModality" (formula "15") (term "1"))
      (rule "applyOnRigidFormula" (formula "15"))
      (rule "simplifyUpdate2" (formula "15") (term "1"))
      (rule "simplifyUpdate2" (formula "15") (term "0"))
      (rule "applyOnRigidFormula" (formula "15") (term "1"))
      (rule "applyOnPV" (formula "15") (term "0,1"))
      (rule "simplifyUpdate1" (formula "15") (term "1,1"))
      (rule "eqClose" (formula "15") (term "1"))
      (rule "concrete_and_3" (formula "15"))
      (rule "applyOnRigidFormula" (formula "15"))
      (rule "applyOnRigidFormula" (formula "15") (term "1"))
      (rule "simplifyUpdate2" (formula "15") (term "1,1"))
      (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "15") (term "1"))
      (rule "applyOnRigidFormula" (formula "15") (term "0"))
      (rule "simplifyUpdate2" (formula "15") (term "0,0"))
      (rule "simplifyUpdate2" (formula "15") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "15") (term "1"))
      (rule "simplifyUpdate2" (formula "15") (term "1,1"))
      (rule "simplifyUpdate2" (formula "15") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "15") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "15") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "15") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "15") (term "0,1"))
      (rule "applyOnPV" (formula "15") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,1"))
      (rule "boolean_not_equal_2" (formula "15") (term "0,1"))
      (rule "concrete_impl_2" (formula "15") (term "1"))
      (rule "concrete_and_3" (formula "15"))
      (rule "impRight" (formula "15"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "16") (term "1"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "applyOnPV" (formula "14") (term "0"))
      (rule "simplifyUpdate1" (formula "14") (term "1"))
      (rule "boolean_not_equal_2" (formula "14"))
      (rule "false_right" (formula "14"))
      (rule "applyOnRigidTerm" (formula "15") (term "0,1"))
      (rule "applyOnPV" (formula "15") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "15") (term "2,0,1"))
      (rule "simplifyUpdate1" (formula "15") (term "1,0,1"))
      (rule "eqClose" (formula "15") (term "1"))
      (rule "concrete_and_3" (formula "15"))
      (rule "allRight" (formula "15") (inst "sk=i_6"))
      (rule "orRight" (formula "15"))
      (rule "orRight" (formula "15"))
      (rule "simplifyUpdate2" (formula "15"))
      (rule "applyOnRigidFormula" (formula "17"))
      (rule "applyOnRigidFormula" (formula "16"))
      (rule "simplifyUpdate1" (formula "16") (term "0"))
      (rule "applyOnRigidFormula" (formula "17") (term "0"))
      (rule "simplifyUpdate2" (formula "17") (term "0,0"))
      (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "2"))
      (rule "concrete_not_1" (formula "17") (term "0,0"))
      (rule "concrete_or_2" (formula "17") (term "0"))
      (rule "applyOnRigidFormula" (formula "17") (term "1"))
      (rule "simplifyUpdate2" (formula "17") (term "0,1"))
      (rule "replace_known_left" (formula "17") (term "0,1") (ifseqformula "2"))
      (rule "concrete_or_1" (formula "17") (term "1"))
      (rule "concrete_and_3" (formula "17"))
      (rule "notRight" (formula "17"))
      (rule "applyOnRigidTerm" (formula "17") (term "1"))
      (rule "inEqSimp_leqRight" (formula "16"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "applyOnRigidFormula" (formula "2"))
      (rule "simplifyUpdate1" (formula "2") (term "1"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1"))
      (rule "applyOnPV" (formula "17") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "17") (term "2,0,1"))
      (rule "applyOnRigidTerm" (formula "2") (term "0"))
      (rule "applyOnPV" (formula "2") (term "0,0"))
      (rule "simplifyUpdate1" (formula "2") (term "2,0"))
      (rule "applyOnRigidTerm" (formula "2") (term "1,0"))
      (rule "simplifyUpdate1" (formula "2") (term "1,1,0"))
      (rule "applyOnRigidTerm" (formula "2") (term "0,1,0"))
      (rule "applyOnPV" (formula "2") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "2") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "2") (term "2,0,1,0"))
      (rule "inEqSimp_geqRight" (formula "17"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
      (rule "inEqSimp_homoInEq1" (formula "15") (term "0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
      (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
      (rule "add_literals" (formula "15") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0"))
      (rule "leq_literals" (formula "15") (term "0"))
      (rule "concrete_impl_2" (formula "15"))
      (rule "true_left" (formula "15"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
      (rule "inEqSimp_homoInEq1" (formula "13"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "1,0"))
      (rule "times_zero_1" (formula "13") (term "0"))
      (rule "leq_literals" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "allLeft" (formula "13") (inst "t=i_6"))
      (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
      (rule "concrete_not_1" (formula "13") (term "0,0"))
      (rule "concrete_or_2" (formula "13") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
      (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "13") (term "0,0"))
      (rule "concrete_and_2" (formula "13") (term "0"))
      (rule "concrete_or_2" (formula "13"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "13"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x_1 false"
   (rule "false_to_not_true" (formula "1") (term "1"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "applyOnRigidFormula" (formula "7"))
   (rule "applyOnPV" (formula "7") (term "0"))
   (rule "simplifyUpdate1" (formula "7") (term "1"))
   (rule "ifthenelse_concrete3" (formula "7"))
   (rule "boolean_not_equal_2" (formula "7") (term "1"))
   (rule "concrete_or_4" (formula "7"))
   (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "7"))
   (rule "concrete_or_2" (formula "4"))
   (rule "for_to_while" (formula "9") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
   (rule "variableDeclarationAssign" (formula "9") (term "1"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
   (rule "assignment_read_attribute_this" (formula "9"))
   (rule "sequentialToParallel2" (formula "9"))
   (rule "simplifyUpdate3" (formula "9") (term "1,0"))
   (builtin "Loop Invariant" (formula "9") (newnames "variant,b,heapBefore_LOOP,xBefore_LOOP,index_1Before_LOOP,x_0,index_1_0,heap_After_LOOP,anon_heap_LOOP,o_0,f"))
   (branch "Case 1"
      (rule "simplifyUpdate2" (formula "9"))
      (rule "applyOnRigidFormula" (formula "9"))
      (rule "simplifyUpdate2" (formula "9") (term "1"))
      (rule "applyOnRigidFormula" (formula "9") (term "0"))
      (rule "simplifyUpdate2" (formula "9") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "0,0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,0"))
      (rule "simplifyUpdate2" (formula "9") (term "0,1,0"))
      (rule "simplifyUpdate2" (formula "9") (term "1,1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,1,1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,1,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,1,1,0,0"))
      (rule "applyOnPV" (formula "9") (term "0,1,1,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,1,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,0,1,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,1,0,0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "0,0,1,0,0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "1,0,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,1,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "1,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1,1,1,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,0,1,0,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,0,1,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,0,1,0,0,0"))
      (rule "simplifyUpdate2" (formula "9") (term "0,0,0,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,1,0,0,0,0"))
      (rule "applyOnPV" (formula "9") (term "0,0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "9") (term "0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "1,1,1,1,0,0"))
      (rule "applyOnPV" (formula "9") (term "0,1,1,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,1,1,1,1,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "1,0,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1,0,0,1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "9") (term "0,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,0,1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "1,1,0,0,1,0,0,0"))
      (rule "applyOnPV" (formula "9") (term "0,1,1,0,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "1,1,1,0,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0,0,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,0,0,1,0,1,0,0,0"))
      (rule "applyOnPV" (formula "9") (term "1,0,0,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "9") (term "2,0,0,1,0,1,0,0,0"))
      (rule "andRight" (formula "9"))
      (branch "Case 1"
         (rule "andRight" (formula "9"))
         (branch "Case 1"
            (rule "andRight" (formula "9"))
            (branch "Case 1"
               (rule "andRight" (formula "9"))
               (branch "Case 1"
                  (rule "andRight" (formula "9"))
                  (branch "Case 1"
                     (rule "add_literals" (formula "9") (term "1"))
                     (rule "leq_literals" (formula "9"))
                     (rule "closeTrue" (formula "9"))
                  )
                  (branch "Case 2"
                     (rule "add_literals" (formula "9") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "9"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "lenNonNegative" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (rule "concrete_and_2" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                  (rule "allRight" (formula "9") (inst "sk=i_17"))
                  (rule "impRight" (formula "9"))
                  (rule "notRight" (formula "10"))
                  (rule "andLeft" (formula "2"))
                  (rule "castedGetAny" (formula "1") (term "1,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "3"))
                  (rule "times_zero_1" (formula "3") (term "1,0,0"))
                  (rule "add_zero_right" (formula "3") (term "0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (rule "concrete_and_2" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
            (branch "Case 2"
               (rule "impRight" (formula "9"))
               (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4") (userinteraction))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "7"))
               (rule "orLeft" (formula "10"))
               (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "insert_constant_value" (formula "8") (term "1"))
                  (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "add_literals" (formula "17") (term "1,1"))
                  (rule "eqSymm" (formula "14") (term "1,0"))
                  (rule "eqSymm" (formula "13") (term "1,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                  (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                  (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                  (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                  (rule "castedGetAny" (formula "14") (term "0,1,0"))
                  (rule "eqSymm" (formula "14") (term "1,0"))
                  (rule "castedGetAny" (formula "13") (term "0,1,0"))
                  (rule "eqSymm" (formula "13") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                  (rule "lenOfSeqEmpty" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                  (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "10"))
                  (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "10"))
                  (rule "lenOfSeqEmpty" (formula "1") (term "0,1,0"))
                  (rule "times_zero_2" (formula "1") (term "1,0"))
                  (rule "add_literals" (formula "1") (term "0"))
                  (rule "leq_literals" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "11"))
                  (rule "notLeft" (formula "10"))
                  (rule "add_literals" (formula "21") (term "1,1") (userinteraction))
                  (rule "allLeft" (formula "9") (inst "t=Z(0(#))") (userinteraction))
                  (rule "impLeft" (formula "9") (userinteraction))
                  (branch "Case 1"
                     (rule "insert_constant_value" (formula "8") (term "1"))
                     (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                     (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                     (rule "leq_literals" (formula "16") (term "0"))
                     (rule "concrete_and_1" (formula "16"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "close" (formula "16") (ifseqformula "1"))
                  )
                  (branch "Case 2"
                     (rule "andLeft" (formula "9") (userinteraction))
                     (rule "castAdd" (formula "23") (term "1") (ifseqformula "10") (userinteraction))
                     (rule "close" (formula "23") (ifseqformula "14"))
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "add_literals" (formula "9") (term "0,0"))
            (rule "eqSymm" (formula "9") (term "0"))
            (rule "equiv_right" (formula "9"))
            (branch
               (rule "lenNonNegative" (formula "1") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "2"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "11"))
               (rule "concrete_or_2" (formula "1"))
               (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
               (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0"))
               (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "12") (term "1,0"))
               (rule "eqSymm" (formula "11") (term "1,1"))
               (rule "eqSymm" (formula "11") (term "1,0,1"))
               (rule "replace_known_right" (formula "11") (term "0,1,0,0,0,0,0,1") (ifseqformula "17"))
               (rule "concrete_not_2" (formula "11") (term "1,0,0,0,0,0,1"))
               (rule "concrete_and_3" (formula "11") (term "0,0,0,0,0,1"))
               (rule "replace_known_right" (formula "11") (term "1,0,0") (ifseqformula "17"))
               (rule "concrete_and_4" (formula "11") (term "0,0"))
               (rule "concrete_and_2" (formula "11") (term "0"))
               (rule "concrete_or_2" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "13"))
               (rule "notLeft" (formula "11"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
               (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "13") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "16") (term "0,1,0"))
               (rule "eqSymm" (formula "16") (term "1,0"))
               (rule "castedGetAny" (formula "15") (term "0,1,0"))
               (rule "eqSymm" (formula "15") (term "1,0"))
               (rule "castedGetAny" (formula "14") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
               (rule "leq_literals" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
               (rule "eqSymm" (formula "8"))
               (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
               (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
               (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "8"))
               (rule "add_zero_right" (formula "13") (term "1,0"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
               (rule "times_zero_2" (formula "15") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "mul_literals" (formula "9") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "17") (inst "iv=iv"))
               (rule "lenOfSeqEmpty" (formula "17") (term "1,0"))
               (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "2"))
               (rule "concrete_and_1" (formula "17"))
               (rule "allRight" (formula "17") (inst "sk=iv_4"))
               (rule "impRight" (formula "17"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
               (rule "mul_literals" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (rule "concrete_and_2" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "lenNonNegative" (formula "10") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "11"))
               (rule "add_zero_right" (formula "1") (term "1"))
               (rule "inEqSimp_contradEq7" (formula "11") (ifseqformula "1"))
               (rule "times_zero_1" (formula "11") (term "1,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0"))
               (rule "leq_literals" (formula "11") (term "0"))
               (rule "concrete_and_2" (formula "11"))
               (rule "false_right" (formula "11"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "0") (ifseqformula "3"))
               (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "3"))
               (rule "concrete_or_1" (formula "2"))
               (rule "true_left" (formula "2"))
               (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
               (rule "insert_constant_value" (formula "8") (term "1,1,0,0,0,0"))
               (rule "translateJavaSubInt" (formula "8") (term "1,1,0,0,1"))
               (rule "translateJavaSubInt" (formula "8") (term "1,0,1,1,1,1,0,0"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "12") (term "1,0"))
               (rule "eqSymm" (formula "11") (term "1,0,1"))
               (rule "eqSymm" (formula "11") (term "1,1"))
               (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "2"))
               (rule "concrete_and_3" (formula "11") (term "0,0"))
               (rule "replace_known_left" (formula "11") (term "0,1,0,0,0,0,0,1") (ifseqformula "2"))
               (rule "concrete_not_1" (formula "11") (term "1,0,0,0,0,0,1"))
               (rule "concrete_and_4" (formula "11") (term "0,0,0,0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,0,0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,0,1"))
               (rule "concrete_and_2" (formula "11") (term "0,1"))
               (rule "concrete_and_2" (formula "11") (term "1"))
               (rule "concrete_or_4" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
               (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
               (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "castedGetAny" (formula "14") (term "0,1,0"))
               (rule "eqSymm" (formula "14") (term "1,0"))
               (rule "castedGetAny" (formula "13") (term "0,1,0"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "11"))
               (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
               (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
               (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "11"))
               (rule "lenOfSeqEmpty" (formula "8") (term "0"))
               (rule "eqSymm" (formula "8"))
               (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "11"))
               (rule "lenOfSeqEmpty" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch
         (rule "close" (formula "9") (ifseqformula "1"))
      )
   )
   (branch "Body Preserves Invariant"
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "11") (term "1"))
      (rule "eqSymm" (formula "8") (term "0,1,0,1,1"))
      (rule "eqSymm" (formula "8") (term "1,1,0,0,1,1"))
      (rule "eqSymm" (formula "11") (term "0,0,1,0,1,1,1,0,1,1,1,1,1"))
      (rule "eqSymm" (formula "11") (term "0,1,0,0,1,1,1,0,1,1,1,1,1"))
      (rule "eqSymm" (formula "11") (term "1,1,0,0,0,1,1,1,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "11") (term "0,0,1,1,1"))
      (rule "polySimp_elimSub" (formula "11") (term "0,1,1,1,1,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "1,0"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,1,1,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "16") (term "1,1"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0,1,1"))
      (rule "applyOnElementary" (formula "16") (term "1,0,1,1"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "impRight" (formula "16"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "simplifyUpdate3" (formula "1") (term "0"))
      (rule "applyOnParallel" (formula "17") (term "1,0"))
      (rule "simplifyUpdate3" (formula "17") (term "0,1,0"))
      (rule "applyOnElementary" (formula "17") (term "1,1,0"))
      (rule "sequentialToParallel1" (formula "17") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "0,1,1,0"))
      (rule "simplifyUpdate3" (formula "17") (term "0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "13") (term "1,0,1"))
      (rule "polySimp_addComm0" (formula "12") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "12") (term "1,0,1,1"))
      (rule "polySimp_addComm0" (formula "11") (term "1,1,0,0,1"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1"))
      (rule "polySimp_addComm0" (formula "9") (term "1,1"))
      (rule "polySimp_addComm0" (formula "17") (term "0,1,0,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "1,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,1,1,0,1"))
      (rule "mul_literals" (formula "17") (term "0,1,0,1,1,1,1,0,1"))
      (rule "polySimp_addComm0" (formula "17") (term "0,1,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "1,0,1,1,0"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "castedGetAny" (formula "11") (term "1,2,0,0,1,0,1"))
      (rule "castedGetAny" (formula "17") (term "1,2,0,0,1,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "simplifyUpdate2" (formula "13") (term "1"))
      (rule "simplifyUpdate2" (formula "13") (term "0"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate2" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "10"))
      (rule "simplifyUpdate1" (formula "10") (term "1"))
      (rule "applyOnRigidFormula" (formula "9"))
      (rule "simplifyUpdate1" (formula "9") (term "0"))
      (rule "applyOnRigidTerm" (formula "17") (term "0,1,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0,1,1,0"))
      (rule "applyOnRigidFormula" (formula "14") (term "0"))
      (rule "applyOnPV" (formula "14") (term "0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "14") (term "1"))
      (rule "simplifyUpdate1" (formula "14") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "applyOnRigidFormula" (formula "13") (term "1"))
      (rule "applyOnPV" (formula "13") (term "0,1"))
      (rule "simplifyUpdate1" (formula "13") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "13") (term "0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0"))
      (rule "eqSymm" (formula "13") (term "0"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,1"))
      (rule "applyOnPV" (formula "12") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "12") (term "0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "10") (term "0"))
      (rule "applyOnPV" (formula "10") (term "1,0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "9") (term "1"))
      (rule "simplifyUpdate1" (formula "9") (term "0,1"))
      (rule "applyOnPV" (formula "9") (term "1,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "0,1,0,1,1,0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0,1"))
      (rule "simplifyUpdate1" (formula "14") (term "0,0,1"))
      (rule "applyOnPV" (formula "14") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "14") (term "2,0,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "simplifyUpdate2" (formula "11") (term "0,0"))
      (rule "simplifyUpdate2" (formula "11") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,0"))
      (rule "applyOnPV" (formula "13") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0,0"))
      (rule "eqSymm" (formula "13") (term "0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,1"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,0"))
      (rule "polySimp_addComm0" (formula "17") (term "0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "1,0,0,0,0,0,1,1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0,0"))
      (rule "simplifyUpdate2" (formula "11") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "11") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "0,1,0,1"))
      (rule "applyOnPV" (formula "12") (term "1,1,0,1"))
      (rule "applyOnRigidTerm" (formula "17") (term "1,0,1,1,0"))
      (rule "simplifyUpdate1" (formula "17") (term "1,1,0,1,1,0"))
      (rule "applyOnPV" (formula "17") (term "0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "17") (term "0,1,1,0"))
      (rule "applyOnRigidFormula" (formula "11") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1,0,0"))
      (rule "applyOnRigidFormula" (formula "11") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "11") (term "1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "11") (term "1,1,0,0"))
      (rule "applyOnPV" (formula "11") (term "1,1,1,0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1,1,0,0"))
      (rule "applyOnRigidTerm" (formula "11") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,0,0,1,0"))
      (rule "applyOnPV" (formula "11") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "11") (term "2,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0,0,0,0,1,1,1,0,1"))
      (rule "times_zero_2" (formula "17") (term "1,0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1,0"))
      (rule "add_zero_right" (formula "9") (term "0"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "rtrn"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "returnExpr"))
      (rule "variableDeclarationAssign" (formula "17") (term "1"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "exc_1"))
      (rule "assignment" (formula "17") (term "1"))
      (rule "sequentialToParallel2" (formula "17"))
      (rule "simplifyUpdate3" (formula "17") (term "1,0"))
      (rule "variableDeclaration" (formula "17") (term "1") (newnames "thrownExc"))
      (rule "blockReturn" (formula "17") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "17") (term "1,0,0,1"))
      (rule "blockReturn" (formula "17") (term "1,0,1,0,1"))
      (rule "blockThrow" (formula "17") (term "1,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,0,1,1,1,0,1"))
      (rule "boxToDiamond" (formula "1") (term "1"))
      (rule "notLeft" (formula "1"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "17") (term "0,1,0,0,0,0,1,1,1,0,1"))
      (rule "nnf_notAnd" (formula "17") (term "0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,1,0,0,0,0,1,1,1,0,1"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "inequality_comparison_simple" (formula "14") (term "1"))
      (rule "sequentialToParallel2" (formula "14"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "applyOnElementary" (formula "14") (term "0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "2,0,0"))
      (rule "applyOnRigidFormula" (formula "14") (term "0,0,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0"))
      (rule "applyOnPV" (formula "14") (term "0,0,0,0"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (rule "emptyModality" (formula "14") (term "1"))
      (rule "notRight" (formula "14"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "ifthenelse_concrete4" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "14"))
      (rule "concrete_or_2" (formula "13"))
      (rule "replace_known_right" (formula "12") (term "1") (ifseqformula "14"))
      (rule "concrete_eq_4" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "13"))
      (rule "polySimp_addAssoc" (formula "9") (term "1"))
      (rule "add_literals" (formula "9") (term "0,1"))
      (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
      (rule "concrete_impl_1" (formula "11"))
      (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "9"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0"))
      (rule "leq_literals" (formula "13") (term "0"))
      (rule "concrete_and_2" (formula "13"))
      (rule "false_right" (formula "13"))
      (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_2"))
      (rule "inequality_comparison_simple" (formula "16") (term "1"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "applyOnElementary" (formula "16") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0"))
      (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "13"))
      (rule "ifthenelse_false" (formula "16") (term "0,1,0"))
      (rule "ifSplit" (formula "16"))
      (branch "if x_2 true"
         (rule "simplifyUpdate2" (formula "17"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "boolean_equal" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "assignmentAdditionBigint1" (formula "16") (term "1"))
         (rule "sequentialToParallel2" (formula "16"))
         (rule "simplifyUpdate2" (formula "16"))
         (rule "simplifyUpdate3" (formula "16") (term "1,0"))
         (rule "applyOnElementary" (formula "16") (term "1,0"))
         (rule "polySimp_addComm0" (formula "16") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
         (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
         (rule "ifUnfold" (formula "16") (term "1") (inst "#boolv=x_1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_3"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "16") (term "1"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "var"))
         (rule "assignment" (formula "16") (term "1"))
         (rule "sequentialToParallel2" (formula "16"))
         (rule "simplifyUpdate3" (formula "16") (term "1,0"))
         (rule "applyOnElementary" (formula "16") (term "1,0"))
         (rule "applyOnPV" (formula "16") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "var_1"))
         (rule "assignment_read_attribute" (formula "16"))
         (branch "Normal Execution (x != null)"
            (rule "sequentialToParallel2" (formula "16"))
            (rule "simplifyUpdate3" (formula "16") (term "1,0"))
            (rule "applyOnElementary" (formula "16") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "16") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "16") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
            (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_equals,result_0,exc_0") (contract "java.lang.Object[java.lang.Object::equals(java.lang.Object)].JML normal_behavior operation contract.0"))
            (branch "Post (equals)"
               (rule "simplifyUpdate2" (formula "17"))
               (rule "simplifyUpdate2" (formula "13"))
               (rule "simplifyUpdate2" (formula "13") (term "1"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "13"))
               (rule "andLeft" (formula "14"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "eqSymm" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "14"))
               (rule "simplifyUpdate1" (formula "14") (term "1"))
               (rule "applyOnRigidTerm" (formula "14") (term "0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,0"))
               (rule "applyOnPV" (formula "14") (term "2,0"))
               (rule "applyOnPV" (formula "14") (term "1,0"))
               (rule "assignment" (formula "18") (term "1"))
               (rule "sequentialToParallel2" (formula "18"))
               (rule "simplifyUpdate3" (formula "18") (term "1,0"))
               (rule "blockEmpty" (formula "18") (term "1"))
               (rule "lenNonNegative" (formula "9") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "9"))
               (rule "seqGetAlphaCast" (formula "12") (term "0"))
               (rule "castDel" (formula "12") (term "0"))
               (rule "eqClose" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "ifSplit" (formula "19"))
               (branch "if x_3 true"
                  (rule "simplifyUpdate2" (formula "20"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "1"))
                  (rule "simplifyUpdate1" (formula "1") (term "1"))
                  (rule "applyOnPV" (formula "1") (term "0"))
                  (rule "assignment_write_attribute_this" (formula "20"))
                  (rule "sequentialToParallel2" (formula "20"))
                  (rule "simplifyUpdate3" (formula "20") (term "1,0"))
                  (rule "applyOnElementary" (formula "20") (term "1,0"))
                  (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
                  (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0"))
                  (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
                  (rule "applyOnPV" (formula "20") (term "3,0,1,0"))
                  (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
                  (builtin "Use Operation Contract" (formula "20") (newnames "heapBefore_unlink,result_1,exc_2,heapAfter_unlink,anon_heap_unlink") (contract "java.util.LinkedList[java.util.LinkedList::unlink(java.util.LinkedList.Node)].JML normal_behavior operation contract.0"))
                  (branch "Post (unlink)"
                     (rule "simplifyUpdate2" (formula "18"))
                     (rule "eqSymm" (formula "18") (term "0,0,0,0,1,1,1,1,1"))
                     (rule "eqSymm" (formula "18") (term "1,0,0,1,1,1,1,1"))
                     (rule "eqSymm" (formula "18") (term "1,0,0,0,1,1,1,1,1"))
                     (rule "sequentialToParallel2" (formula "22"))
                     (rule "simplifyUpdate2" (formula "22"))
                     (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                     (rule "sequentialToParallel2" (formula "18"))
                     (rule "simplifyUpdate3" (formula "18") (term "1,0"))
                     (rule "andLeft" (formula "18"))
                     (rule "simplifyUpdate2" (formula "18"))
                     (rule "simplifyUpdate3" (formula "18") (term "1,0"))
                     (rule "parallelWithSkip2" (formula "18") (term "0"))
                     (rule "applyOnElementary" (formula "19") (term "1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,1,0"))
                     (rule "sequentialToParallel2" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "simplifyUpdate3" (formula "19") (term "1,0"))
                     (rule "andLeft" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "andLeft" (formula "20"))
                     (rule "simplifyUpdate2" (formula "21"))
                     (rule "andLeft" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "andLeft" (formula "20"))
                     (rule "simplifyUpdate2" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "simplifyUpdate2" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "simplifyUpdate2" (formula "21"))
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "polySimp_addComm0" (formula "21") (term "1,1,0,1"))
                     (rule "applyOnRigidFormula" (formula "18"))
                     (rule "simplifyUpdate1" (formula "18") (term "1"))
                     (rule "applyOnRigidFormula" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19") (term "0"))
                     (rule "applyOnRigidFormula" (formula "23"))
                     (rule "simplifyUpdate1" (formula "23") (term "1"))
                     (rule "applyOnPV" (formula "23") (term "0"))
                     (rule "applyOnRigidFormula" (formula "22"))
                     (rule "simplifyUpdate1" (formula "22") (term "0"))
                     (rule "simplifyUpdate1" (formula "22") (term "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "simplifyUpdate1" (formula "20") (term "1"))
                     (rule "applyOnRigidFormula" (formula "21"))
                     (rule "simplifyUpdate1" (formula "21") (term "1"))
                     (rule "applyOnRigidTerm" (formula "18") (term "0"))
                     (rule "applyOnPV" (formula "18") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "18") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "18") (term "2,0"))
                     (rule "applyOnRigidFormula" (formula "19") (term "1"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,1"))
                     (rule "applyOnRigidTerm" (formula "22") (term "0"))
                     (rule "simplifyUpdate1" (formula "22") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                     (rule "applyOnPV" (formula "22") (term "0,0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0"))
                     (rule "applyOnPV" (formula "20") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1"))
                     (rule "applyOnPV" (formula "21") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,1"))
                     (rule "applyOnRigidTerm" (formula "19") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "1,0,1"))
                     (rule "simplifyUpdate1" (formula "19") (term "2,0,1"))
                     (rule "applyOnPV" (formula "19") (term "0,0,1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                     (rule "applyOnRigidTerm" (formula "22") (term "0"))
                     (rule "applyOnPV" (formula "22") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "22") (term "2,0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "dismissNonSelectedField" (formula "20") (term "0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,0"))
                     (rule "dismissNonSelectedField" (formula "19") (term "0,0,1"))
                     (rule "applyOnRigidTerm" (formula "21") (term "2,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,1,0"))
                     (rule "applyOnPV" (formula "21") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "2,0,0"))
                     (rule "applyOnPV" (formula "21") (term "0,2,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,2,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,2,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,2,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,2,1,0"))
                     (rule "applyOnPV" (formula "21") (term "0,0,2,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,2,1,0"))
                     (rule "dismissNonSelectedField" (formula "21") (term "0,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,1,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1,1,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,1,1,1,0"))
                     (rule "applyOnPV" (formula "21") (term "0,1,1,1,0"))
                     (rule "dismissNonSelectedField" (formula "21") (term "0,0,0"))
                     (rule "dismissNonSelectedField" (formula "21") (term "0,2,1,0"))
                     (rule "assignment" (formula "28") (term "1"))
                     (rule "sequentialToParallel2" (formula "28"))
                     (rule "simplifyUpdate2" (formula "28"))
                     (rule "simplifyUpdate3" (formula "28") (term "1,0"))
                     (rule "assignment" (formula "28") (term "1"))
                     (rule "sequentialToParallel2" (formula "28"))
                     (rule "simplifyUpdate3" (formula "28") (term "1,0"))
                     (rule "blockBreakNoLabel" (formula "28") (term "1"))
                     (rule "pullOutSelect" (formula "21") (term "1") (inst "selectSK=java_util_LinkedList_nodeList_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
                     (rule "elementOfFreshLocs" (formula "21") (term "1,0,0"))
                     (rule "elementOfAllLocs" (formula "21") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "21") (term "0,0,0"))
                     (rule "equalUnique" (formula "21") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "21") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "21") (term "0,0"))
                     (rule "ifthenelse_true" (formula "21") (term "0"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "21") (term "1"))
                     (rule "pullOutSelect" (formula "22") (term "1") (inst "selectSK=java_util_LinkedList_nodeIndex_0"))
                     (rule "simplifySelectOfStore" (formula "23"))
                     (rule "eqClose" (formula "23") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "23") (term "0,0,0"))
                     (rule "equalUnique" (formula "23") (term "0,0,0"))
                     (rule "concrete_and_1" (formula "23") (term "0,0"))
                     (rule "equalUnique" (formula "23") (term "0,0,0"))
                     (rule "concrete_not_2" (formula "23") (term "0,0"))
                     (rule "ifthenelse_true" (formula "23") (term "0"))
                     (rule "castDel" (formula "23") (term "0"))
                     (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "18"))
                     (rule "replaceKnownSelect_taclet0000011_2" (formula "22") (term "2,0"))
                     (rule "ifthenelse_concrete4" (formula "22"))
                     (rule "replaceKnownSelect_taclet0000011_3" (formula "21") (term "2,0,0"))
                     (rule "elementOfFreshLocs" (formula "22") (term "1,0,0"))
                     (rule "replaceKnownSelect_taclet0000011_3" (formula "21") (term "1,1,1,0"))
                     (rule "elementOfAllLocs" (formula "22") (term "0,0,0,0"))
                     (rule "concrete_and_1" (formula "22") (term "0,0,0"))
                     (rule "equalUnique" (formula "22") (term "0,0,0,0"))
                     (rule "concrete_not_2" (formula "22") (term "0,0,0"))
                     (rule "concrete_or_1" (formula "22") (term "0,0"))
                     (rule "concrete_not_1" (formula "22") (term "0"))
                     (rule "concrete_or_2" (formula "22"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000011_4" (formula "22") (term "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000011_4" (formula "21") (term "2,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000011_4" (formula "21") (term "1,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "21") (term "1,1,0"))
                     (rule "add_literals" (formula "21") (term "0,1,1,0"))
                     (rule "shift_paren_or" (formula "19"))
                     (rule "blockBreakLabel" (formula "28") (term "1"))
                     (rule "blockEmpty" (formula "28") (term "1"))
                     (rule "tryEmpty" (formula "28") (term "1"))
                     (rule "methodCallEmpty" (formula "28") (term "1"))
                     (rule "emptyModality" (formula "28") (term "1"))
                     (rule "applyOnRigidFormula" (formula "28"))
                     (rule "simplifyUpdate2" (formula "28") (term "0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0"))
                     (rule "boolean_not_equal_2" (formula "28") (term "0,0"))
                     (rule "concrete_impl_2" (formula "28") (term "0"))
                     (rule "concrete_and_1" (formula "28"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0"))
                     (rule "boolean_equal" (formula "28") (term "0,0"))
                     (rule "concrete_impl_1" (formula "28") (term "0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0,1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,1"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,1,1"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,1,1,1"))
                     (rule "applyOnPV" (formula "28") (term "1,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,0,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,1,1"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0,0,1,1"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,0,1,1,1"))
                     (rule "polySimp_addComm0" (formula "28") (term "0,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,0,1"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,0,1"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,0,1"))
                     (rule "boolean_equal" (formula "28") (term "0,0,0,1"))
                     (rule "concrete_or_1" (formula "28") (term "0,0,1"))
                     (rule "concrete_not_1" (formula "28") (term "0,1"))
                     (rule "concrete_impl_2" (formula "28") (term "1"))
                     (rule "concrete_and_3" (formula "28"))
                     (rule "methodCallReturn" (formula "28") (term "1"))
                     (rule "assignment" (formula "28") (term "1"))
                     (rule "sequentialToParallel2" (formula "28"))
                     (rule "simplifyUpdate2" (formula "28"))
                     (rule "simplifyUpdate3" (formula "28") (term "1,0"))
                     (rule "applyOnElementary" (formula "28") (term "1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,1,0"))
                     (rule "methodCallEmpty" (formula "28") (term "1"))
                     (rule "tryEmpty" (formula "28") (term "1"))
                     (rule "emptyModality" (formula "28") (term "1"))
                     (rule "applyOnRigidFormula" (formula "28"))
                     (rule "simplifyUpdate2" (formula "28") (term "0"))
                     (rule "simplifyUpdate2" (formula "28") (term "1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1"))
                     (rule "applyOnPV" (formula "28") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,1,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,1,1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,1,1,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "1,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,1,0,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,1,0,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,1,0,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,1,0,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "0,1,1,0,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,1,0,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,1,0,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,0,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,1,0,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,1,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,1,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,1,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,0,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,1,1,0,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,0,1,0,1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,1,0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,0,1,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,1,1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,0,1,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,0,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,0,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,1,1,0,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,1,1,0,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,1,0,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,1,1,0,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,0,0,1,0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,0,0,1,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,0,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,0,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "2,1,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate2" (formula "28") (term "0,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,0,1,0,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,0,1,0,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,0,0,1,0,1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,0,0,1,0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,0,0,1,0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,0,0,1,0,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,2,1,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,2,1,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,2,1,0,1,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,2,1,0,1,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,0,1,0,1,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,0,1,0,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,0,1,0,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,0,1,0,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,2,0,0,1,1,1,0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "28") (term "0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,2,0,1,1,1,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,0,0,1,0,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "28") (term "0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "applyOnPV" (formula "28") (term "0,0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "1,0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "28") (term "2,0,1,2,0,0,1,1,1,0,0,0,1,0,1,0,1,0"))
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                        (rule "andRight" (formula "28"))
                        (branch "Case 1"
                           (rule "impRight" (formula "28"))
                           (rule "notLeft" (formula "1"))
                           (rule "andRight" (formula "29"))
                           (branch "Case 1"
                              (rule "boolean_equal" (formula "25"))
                              (rule "closeTrue" (formula "25"))
                           )
                           (branch "Case 2"
                              (rule "boolean_equal" (formula "25"))
                              (rule "closeTrue" (formula "25"))
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "28"))
                           (branch "Case 1"
                              (rule "impRight" (formula "28"))
                              (rule "exRight" (formula "29") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                              (rule "andRight" (formula "29"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                    (rule "boolean_equal" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replaceKnownSelect_taclet0000011_0" (formula "29") (term "1,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "29") (term "1,1,0,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,1,1,1,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "29") (term "1,1,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,1,1,0") (ifseqformula "26"))
                                    (rule "concrete_not_2" (formula "29") (term "0,0,1,1,0"))
                                    (rule "concrete_or_1" (formula "29") (term "0,1,1,0"))
                                    (rule "concrete_and_1" (formula "29") (term "1,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "concrete_not_2" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                    (rule "concrete_or_1" (formula "29") (term "0,1,0,0,0,1,0"))
                                    (rule "concrete_and_1" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_geqRight" (formula "28"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (rule "concrete_and_2" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "boolean_equal" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "replaceKnownSelect_taclet0000011_0" (formula "29") (term "1,1,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "29") (term "1,1,0,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "29") (term "1,1,0,0,0,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "26"))
                                    (rule "concrete_not_2" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                    (rule "concrete_or_1" (formula "29") (term "0,1,0,0,0,1,0"))
                                    (rule "concrete_and_1" (formula "29") (term "1,0,0,0,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,1,1,1,0") (ifseqformula "26"))
                                    (rule "concrete_or_2" (formula "29") (term "1,1,1,0"))
                                    (rule "replace_known_right" (formula "29") (term "0,0,0,1,1,0") (ifseqformula "26"))
                                    (rule "concrete_not_2" (formula "29") (term "0,0,1,1,0"))
                                    (rule "concrete_or_1" (formula "29") (term "0,1,1,0"))
                                    (rule "concrete_and_1" (formula "29") (term "1,1,0"))
                                    (rule "inEqSimp_leqRight" (formula "28"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "17") (term "2,0") (ifseqformula "21"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0"))
                                    (rule "add_zero_right" (formula "12") (term "0"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "closeFalse" (formula "12"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "29"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "boolean_equal" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "replaceKnownSelect_taclet0000011_0" (formula "29") (term "1,1,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "29") (term "1,1,0,1,0"))
                                       (rule "allRight" (formula "28") (inst "sk=i_23"))
                                       (rule "orRight" (formula "28"))
                                       (rule "orRight" (formula "28"))
                                       (rule "replace_known_right" (formula "31") (term "0,1,1,1,0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "31") (term "1,1,1,0"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0,1,1,0") (ifseqformula "26"))
                                       (rule "concrete_not_2" (formula "31") (term "0,0,1,1,0"))
                                       (rule "concrete_or_1" (formula "31") (term "0,1,1,0"))
                                       (rule "concrete_and_1" (formula "31") (term "1,1,0"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "26"))
                                       (rule "concrete_not_2" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                       (rule "concrete_or_1" (formula "31") (term "0,1,0,0,0,1,0"))
                                       (rule "concrete_and_1" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "replace_known_right" (formula "31") (term "0,1,0,0,0,1,0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "replace_known_right" (formula "30") (term "0,1") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "30") (term "1"))
                                       (rule "replace_known_right" (formula "30") (term "0,0,0") (ifseqformula "26"))
                                       (rule "concrete_not_2" (formula "30") (term "0,0"))
                                       (rule "concrete_or_1" (formula "30") (term "0"))
                                       (rule "concrete_and_1" (formula "30"))
                                       (rule "notRight" (formula "30"))
                                       (rule "inEqSimp_leqRight" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "30"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0,0"))
                                       (rule "applyEq" (formula "19") (term "2,0") (ifseqformula "23"))
                                       (rule "applyEq" (formula "19") (term "1") (ifseqformula "4"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1"))
                                       (rule "nnf_ex2all" (formula "31"))
                                       (rule "nnf_notAnd" (formula "1") (term "0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "1,0"))
                                       (rule "nnf_notAnd" (formula "1") (term "0,1,0"))
                                       (rule "nnf_notAll" (formula "1") (term "0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "0,0,0,1,0"))
                                       (rule "double_not" (formula "1") (term "1,0,0,0,1,0"))
                                       (rule "nnf_notOr" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0,1,0"))
                                       (rule "commute_and_2" (formula "1") (term "0,0,0,1,0"))
                                       (rule "commute_and" (formula "1") (term "0,0,0,0,1,0"))
                                       (rule "allLeft" (formula "16") (inst "t=i_23"))
                                       (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "16") (term "0,0"))
                                       (rule "concrete_or_2" (formula "16") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "1"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                       (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "16") (term "0,0,1"))
                                       (rule "leq_literals" (formula "16") (term "0,1"))
                                       (rule "concrete_and_2" (formula "16") (term "1"))
                                       (rule "concrete_or_4" (formula "16"))
                                       (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "16") (term "0"))
                                       (rule "concrete_and_2" (formula "16"))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                    (branch "Case 2"
                                       (rule "boolean_equal" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "replaceKnownSelect_taclet0000011_0" (formula "28") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "28") (term "1"))
                                       (rule "replaceKnownSelect_taclet0000011_0" (formula "29") (term "1,1,0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "29") (term "1,1,0,1,0"))
                                       (rule "replace_known_right" (formula "29") (term "0,1,1,1,0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "29") (term "1,1,1,0"))
                                       (rule "replace_known_right" (formula "29") (term "0,0,0,1,1,0") (ifseqformula "26"))
                                       (rule "concrete_not_2" (formula "29") (term "0,0,1,1,0"))
                                       (rule "concrete_or_1" (formula "29") (term "0,1,1,0"))
                                       (rule "concrete_and_1" (formula "29") (term "1,1,0"))
                                       (rule "replace_known_right" (formula "29") (term "0,1,1,0,0,0,1,0") (ifseqformula "26"))
                                       (rule "concrete_or_2" (formula "29") (term "1,1,0,0,0,1,0"))
                                       (rule "replace_known_right" (formula "29") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "26"))
                                       (rule "concrete_not_2" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                       (rule "concrete_or_1" (formula "29") (term "0,1,0,0,0,1,0"))
                                       (rule "concrete_and_1" (formula "29") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "1,1,0"))
                                       (rule "add_literals" (formula "28") (term "0,1,1,0"))
                                       (rule "close" (formula "28") (ifseqformula "21"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "29"))
                                    (branch "Case 1"
                                       (rule "orRight" (formula "29"))
                                       (rule "notRight" (formula "29"))
                                       (rule "close" (formula "28") (ifseqformula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "orRight" (formula "29"))
                                       (rule "applyEq" (formula "17") (term "1") (ifseqformula "2") (userinteraction))
                                       (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "8") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "orLeft" (formula "11"))
                                       (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                                          (rule "andLeft" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "boolean_equal" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "insert_constant_value" (formula "8") (term "1"))
                                          (rule "replaceKnownSelect_taclet0000011_0" (formula "36") (term "1,1,0,1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "36") (term "1,1,0,1,0"))
                                          (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "replace_known_right" (formula "36") (term "0,1,1,0,0,0,1,0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "36") (term "1,1,0,0,0,1,0"))
                                          (rule "replace_known_right" (formula "36") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "33"))
                                          (rule "concrete_not_2" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                          (rule "concrete_or_1" (formula "36") (term "0,1,0,0,0,1,0"))
                                          (rule "concrete_and_1" (formula "36") (term "1,0,0,0,1,0"))
                                          (rule "replace_known_right" (formula "36") (term "0,0,0,1,1,0") (ifseqformula "33"))
                                          (rule "concrete_not_2" (formula "36") (term "0,0,1,1,0"))
                                          (rule "concrete_or_1" (formula "36") (term "0,1,1,0"))
                                          (rule "concrete_and_1" (formula "36") (term "1,1,0"))
                                          (rule "replace_known_right" (formula "36") (term "0,1,1,0") (ifseqformula "33"))
                                          (rule "concrete_or_2" (formula "36") (term "1,1,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0,1,0"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                          (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "27"))
                                          (rule "applyEq" (formula "28") (term "2,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "35") (term "0,1,2,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                          (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "36") (term "0,2,1,0,1,0,1,0") (ifseqformula "10"))
                                          (rule "lenOfSeqEmpty" (formula "36") (term "2,1,0,1,0,1,0"))
                                          (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "10"))
                                          (rule "lenOfSeqEmpty" (formula "17") (term "0"))
                                          (rule "qeq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "35") (term "0,1,0,1,0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                          (rule "lenOfSeqEmpty" (formula "9") (term "0,1,0,0,1,0,0"))
                                          (rule "times_zero_2" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "35") (term "0,1,2,0,0,1,0,0,0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "35") (term "0,0,0,1,0,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                                          (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                                          (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "35") (term "0,1,2,0,1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "9") (term "0,0,0,1,1,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "10"))
                                          (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                                          (rule "eqSymm" (formula "7"))
                                          (rule "applyEq" (formula "18") (term "0,1,2,0,0,0,0,0") (ifseqformula "10"))
                                          (rule "applyEq" (formula "27") (term "2,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "7"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq1" (formula "16"))
                                          (rule "times_zero_2" (formula "16") (term "1,0"))
                                          (rule "add_zero_right" (formula "16") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                          (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                                          (rule "mul_literals" (formula "16") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "16"))
                                          (rule "qeq_literals" (formula "15") (term "0"))
                                          (rule "concrete_and_2" (formula "15"))
                                          (rule "closeFalse" (formula "15"))
                                       )
                                       (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                                          (rule "andLeft" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "andLeft" (formula "11"))
                                          (rule "notLeft" (formula "12"))
                                          (rule "notLeft" (formula "11"))
                                          (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                          (rule "impLeft" (formula "10") (userinteraction))
                                          (branch "Case 1"
                                             (rule "boolean_equal" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "insert_constant_value" (formula "8") (term "1"))
                                             (rule "replaceKnownSelect_taclet0000011_0" (formula "41") (term "1,1,0,1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000011_1" (formula "41") (term "1,1,0,1,0"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "replace_known_right" (formula "41") (term "0,1,1,0,0,0,1,0") (ifseqformula "38"))
                                             (rule "concrete_or_2" (formula "41") (term "1,1,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "41") (term "0,1,1,1,0") (ifseqformula "38"))
                                             (rule "concrete_or_2" (formula "41") (term "1,1,1,0"))
                                             (rule "replace_known_right" (formula "41") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "38"))
                                             (rule "concrete_not_2" (formula "41") (term "0,0,1,0,0,0,1,0"))
                                             (rule "concrete_or_1" (formula "41") (term "0,1,0,0,0,1,0"))
                                             (rule "concrete_and_1" (formula "41") (term "1,0,0,0,1,0"))
                                             (rule "replace_known_right" (formula "41") (term "0,0,0,1,1,0") (ifseqformula "38"))
                                             (rule "concrete_not_2" (formula "41") (term "0,0,1,1,0"))
                                             (rule "concrete_or_1" (formula "41") (term "0,1,1,0"))
                                             (rule "concrete_and_1" (formula "41") (term "1,1,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                             (rule "castedGetAny" (formula "12") (term "0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,1"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                             (rule "times_zero_2" (formula "33") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "33") (term "0,0"))
                                             (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "41") (term "2,1,0,1,0,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "33") (term "0,1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "29") (term "2,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0"))
                                             (rule "mul_literals" (formula "33") (term "1,0"))
                                             (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "17"))
                                             (rule "concrete_and_1" (formula "33"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                             (rule "andLeft" (formula "20"))
                                             (rule "inEqSimp_homoInEq1" (formula "20"))
                                             (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                             (rule "mul_literals" (formula "20") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                             (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                             (rule "add_literals" (formula "20") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                             (rule "add_literals" (formula "20") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "20") (term "1,0"))
                                             (rule "add_literals" (formula "20") (term "0"))
                                             (rule "leq_literals" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                          (branch "Case 2"
                                             (rule "andLeft" (formula "10") (userinteraction))
                                             (rule "castAdd" (formula "24") (term "0") (ifseqformula "11") (userinteraction))
                                             (rule "applyEqReverse" (formula "27") (term "1,2,0") (ifseqformula "24") (userinteraction))
                                             (rule "castedGetAny" (formula "27") (term "1,2,0") (userinteraction))
                                             (rule "close" (formula "42") (ifseqformula "27") (userinteraction))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (rule "close" (formula "28") (ifseqformula "23"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "eqClose" (formula "28"))
                        (rule "closeTrue" (formula "28"))
                     )
                  )
                  (branch "Exceptional Post (unlink)"
                     (rule "simplifyUpdate2" (formula "18"))
                     (rule "eqSymm" (formula "18") (term "0,0,0,0,1,1,1,1,1"))
                     (rule "eqSymm" (formula "18") (term "1,0,0,1,1,1,1,1"))
                     (rule "eqSymm" (formula "18") (term "1,0,0,0,1,1,1,1,1"))
                     (rule "sequentialToParallel2" (formula "22"))
                     (rule "simplifyUpdate2" (formula "22"))
                     (rule "simplifyUpdate3" (formula "22") (term "1,0"))
                     (rule "sequentialToParallel2" (formula "18"))
                     (rule "simplifyUpdate3" (formula "18") (term "1,0"))
                     (rule "andLeft" (formula "18"))
                     (rule "simplifyUpdate2" (formula "18"))
                     (rule "simplifyUpdate3" (formula "18") (term "1,0"))
                     (rule "parallelWithSkip2" (formula "18") (term "0"))
                     (rule "applyOnElementary" (formula "19") (term "1,0"))
                     (rule "applyOnPV" (formula "19") (term "0,1,0"))
                     (rule "sequentialToParallel2" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "simplifyUpdate3" (formula "19") (term "1,0"))
                     (rule "andLeft" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "andLeft" (formula "20"))
                     (rule "simplifyUpdate2" (formula "21"))
                     (rule "andLeft" (formula "19"))
                     (rule "simplifyUpdate2" (formula "19"))
                     (rule "andLeft" (formula "21"))
                     (rule "simplifyUpdate2" (formula "22"))
                     (rule "notLeft" (formula "19"))
                     (rule "close" (formula "23") (ifseqformula "22"))
                  )
                  (branch "Case 3"
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20") (term "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "1,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,1,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,1"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,1"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,1,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,1,1"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,1,1"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,1,1"))
                     (rule "applyOnPV" (formula "20") (term "1,0,1,1,1"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,1,0,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,1,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,1,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "1,1,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,1,1,0,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,1,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,1,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,1,1,0,0,0"))
                     (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4") (userinteraction))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "orLeft" (formula "10"))
                     (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "insert_constant_value" (formula "8") (term "1"))
                        (rule "wellFormedStorePrimitive" (formula "27") (term "0,1"))
                        (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "replace_known_right" (formula "27") (term "0,1,1,0") (ifseqformula "24"))
                        (rule "concrete_not_2" (formula "27") (term "1,1,0"))
                        (rule "concrete_and_3" (formula "27") (term "1,0"))
                        (rule "replace_known_right" (formula "27") (term "0,1,1") (ifseqformula "24"))
                        (rule "concrete_or_2" (formula "27") (term "1,1"))
                        (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "2"))
                        (rule "concrete_and_1" (formula "27") (term "1"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "replace_known_left" (formula "27") (term "0,0,0,0,0") (ifseqformula "10"))
                        (rule "concrete_not_1" (formula "27") (term "0,0,0,0"))
                        (rule "concrete_and_2" (formula "27") (term "0,0,0"))
                        (rule "concrete_and_2" (formula "27") (term "0,0"))
                        (rule "concrete_and_2" (formula "27") (term "0"))
                        (rule "concrete_and_2" (formula "27"))
                        (rule "false_right" (formula "27"))
                        (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                        (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                        (rule "castedGetAny" (formula "14") (term "0,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "castedGetAny" (formula "13") (term "0,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                        (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "23") (term "1") (ifseqformula "1"))
                        (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "9") (term "0,0,0,1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "9") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                        (rule "lenOfSeqEmpty" (formula "9") (term "0,1,0,0,1,0,0"))
                        (rule "times_zero_2" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "19") (term "0,1,2,0,0,0,0,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "14") (term "0,1,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "10"))
                        (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                        (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "9") (term "0,0,0,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                        (rule "applyEq" (formula "13") (term "0,1,0,1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "10"))
                        (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                        (rule "eqSymm" (formula "7"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "7"))
                        (rule "qeq_literals" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                        (rule "leq_literals" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "times_zero_2" (formula "16") (term "1,0"))
                        (rule "add_zero_right" (formula "16") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "16"))
                        (rule "qeq_literals" (formula "15") (term "0"))
                        (rule "concrete_and_2" (formula "15"))
                        (rule "closeFalse" (formula "15"))
                     )
                     (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "notLeft" (formula "10"))
                        (rule "andRight" (formula "31"))
                        (branch "Case 1"
                           (rule "andRight" (formula "31"))
                           (branch "Case 1"
                              (rule "andRight" (formula "31"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "31"))
                                 (branch "Case 1"
                                    (rule "notRight" (formula "31"))
                                    (rule "insert_constant_value" (formula "9") (term "1"))
                                    (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                    (rule "close" (formula "26") (ifseqformula "1"))
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "31"))
                                    (branch "Case 1"
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "12") (term "0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "26") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeIndex_9"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "18") (term "0"))
                                       (rule "concrete_and_2" (formula "18"))
                                       (rule "closeFalse" (formula "18"))
                                    )
                                    (branch "Case 2"
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                       (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "31") (term "0,1"))
                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "12") (term "0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "31"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "26") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "8"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeIndex_8"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_commuteGeq" (formula "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0"))
                                       (rule "add_literals" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "closeFalse" (formula "20"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "dismissNonSelectedField" (formula "31") (term "0,0,0") (userinteraction))
                                 (rule "selectOfStore" (formula "31") (term "1,0,0") (userinteraction))
                                 (rule "eqClose" (formula "31") (term "0,0,0,1,0,0") (userinteraction))
                                 (rule "equalUnique" (formula "31") (term "1,0,0,1,0,0") (userinteraction))
                                 (rule "equalUnique" (formula "31") (term "0,1,0,1,0,0") (userinteraction))
                                 (rule "concrete_and_3" (formula "31") (term "0,0,1,0,0") (userinteraction))
                                 (rule "concrete_and_1" (formula "31") (term "0,1,0,0") (userinteraction))
                                 (rule "concrete_not_2" (formula "31") (term "0,1,0,0") (userinteraction))
                                 (rule "ifthenelse_true" (formula "31") (term "1,0,0") (userinteraction))
                                 (rule "castDel" (formula "31") (term "1,0,0") (userinteraction))
                                 (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                 (rule "impLeft" (formula "9") (userinteraction))
                                 (branch "Case 1"
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "32") (term "0"))
                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0"))
                                    (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "castedGetAny" (formula "13") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                    (rule "times_zero_2" (formula "25") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "24") (term "1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "7"))
                                    (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0"))
                                    (rule "mul_literals" (formula "25") (term "1,0"))
                                    (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "17"))
                                    (rule "concrete_and_1" (formula "25"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0"))
                                    (rule "leq_literals" (formula "20"))
                                    (rule "closeFalse" (formula "20"))
                                 )
                                 (branch "Case 2"
                                    (rule "andLeft" (formula "9") (userinteraction))
                                    (rule "castAdd" (formula "23") (term "0") (ifseqformula "10") (userinteraction))
                                    (rule "close" (formula "33") (ifseqformula "23") (userinteraction))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "31"))
                              (branch "Case 1"
                                 (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "31") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4") (userinteraction))
                                 (rule "andRight" (formula "31"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "31"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "31"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "31"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "31"))
                                             (branch "Case 1"
                                                (rule "insert_constant_value" (formula "8") (term "1"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,0"))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                (rule "eqSymm" (formula "31"))
                                                (rule "close" (formula "31") (ifseqformula "7"))
                                             )
                                             (branch "Case 2"
                                                (rule "insert_constant_value" (formula "31") (term "1"))
                                                (rule "insert_constant_value" (formula "8") (term "1"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,0"))
                                                (rule "close" (formula "31") (ifseqformula "8"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "insert_constant_value" (formula "8") (term "1"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "allRight" (formula "31") (inst "sk=i_1_1"))
                                             (rule "impRight" (formula "31"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "33") (term "0,0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "26") (term "1") (ifseqformula "3"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv"))
                                             (rule "lenOfSeqEmpty" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1"))
                                             (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1") (ifseqformula "9"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "add_literals" (formula "21") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "polySimp_elimOne" (formula "21") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "nnf_imp2or" (formula "12") (term "0"))
                                             (rule "nnf_imp2or" (formula "17") (term "0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_imp2or" (formula "29") (term "0,1"))
                                             (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "29") (term "0,0,1"))
                                             (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1"))
                                             (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                             (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1"))
                                             (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1"))
                                             (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "cnf_rightDist" (formula "12") (term "0"))
                                             (rule "distr_forallAnd" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "commute_or_2" (formula "12") (term "0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or" (formula "19") (term "0,0"))
                                             (rule "shift_paren_or" (formula "13") (term "0"))
                                             (rule "commute_or" (formula "12") (term "0,0"))
                                             (rule "cut_direct" (formula "36") (term "0,0"))
                                             (branch "CUT: self.nodeList[i_1_1] = null TRUE"
                                                (rule "typeEqDerived" (formula "37") (term "0,1") (ifseqformula "1"))
                                                (rule "boolean_equal" (formula "37") (term "1"))
                                                (rule "neq_and_2" (formula "37"))
                                                (rule "false_right" (formula "37"))
                                                (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                                (rule "castedGetAny" (formula "17") (term "0"))
                                                (rule "eqClose" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                                (rule "castedGetAny" (formula "18") (term "0"))
                                                (rule "eqClose" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "allLeft" (formula "13") (inst "t=i_1_1"))
                                                (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
                                                (rule "concrete_not_1" (formula "13") (term "0,0"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                                (rule "leq_literals" (formula "13") (term "0,1"))
                                                (rule "concrete_and_2" (formula "13") (term "1"))
                                                (rule "concrete_or_4" (formula "13"))
                                                (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "13"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                (rule "concrete_or_1" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "12"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (rule "concrete_and_2" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "CUT: self.nodeList[i_1_1] = null FALSE"
                                                (rule "concrete_not_2" (formula "37") (term "0"))
                                                (rule "concrete_and_1" (formula "37"))
                                                (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                                (rule "castedGetAny" (formula "16") (term "0"))
                                                (rule "eqClose" (formula "16"))
                                                (rule "true_left" (formula "16"))
                                                (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                                (rule "castedGetAny" (formula "17") (term "0"))
                                                (rule "eqClose" (formula "17"))
                                                (rule "true_left" (formula "17"))
                                                (rule "allLeft" (formula "13") (inst "t=i_1_1"))
                                                (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "38"))
                                                (rule "concrete_or_2" (formula "13") (term "0"))
                                                (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "13") (term "0,0"))
                                                (rule "concrete_and_2" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "3"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0"))
                                                (rule "add_zero_right" (formula "13") (term "0"))
                                                (rule "leq_literals" (formula "13"))
                                                (rule "closeFalse" (formula "13"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "31"))
                                          (rule "andRight" (formula "32"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "32"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "32"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "32"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "32"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "32"))
                                                         (branch "Case 1"
                                                            (rule "notRight" (formula "32"))
                                                            (rule "andRight" (formula "32"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "32"))
                                                               (branch
                                                                  (rule "close" (formula "32") (ifseqformula "1"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "insert_constant_value" (formula "9") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                                  (rule "eqSymm" (formula "15") (term "1,0"))
                                                                  (rule "eqSymm" (formula "13"))
                                                                  (rule "eqSymm" (formula "16") (term "1,0"))
                                                                  (rule "eqSymm" (formula "14"))
                                                                  (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                  (rule "close" (formula "26") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "insert_constant_value" (formula "9") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "eqSymm" (formula "16") (term "1,0"))
                                                               (rule "eqSymm" (formula "14"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                               (rule "close" (formula "26") (ifseqformula "1"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "notRight" (formula "32"))
                                                            (rule "andRight" (formula "32"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "32"))
                                                               (branch "Case 1"
                                                                  (rule "insert_constant_value" (formula "9") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                                  (rule "eqSymm" (formula "15") (term "1,0"))
                                                                  (rule "eqSymm" (formula "13"))
                                                                  (rule "eqSymm" (formula "16") (term "1,0"))
                                                                  (rule "eqSymm" (formula "14"))
                                                                  (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                                  (rule "close" (formula "27") (ifseqformula "1"))
                                                               )
                                                               (branch
                                                                  (rule "close" (formula "32") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "insert_constant_value" (formula "9") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "eqSymm" (formula "16") (term "1,0"))
                                                               (rule "eqSymm" (formula "14"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                               (rule "close" (formula "27") (ifseqformula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "andRight" (formula "31"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "31"))
                                                            (branch "Case 1"
                                                               (rule "insert_constant_value" (formula "8") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "eqSymm" (formula "14") (term "1,0"))
                                                               (rule "eqSymm" (formula "12"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                               (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                               (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                               (rule "castedGetAny" (formula "12") (term "0"))
                                                               (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                               (rule "eqSymm" (formula "14") (term "1,0"))
                                                               (rule "castedGetAny" (formula "13") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                               (rule "close" (formula "31") (ifseqformula "10"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "insert_constant_value" (formula "8") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "eqSymm" (formula "14") (term "1,0"))
                                                               (rule "eqSymm" (formula "12"))
                                                               (rule "eqSymm" (formula "13"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                               (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                               (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                               (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                               (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                               (rule "castedGetAny" (formula "12") (term "0"))
                                                               (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                               (rule "eqSymm" (formula "15") (term "1,0"))
                                                               (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                               (rule "eqSymm" (formula "14") (term "1,0"))
                                                               (rule "castedGetAny" (formula "13") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                               (rule "close" (formula "31") (ifseqformula "10"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "insert_constant_value" (formula "8") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "eqSymm" (formula "12"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                            (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                            (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                            (rule "castedGetAny" (formula "12") (term "0"))
                                                            (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                            (rule "eqSymm" (formula "14") (term "1,0"))
                                                            (rule "castedGetAny" (formula "13") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                            (rule "close" (formula "31") (ifseqformula "10"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "notRight" (formula "32"))
                                                      (rule "andRight" (formula "32"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "32"))
                                                         (branch "Case 1"
                                                            (rule "insert_constant_value" (formula "9") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "eqSymm" (formula "16") (term "1,0"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "close" (formula "28") (ifseqformula "1"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "insert_constant_value" (formula "9") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "15") (term "1,0"))
                                                            (rule "eqSymm" (formula "13"))
                                                            (rule "eqSymm" (formula "16") (term "1,0"))
                                                            (rule "eqSymm" (formula "14"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                            (rule "close" (formula "28") (ifseqformula "1"))
                                                         )
                                                      )
                                                      (branch
                                                         (rule "close" (formula "32") (ifseqformula "1"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "31"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "31"))
                                                      (branch "Case 1"
                                                         (rule "insert_constant_value" (formula "8") (term "1"))
                                                         (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0"))
                                                         (rule "eqSymm" (formula "12"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "12") (term "0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                         (rule "close" (formula "31") (ifseqformula "11"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "insert_constant_value" (formula "8") (term "1"))
                                                         (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0"))
                                                         (rule "eqSymm" (formula "12"))
                                                         (rule "eqSymm" (formula "13"))
                                                         (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                         (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                         (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                         (rule "castedGetAny" (formula "12") (term "0"))
                                                         (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0"))
                                                         (rule "castedGetAny" (formula "13") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                         (rule "close" (formula "31") (ifseqformula "11"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "insert_constant_value" (formula "8") (term "1"))
                                                      (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "32") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                      (rule "close" (formula "31") (ifseqformula "11"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "31"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "31"))
                                                   (branch "Case 1"
                                                      (rule "insert_constant_value" (formula "8") (term "1"))
                                                      (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "31") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "1"))
                                                      (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                      (rule "castedGetAny" (formula "12") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "castedGetAny" (formula "13") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0,0"))
                                                      (rule "close" (formula "31") (ifseqformula "12"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "insert_constant_value" (formula "8") (term "1"))
                                                      (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "32"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "eqSymm" (formula "12"))
                                                      (rule "eqSymm" (formula "13"))
                                                      (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                      (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "1"))
                                                      (rule "close" (formula "31") (ifseqformula "12"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "insert_constant_value" (formula "8") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "1"))
                                                   (rule "close" (formula "31") (ifseqformula "12"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "31"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "31"))
                                                (branch "Case 1"
                                                   (rule "insert_constant_value" (formula "8") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "32") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "12") (term "0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "1"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0,0,0"))
                                                   (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "31") (term "0"))
                                                   (rule "close" (formula "31") (ifseqformula "13"))
                                                )
                                                (branch "Case 2"
                                                   (rule "insert_constant_value" (formula "8") (term "1"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                   (rule "translateJavaSubInt" (formula "32") (term "1,0,1"))
                                                   (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                   (rule "eqSymm" (formula "12"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "13"))
                                                   (rule "eqSymm" (formula "32"))
                                                   (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "1,0,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                   (rule "castedGetAny" (formula "12") (term "0"))
                                                   (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                   (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "1"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0,0,0"))
                                                   (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "13") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                   (rule "castedGetAny" (formula "31") (term "0"))
                                                   (rule "close" (formula "31") (ifseqformula "13"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "insert_constant_value" (formula "8") (term "1"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "32") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "eqSymm" (formula "32"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "32") (term "1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "1"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,0,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "31") (term "0,1,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "31") (term "0"))
                                                (rule "close" (formula "31") (ifseqformula "13"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                       (rule "allRight" (formula "31") (inst "sk=i_0_1"))
                                       (rule "impRight" (formula "31"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                       (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,1"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "33") (term "1,1"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                       (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "1"))
                                       (rule "castedGetAny" (formula "33") (term "0"))
                                       (rule "eqSymm" (formula "33"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "33") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "26") (term "1") (ifseqformula "3"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "27") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "9"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1") (ifseqformula "9"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "nnf_imp2or" (formula "12") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "nnf_imp2or" (formula "29") (term "0,1"))
                                       (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "29") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "commute_or_2" (formula "17") (term "0"))
                                       (rule "cnf_rightDist" (formula "12") (term "0"))
                                       (rule "distr_forallAnd" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "commute_or_2" (formula "12") (term "0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "shift_paren_or" (formula "13") (term "0"))
                                       (rule "commute_or" (formula "12") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                       (rule "castedGetAny" (formula "16") (term "0"))
                                       (rule "eqClose" (formula "16"))
                                       (rule "true_left" (formula "16"))
                                       (rule "seqGetAlphaCast" (formula "36") (term "1"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "eqClose" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "seqGetAlphaCast" (formula "36") (term "1,0"))
                                       (rule "castedGetAny" (formula "1") (term "0"))
                                       (rule "eqClose" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                       (rule "eqClose" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "allLeft" (formula "18") (inst "t=i_0_1"))
                                       (rule "replace_known_right" (formula "18") (term "0,0") (ifseqformula "37"))
                                       (rule "concrete_or_2" (formula "18") (term "0"))
                                       (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                       (rule "leq_literals" (formula "18") (term "0,1"))
                                       (rule "concrete_and_2" (formula "18") (term "1"))
                                       (rule "concrete_or_4" (formula "18"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "18"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (rule "concrete_and_2" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                    (rule "translateJavaSubInt" (formula "31") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                    (rule "allRight" (formula "31") (inst "sk=i_20"))
                                    (rule "impRight" (formula "31"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "2") (term "1"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "33") (term "0,0,0"))
                                    (rule "eqSymm" (formula "33"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "2") (term "0,1,1"))
                                    (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "33") (term "0"))
                                    (rule "castedGetAny" (formula "33") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "33") (term "1,0"))
                                    (rule "dismissNonSelectedField" (formula "33") (term "0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "27") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,1") (ifseqformula "9"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "29") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                    (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "29") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,1"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or_2" (formula "17") (term "0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "cnf_rightDist" (formula "12") (term "0"))
                                    (rule "distr_forallAnd" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "commute_or_2" (formula "12") (term "0"))
                                    (rule "commute_or" (formula "18") (term "0,0"))
                                    (rule "shift_paren_or" (formula "13") (term "0"))
                                    (rule "commute_or" (formula "12") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (rule "eqClose" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "seqGetAlphaCast" (formula "36") (term "1"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "36") (term "1,0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (rule "eqClose" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "allLeft" (formula "19") (inst "t=i_20"))
                                    (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "37"))
                                    (rule "concrete_or_2" (formula "19") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                    (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "19") (term "0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "0"))
                                    (rule "concrete_or_2" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "19"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "notRight" (formula "31"))
                                 (rule "close" (formula "29") (ifseqformula "1"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "31"))
                           (branch "Case 1"
                              (rule "wellFormedStorePrimitive" (formula "31"))
                              (rule "close" (formula "31") (ifseqformula "2"))
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "31"))
                              (rule "insert_constant_value" (formula "8") (term "1"))
                              (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "eqSymm" (formula "13"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "31") (term "0"))
                              (rule "close" (formula "31") (ifseqformula "22"))
                           )
                        )
                     )
                  )
               )
               (branch "if x_3 false"
                  (rule "false_to_not_true" (formula "1") (term "1"))
                  (rule "simplifyUpdate2" (formula "20"))
                  (rule "simplifyUpdate2" (formula "1"))
                  (rule "notLeft" (formula "1"))
                  (rule "applyOnRigidFormula" (formula "16"))
                  (rule "simplifyUpdate1" (formula "16") (term "1"))
                  (rule "applyOnPV" (formula "16") (term "0"))
                  (rule "blockEmpty" (formula "20") (term "1"))
                  (rule "assignment_read_attribute" (formula "20"))
                  (branch "Normal Execution (x != null)"
                     (rule "sequentialToParallel2" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20"))
                     (rule "simplifyUpdate3" (formula "20") (term "1,0"))
                     (rule "applyOnElementary" (formula "20") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "20") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "0,0,1,0"))
                     (rule "applyOnPV" (formula "20") (term "1,0,1,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "2,0,1,0"))
                     (rule "blockEmptyLabel" (formula "20") (term "1"))
                     (rule "blockEmpty" (formula "20") (term "1"))
                     (rule "apply_eq_boolean" (formula "15") (term "1") (ifseqformula "16"))
                     (rule "false_to_not_true" (formula "15"))
                     (rule "notLeft" (formula "15"))
                     (rule "tryEmpty" (formula "20") (term "1"))
                     (rule "methodCallEmpty" (formula "20") (term "1"))
                     (rule "emptyModality" (formula "20") (term "1"))
                     (rule "applyOnRigidFormula" (formula "20"))
                     (rule "simplifyUpdate2" (formula "20") (term "0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "20") (term "1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,1,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,1,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "0,0,1"))
                     (rule "simplifyUpdate2" (formula "20") (term "1,0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0"))
                     (rule "boolean_not_equal_2" (formula "20") (term "0,0"))
                     (rule "concrete_impl_2" (formula "20") (term "0"))
                     (rule "concrete_and_1" (formula "20"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,1"))
                     (rule "applyOnRigidFormula" (formula "20") (term "0,0"))
                     (rule "applyOnPV" (formula "20") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "20") (term "1,0,0"))
                     (rule "boolean_not_equal_2" (formula "20") (term "0,0"))
                     (rule "concrete_impl_2" (formula "20") (term "0"))
                     (rule "concrete_and_1" (formula "20") (userinteraction))
                     (rule "impRight" (formula "20") (userinteraction))
                     (rule "applyOnRigidFormula" (formula "21"))
                     (rule "simplifyUpdate2" (formula "21") (term "0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0"))
                     (rule "simplifyUpdate2" (formula "1") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "1") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1"))
                     (rule "applyOnPV" (formula "21") (term "1,1"))
                     (rule "applyOnRigidFormula" (formula "1") (term "0,0"))
                     (rule "applyOnPV" (formula "1") (term "0,0,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,0,0"))
                     (rule "applyOnRigidFormula" (formula "1") (term "1,0"))
                     (rule "applyOnPV" (formula "1") (term "0,1,0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1,1,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,1"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,1,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,1,0,0"))
                     (rule "applyOnPV" (formula "21") (term "0,1,1,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1,1,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,0,1,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,0,0,1"))
                     (rule "applyOnPV" (formula "21") (term "0,1,0,0,1"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1,0,0,1"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,1,1,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,1,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,0,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,0,1,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,0,1,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,1,0,1,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,0,0,1,0"))
                     (rule "applyOnPV" (formula "21") (term "0,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,0,0,1,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,0,0,1,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,0,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "1,0,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "0,0,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,0,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,0,1,1,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,0,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,0,1,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,1,0,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,0,1,0,0,0,0"))
                     (rule "simplifyUpdate2" (formula "21") (term "0,0,0,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0,1,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,1,0,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,1,0,0,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,1,1,0,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,0,1,1,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,0,1,1,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,1,0,1,1,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "1,0,0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,0,0,1,0,0,0,0"))
                     (rule "applyOnRigidFormula" (formula "21") (term "0,1,0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "1,0,1,0,1,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "1,1,0,0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,1,1,0,0,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,1,1,0,0,1,0,0,0,0"))
                     (rule "applyOnRigidTerm" (formula "21") (term "0,0,1,0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "0,0,0,1,0,1,0,0,0,0"))
                     (rule "applyOnPV" (formula "21") (term "1,0,0,1,0,1,0,0,0,0"))
                     (rule "simplifyUpdate1" (formula "21") (term "2,0,0,1,0,1,0,0,0,0"))
                     (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "7") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "4") (userinteraction))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "andLeft" (formula "7"))
                     (rule "orLeft" (formula "10"))
                     (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                        (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                        (rule "insert_constant_value" (formula "8") (term "1"))
                        (rule "concrete_or_2" (formula "1") (term "0"))
                        (rule "concrete_not_2" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "eqClose" (formula "27") (term "0,0,1,0"))
                        (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
                        (rule "eqSymm" (formula "12") (term "1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "12") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,1,1,0,0,0,0,0"))
                        (rule "replace_known_left" (formula "27") (term "1,0,0,0,0,0") (ifseqformula "17"))
                        (rule "concrete_and_3" (formula "27") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,1,1,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,1,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,1,0,1,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "1,0,1,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,1,0,1,0,0,0"))
                        (rule "castedGetAny" (formula "12") (term "1,1,1,0"))
                        (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1"))
                        (rule "castedGetAny" (formula "13") (term "0,1,0"))
                        (rule "eqSymm" (formula "13") (term "1,0"))
                        (rule "castedGetAny" (formula "12") (term "0,1,0"))
                        (rule "eqSymm" (formula "12") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "precOfInt" (formula "27") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,1"))
                        (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,1"))
                        (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,1,1"))
                        (rule "add_literals" (formula "27") (term "1,1,0,1,1"))
                        (rule "times_zero_1" (formula "27") (term "1,0,1,1"))
                        (rule "add_zero_right" (formula "27") (term "0,1,1"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,1,1"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,1"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,1"))
                        (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,1"))
                        (rule "add_literals" (formula "27") (term "1,0,1,1"))
                        (rule "times_zero_1" (formula "27") (term "0,1,1"))
                        (rule "leq_literals" (formula "27") (term "1,1"))
                        (rule "concrete_and_3" (formula "27") (term "1"))
                        (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "27") (term "1"))
                        (rule "mul_literals" (formula "27") (term "1,0,1"))
                        (rule "add_zero_right" (formula "27") (term "0,1"))
                        (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "6"))
                        (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                        (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "8") (term "0,0,1,0,0,1,0,0") (ifseqformula "9"))
                        (rule "lenOfSeqEmpty" (formula "8") (term "0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "9"))
                        (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "9"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "6"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                        (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                        (rule "leq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "7") (term "0,0,0,0,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "26") (term "0,0,0,1,0,0") (ifseqformula "8"))
                        (rule "lenOfSeqEmpty" (formula "26") (term "0,0,1,0,0"))
                        (rule "polySimp_homoEq" (formula "26") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "26") (term "0,1,2,0,0,1,0,1,0,0,0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "26") (term "0,0,0,1,0,0,0") (ifseqformula "8"))
                        (rule "lenOfSeqEmpty" (formula "26") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0,0,0"))
                        (rule "times_zero_2" (formula "26") (term "1,0,0,1,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,0,0,0"))
                        (rule "applyEq" (formula "17") (term "0,1,2,0,0,0,0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "8"))
                        (rule "lenOfSeqEmpty" (formula "11") (term "0,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                        (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "8"))
                        (rule "lenOfSeqEmpty" (formula "6") (term "0"))
                        (rule "eqSymm" (formula "6"))
                        (rule "applyEq" (formula "12") (term "0,1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "8"))
                        (rule "lenOfSeqEmpty" (formula "15") (term "0"))
                        (rule "qeq_literals" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "applyEq" (formula "25") (term "0,0,1,1,0,0,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "11") (term "0,1,0,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "7") (term "0,0,0,1,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "12") (term "0,1,0,1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "6"))
                        (rule "add_zero_right" (formula "25") (term "0,1"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq1" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1,0"))
                        (rule "add_zero_right" (formula "15") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "25") (term "0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                        (rule "mul_literals" (formula "15") (term "1"))
                        (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "15"))
                        (rule "concrete_and_3" (formula "25"))
                        (rule "inEqSimp_contradEq7" (formula "25") (term "0,1,0") (ifseqformula "14"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,1,0"))
                        (rule "leq_literals" (formula "25") (term "0,0,1,0"))
                        (rule "concrete_and_2" (formula "25") (term "0,1,0"))
                        (rule "concrete_eq_2" (formula "25") (term "1,0"))
                        (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "15"))
                        (rule "qeq_literals" (formula "14") (term "0"))
                        (rule "concrete_and_2" (formula "14"))
                        (rule "closeFalse" (formula "14"))
                     )
                     (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "andLeft" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "notLeft" (formula "11"))
                        (rule "notLeft" (formula "10"))
                        (rule "andRight" (formula "32"))
                        (branch "Case 1"
                           (rule "andRight" (formula "32"))
                           (branch "Case 1"
                              (rule "andRight" (formula "32"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "32"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "32"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "32"))
                                       (branch "Case 1"
                                          (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                          (rule "insert_constant_value" (formula "8") (term "1"))
                                          (rule "concrete_or_2" (formula "1") (term "0"))
                                          (rule "concrete_not_2" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                          (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                                          (rule "inEqSimp_geqRight" (formula "31"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "12") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "17") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "17") (term "0"))
                                          (rule "concrete_and_2" (formula "17"))
                                          (rule "closeFalse" (formula "17"))
                                       )
                                       (branch "Case 2"
                                          (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                          (rule "insert_constant_value" (formula "8") (term "1"))
                                          (rule "concrete_or_2" (formula "1") (term "0"))
                                          (rule "concrete_not_2" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "11"))
                                          (rule "eqSymm" (formula "12"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "1"))
                                          (rule "add_literals" (formula "31") (term "0,1"))
                                          (rule "close" (formula "31") (ifseqformula "18"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "32") (inst "sk=i_19") (userinteraction))
                                       (rule "orRight" (formula "32") (userinteraction))
                                       (rule "orRight" (formula "32") (userinteraction))
                                       (rule "notRight" (formula "34") (userinteraction))
                                       (rule "allLeft" (formula "21") (inst "t=i_19") (userinteraction))
                                       (rule "orLeft" (formula "21") (userinteraction))
                                       (branch " ! o.equals((java.util.LinkedList.Node)self.nodeList[i_19].item) = TRUE | i_19 <= -1"
                                          (rule "orLeft" (formula "21") (userinteraction))
                                          (branch "! o.equals((java.util.LinkedList.Node)self.nodeList[i_19].item) = TRUE"
                                             (rule "notLeft" (formula "21") (userinteraction))
                                             (rule "close" (formula "25") (ifseqformula "1"))
                                          )
                                          (branch "i_19 <= -1"
                                             (rule "close" (formula "34") (ifseqformula "21"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "geq_to_lt_alt" (formula "21") (userinteraction))
                                          (rule "orLeft" (formula "21") (userinteraction))
                                          (branch "i_19 > 1 + index_1_0"
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "concrete_or_2" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "12"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "1"))
                                             (rule "add_literals" (formula "34") (term "0,1"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "21"))
                                             (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "21") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "34"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_zero_right" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "i_19 = 1 + index_1_0"
                                             (rule "applyEqRigid" (formula "1") (term "1,1,2,0") (ifseqformula "21") (userinteraction))
                                             (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                             (rule "impLeft" (formula "10") (userinteraction))
                                             (branch "Case 1"
                                                (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                                (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                                (rule "insert_constant_value" (formula "9") (term "1"))
                                                (rule "concrete_or_4" (formula "2") (term "0"))
                                                (rule "concrete_not_2" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                                (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "12"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "13"))
                                                (rule "polySimp_homoEq" (formula "20"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                                (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                (rule "add_literals" (formula "35") (term "0,1"))
                                                (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "12") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "34"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                                (rule "eqSymm" (formula "16") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "26") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "castedGetAny" (formula "14") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                                (rule "inEqSimp_geqRight" (formula "35"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                                (rule "mul_literals" (formula "27") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0"))
                                                (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "21") (term "0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "polySimp_sepPosMonomial" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                (rule "mul_literals" (formula "22") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "1,1,0"))
                                                (rule "add_literals" (formula "23") (term "0,1,1,0"))
                                                (rule "add_zero_left" (formula "23") (term "1,1,0"))
                                                (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "22"))
                                                (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,0"))
                                                (rule "times_zero_1" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEqRigid" (formula "20") (term "1,1") (ifseqformula "21"))
                                                (rule "polySimp_addAssoc" (formula "20") (term "1"))
                                                (rule "add_literals" (formula "20") (term "0,1"))
                                                (rule "applyEq" (formula "18") (term "0") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "18"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                (rule "add_literals" (formula "18") (term "0,0"))
                                                (rule "add_zero_left" (formula "18") (term "0"))
                                                (rule "applyEqRigid" (formula "26") (term "1,0,0") (ifseqformula "21"))
                                                (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                (rule "add_literals" (formula "26") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "26") (term "0,0"))
                                                (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "1"))
                                                (rule "concrete_and_1" (formula "26"))
                                                (rule "inEqSimp_leqRight" (formula "26"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "1,0"))
                                                (rule "add_literals" (formula "24") (term "0,1,0"))
                                                (rule "add_zero_left" (formula "24") (term "1,0"))
                                                (rule "applyEqRigid" (formula "3") (term "1,1,1,2,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "1,1,2,0"))
                                                (rule "add_literals" (formula "3") (term "0,1,1,2,0"))
                                                (rule "add_zero_left" (formula "3") (term "1,1,2,0"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0") (ifseqformula "22"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_invertInEq0" (formula "19"))
                                                (rule "times_zero_2" (formula "19") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0"))
                                                (rule "add_zero_right" (formula "20") (term "0"))
                                                (rule "leq_literals" (formula "20"))
                                                (rule "closeFalse" (formula "20"))
                                             )
                                             (branch "Case 2"
                                                (rule "andLeft" (formula "10") (userinteraction))
                                                (rule "castAdd" (formula "25") (term "0") (ifseqformula "11") (userinteraction))
                                                (rule "castedGetAny" (formula "25") (term "0") (userinteraction))
                                                (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "25") (userinteraction))
                                                (rule "close" (formula "31") (ifseqformula "1") (userinteraction))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "impRight" (formula "32"))
                                    (rule "allLeft" (formula "10") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                    (rule "impLeft" (formula "10") (userinteraction))
                                    (branch "Case 1"
                                       (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                       (rule "insert_constant_value" (formula "9") (term "1"))
                                       (rule "concrete_or_2" (formula "2") (term "0"))
                                       (rule "concrete_not_2" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1"))
                                       (rule "translateJavaSubInt" (formula "15") (term "1,1,0,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "1,0"))
                                       (rule "add_literals" (formula "33") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                       (rule "add_literals" (formula "1") (term "0,1"))
                                       (rule "castedGetAny" (formula "12") (term "0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                       (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "times_zero_2" (formula "24") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "7"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0"))
                                       (rule "mul_literals" (formula "24") (term "1,0"))
                                       (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "17"))
                                       (rule "concrete_and_1" (formula "24"))
                                       (rule "inEqSimp_leqRight" (formula "24"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_literals" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "Case 2"
                                       (rule "andLeft" (formula "10") (userinteraction))
                                       (rule "castAdd" (formula "24") (term "0") (ifseqformula "11") (userinteraction))
                                       (rule "allLeft" (formula "18") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                       (rule "impLeft" (formula "18") (userinteraction))
                                       (branch "Case 1"
                                          (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                          (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                          (rule "insert_constant_value" (formula "9") (term "1"))
                                          (rule "concrete_or_2" (formula "2") (term "0"))
                                          (rule "concrete_not_2" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                          (rule "translateJavaSubInt" (formula "26") (term "1,1"))
                                          (rule "translateJavaSubInt" (formula "17") (term "1,1,0,0"))
                                          (rule "notLeft" (formula "9"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "polySimp_elimSub" (formula "26") (term "1,1"))
                                          (rule "mul_literals" (formula "26") (term "1,1,1"))
                                          (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "1,1"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "1,0"))
                                          (rule "add_literals" (formula "35") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                          (rule "add_literals" (formula "1") (term "0,1"))
                                          (rule "castedGetAny" (formula "22") (term "0"))
                                          (rule "castedGetAny" (formula "13") (term "0"))
                                          (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                          (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                          (rule "eqSymm" (formula "16") (term "1,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "castedGetAny" (formula "14") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0"))
                                          (rule "times_zero_2" (formula "26") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0"))
                                          (rule "applyEq" (formula "26") (term "0,1,0,1") (ifseqformula "7"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "20") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0"))
                                          (rule "mul_literals" (formula "26") (term "1,0"))
                                          (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "18"))
                                          (rule "concrete_and_1" (formula "26"))
                                          (rule "inEqSimp_leqRight" (formula "26"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "25") (userinteraction))
                                          (rule "switch_brackets" (formula "18") (term "1,0,1") (userinteraction))
                                          (rule "switch_params" (formula "18") (term "1,1,0,1") (userinteraction))
                                          (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), add(Z(1(#)), index_1_0))") (userinteraction))
                                          (rule "impLeft" (formula "12") (userinteraction))
                                          (branch "Case 1"
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "concrete_or_2" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "1,0"))
                                             (rule "add_literals" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                             (rule "add_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "1,0"))
                                             (rule "add_literals" (formula "36") (term "0,1,0"))
                                             (rule "castedGetAny" (formula "23") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,1,0,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "castedGetAny" (formula "16") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                             (rule "times_zero_2" (formula "27") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0"))
                                             (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                                             (rule "mul_literals" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0,1"))
                                             (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "1"))
                                             (rule "concrete_and_3" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                             (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "22") (term "0,0"))
                                             (rule "qeq_literals" (formula "22") (term "0"))
                                             (rule "concrete_or_1" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (rule "concrete_and_2" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Case 2"
                                             (rule "andLeft" (formula "12") (userinteraction))
                                             (rule "castAdd" (formula "38") (term "0") (ifseqformula "13") (userinteraction))
                                             (rule "eqSymm" (formula "38") (userinteraction))
                                             (rule "close" (formula "38") (ifseqformula "20") (userinteraction))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allLeft" (formula "9") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                 (rule "impLeft" (formula "9") (userinteraction))
                                 (branch "Case 1"
                                    (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                    (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                    (rule "insert_constant_value" (formula "8") (term "1"))
                                    (rule "concrete_or_2" (formula "1") (term "0"))
                                    (rule "concrete_not_2" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "eqSymm" (formula "13") (term "1,0"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "1,0"))
                                    (rule "add_literals" (formula "32") (term "0,1,0"))
                                    (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "11") (term "0"))
                                    (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "13") (term "0,1,0"))
                                    (rule "eqSymm" (formula "13") (term "1,0"))
                                    (rule "castedGetAny" (formula "12") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                    (rule "times_zero_2" (formula "23") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                    (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "17") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0"))
                                    (rule "mul_literals" (formula "23") (term "1,0"))
                                    (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "16"))
                                    (rule "concrete_and_1" (formula "23"))
                                    (rule "inEqSimp_leqRight" (formula "23"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradEq3" (formula "32") (term "0") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "32") (term "0,0"))
                                    (rule "concrete_and_2" (formula "32") (term "0"))
                                    (rule "concrete_eq_2" (formula "32"))
                                    (rule "notRight" (formula "32"))
                                    (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "20"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch "Case 2"
                                    (rule "andLeft" (formula "9") (userinteraction))
                                    (rule "castAdd" (formula "23") (term "0") (ifseqformula "10") (userinteraction))
                                    (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), index_1_0)") (userinteraction))
                                    (rule "impLeft" (formula "17") (userinteraction))
                                    (branch "Case 1"
                                       (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                                       (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                                       (rule "insert_constant_value" (formula "8") (term "1"))
                                       (rule "concrete_or_2" (formula "1") (term "0"))
                                       (rule "concrete_not_2" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                       (rule "translateJavaSubInt" (formula "25") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "16") (term "1,1,0,0"))
                                       (rule "notLeft" (formula "8"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                                       (rule "mul_literals" (formula "25") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "1,0"))
                                       (rule "add_literals" (formula "34") (term "0,1,0"))
                                       (rule "castedGetAny" (formula "21") (term "0"))
                                       (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "12") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                       (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0"))
                                       (rule "castedGetAny" (formula "13") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0"))
                                       (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "6"))
                                       (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                       (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0"))
                                       (rule "mul_literals" (formula "25") (term "1,0"))
                                       (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "17"))
                                       (rule "concrete_and_1" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "26") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,1") (ifseqformula "7"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                       (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "20"))
                                       (rule "concrete_eq_1" (formula "35"))
                                       (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "20"))
                                       (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0"))
                                       (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "20"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                       (rule "inEqSimp_homoInEq0" (formula "1"))
                                       (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,0"))
                                       (rule "times_zero_1" (formula "1") (term "0"))
                                       (rule "qeq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq1" (formula "20"))
                                       (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                       (rule "add_literals" (formula "20") (term "1,0"))
                                       (rule "times_zero_1" (formula "20") (term "0"))
                                       (rule "leq_literals" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "19"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                                       (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "19"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "1,1,0,0"))
                                       (rule "applyEq" (formula "25") (term "1,1,1,0,0,1") (ifseqformula "19"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "25") (term "0,1,1,0,0,1"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "19"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "21"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "13"))
                                       (rule "close" (formula "32") (ifseqformula "11"))
                                    )
                                    (branch "Case 2"
                                       (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "24") (userinteraction))
                                       (rule "equiv_right" (formula "35") (userinteraction))
                                       (branch "Case 1"
                                          (rule "translateJavaSubInt" (formula "16") (term "1,0,1"))
                                          (rule "polySimp_elimSub" (formula "16") (term "1,0,1"))
                                          (rule "polySimp_elimOneLeft0" (formula "16") (term "1,1,0,1"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,1") (ifseqformula "8"))
                                          (rule "polySimp_addComm0" (formula "16") (term "1,0,1"))
                                          (rule "applyEqReverse" (formula "16") (term "1,1,0,1") (ifseqformula "8") (userinteraction))
                                          (rule "cut" (inst "cutFormula=  add(Z(neglit(1(#))),
      seqLen(Seq::select(heap,
                         self,
                         java.util.LinkedList::$nodeList)))
= add(Z(1(#)), index_1_0)") (userinteraction))
                                          (branch "CUT: -1 + self.nodeList.length = 1 + index_1_0 TRUE"
                                             (rule "applyEq" (formula "17") (term "1,0,1") (ifseqformula "1") (userinteraction))
                                             (rule "applyEq" (formula "17") (term "1") (ifseqformula "26") (userinteraction))
                                             (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "17") (userinteraction))
                                             (rule "close" (formula "37") (ifseqformula "15") (userinteraction))
                                          )
                                          (branch "CUT: -1 + self.nodeList.length = 1 + index_1_0 FALSE"
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "concrete_or_2" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "polySimp_homoEq" (formula "27"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                             (rule "add_literals" (formula "1") (term "0,1"))
                                             (rule "castedGetAny" (formula "23") (term "0"))
                                             (rule "castedGetAny" (formula "13") (term "0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "16") (term "0"))
                                             (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                             (rule "add_literals" (formula "27") (term "1,0"))
                                             (rule "times_zero_1" (formula "27") (term "0"))
                                             (rule "eqClose" (formula "27"))
                                             (rule "closeTrue" (formula "27"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "25") (userinteraction))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "25") (userinteraction))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "18") (userinteraction))
                                          (rule "allLeft" (formula "12") (inst "t=add(add(Z(1(#)), index_1_0), Z(1(#)))") (userinteraction))
                                          (rule "impLeft" (formula "12") (userinteraction))
                                          (branch "Case 1"
                                             (rule "boolean_not_equal_2" (formula "2") (term "1,0"))
                                             (rule "boolean_not_equal_2" (formula "2") (term "0,0"))
                                             (rule "insert_constant_value" (formula "9") (term "1"))
                                             (rule "concrete_or_2" (formula "2") (term "0"))
                                             (rule "concrete_not_2" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "translateJavaSubInt" (formula "18") (term "1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                             (rule "notLeft" (formula "9"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "1,0"))
                                             (rule "add_literals" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,1"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "1"))
                                             (rule "add_literals" (formula "36") (term "0,1"))
                                             (rule "castedGetAny" (formula "23") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "13") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                             (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "16") (term "0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "27") (term "1"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                                             (rule "times_zero_2" (formula "27") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0"))
                                             (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "27") (term "0,1,0,1") (ifseqformula "7"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "16"))
                                             (rule "applyEq" (formula "21") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "36") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "20") (term "0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                                             (rule "mul_literals" (formula "27") (term "1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_strengthen1" (formula "21") (ifseqformula "36"))
                                             (rule "polySimp_addAssoc" (formula "21") (term "1"))
                                             (rule "add_literals" (formula "21") (term "0,1"))
                                             (rule "replace_known_left" (formula "27") (term "1") (ifseqformula "21"))
                                             (rule "concrete_and_3" (formula "27"))
                                             (rule "inEqSimp_geqRight" (formula "27"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradEq7" (formula "36") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                             (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0"))
                                             (rule "leq_literals" (formula "36") (term "0"))
                                             (rule "concrete_and_2" (formula "36"))
                                             (rule "false_right" (formula "36"))
                                             (rule "inEqSimp_contradInEq0" (formula "20") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "20") (term "0"))
                                             (rule "concrete_and_2" (formula "20"))
                                             (rule "closeFalse" (formula "20"))
                                          )
                                          (branch "Case 2"
                                             (rule "andLeft" (formula "12") (userinteraction))
                                             (rule "castAdd" (formula "12") (term "0,0") (ifseqformula "13") (userinteraction))
                                             (rule "notLeft" (formula "12") (userinteraction))
                                             (rule "close" (formula "29") (ifseqformula "1") (userinteraction))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                              (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                              (rule "insert_constant_value" (formula "8") (term "1"))
                              (rule "concrete_or_2" (formula "1") (term "0"))
                              (rule "concrete_not_2" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "eqClose" (formula "31") (term "0,0"))
                              (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                              (rule "allRight" (formula "31") (inst "sk=f_1"))
                              (rule "allRight" (formula "31") (inst "sk=o_0_1"))
                              (rule "closeTrue" (formula "31"))
                           )
                        )
                        (branch "Case 2"
                           (rule "boolean_not_equal_2" (formula "1") (term "0,0"))
                           (rule "boolean_not_equal_2" (formula "1") (term "1,0"))
                           (rule "insert_constant_value" (formula "8") (term "1"))
                           (rule "concrete_or_2" (formula "1") (term "0"))
                           (rule "concrete_not_2" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "translateJavaSubInt" (formula "14") (term "1,1,0,0"))
                           (rule "translateJavaSubInt" (formula "12") (term "1,0,1"))
                           (rule "eqSymm" (formula "11"))
                           (rule "eqSymm" (formula "13") (term "1,0"))
                           (rule "eqSymm" (formula "14") (term "1,0"))
                           (rule "eqSymm" (formula "12"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                           (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "12") (term "1,0,0"))
                           (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                           (rule "castedGetAny" (formula "11") (term "0"))
                           (rule "castedGetAny" (formula "13") (term "1,1,1,0"))
                           (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "castedGetAny" (formula "14") (term "0,1,0"))
                           (rule "eqSymm" (formula "14") (term "1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                           (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                           (rule "castedGetAny" (formula "13") (term "0,1,0"))
                           (rule "eqSymm" (formula "13") (term "1,0"))
                           (rule "castedGetAny" (formula "12") (term "0"))
                           (rule "precOfInt" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,1"))
                           (rule "mul_literals" (formula "31") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1"))
                           (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1"))
                           (rule "add_literals" (formula "31") (term "1,1,0,1"))
                           (rule "times_zero_1" (formula "31") (term "1,0,1"))
                           (rule "add_zero_right" (formula "31") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                           (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1"))
                           (rule "add_zero_left" (formula "31") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1"))
                           (rule "add_literals" (formula "31") (term "1,0,1"))
                           (rule "times_zero_1" (formula "31") (term "0,1"))
                           (rule "leq_literals" (formula "31") (term "1"))
                           (rule "concrete_and_3" (formula "31"))
                           (rule "inEqSimp_leqRight" (formula "31"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "19") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "18") (term "0") (ifseqformula "7"))
                           (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "19"))
                           (rule "andLeft" (formula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "leq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Null Reference (x = null)"
                     (rule "false_right" (formula "21"))
                     (rule "simplifyUpdate2" (formula "1"))
                     (rule "applyOnRigidFormula" (formula "1"))
                     (rule "applyOnPV" (formula "1") (term "0"))
                     (rule "simplifyUpdate1" (formula "1") (term "1"))
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
               )
            )
            (branch "Exceptional Post (equals)"
               (rule "simplifyUpdate2" (formula "13"))
               (rule "simplifyUpdate2" (formula "17"))
               (rule "simplifyUpdate2" (formula "13") (term "1"))
               (rule "andLeft" (formula "13"))
               (rule "simplifyUpdate2" (formula "13"))
               (rule "andLeft" (formula "14"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "13"))
               (rule "close" (formula "16") (ifseqformula "15"))
            )
            (branch "Pre (equals)"
               (rule "simplifyUpdate2" (formula "16"))
               (rule "simplifyUpdate2" (formula "16") (term "1"))
               (rule "applyOnRigidFormula" (formula "16"))
               (rule "simplifyUpdate2" (formula "16") (term "0"))
               (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "1"))
               (rule "concrete_and_1" (formula "16"))
               (rule "orRight" (formula "16"))
               (rule "applyOnRigidFormula" (formula "16"))
               (rule "simplifyUpdate1" (formula "16") (term "1"))
               (rule "applyOnPV" (formula "16") (term "0"))
               (rule "applyOnRigidFormula" (formula "17"))
               (rule "simplifyUpdate1" (formula "17") (term "1"))
               (rule "applyOnRigidTerm" (formula "17") (term "0"))
               (rule "simplifyUpdate1" (formula "17") (term "0,0"))
               (rule "simplifyUpdate1" (formula "17") (term "2,0"))
               (rule "applyOnPV" (formula "17") (term "1,0"))
               (rule "referencedObjectIsCreatedRight" (formula "17") (ifseqformula "16"))
               (rule "close" (formula "17") (ifseqformula "1"))
            )
            (branch "Null reference (var = null)"
               (rule "simplifyUpdate2" (formula "16"))
               (rule "notRight" (formula "16"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "close" (formula "15") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (x = null)"
            (rule "false_right" (formula "17"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "close" (formula "14") (ifseqformula "1"))
         )
      )
      (branch "if x_2 false"
         (rule "false_to_not_true" (formula "1") (term "1"))
         (rule "simplifyUpdate2" (formula "17"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "applyOnRigidFormula" (formula "13"))
         (rule "simplifyUpdate1" (formula "13") (term "1"))
         (rule "applyOnPV" (formula "13") (term "0"))
         (rule "boolean_equal" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
   )
   (branch "Use Case"
      (rule "false_to_not_true" (formula "11") (term "0,0,1,1"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "simplifyUpdate2" (formula "11") (term "1"))
      (rule "eqSymm" (formula "8") (term "1,1,0,0,1,1"))
      (rule "eqSymm" (formula "8") (term "0,1,0,1,1"))
      (rule "sequentialToParallel2" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "simplifyUpdate3" (formula "11") (term "1,0"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "1,0"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_addComm0" (formula "12") (term "1,0,1"))
      (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,1"))
      (rule "polySimp_addComm0" (formula "10") (term "1,1,0,0,1"))
      (rule "polySimp_addComm0" (formula "9") (term "0,1"))
      (rule "polySimp_addComm0" (formula "8") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "castedGetAny" (formula "10") (term "1,2,0,0,1,0,1"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate2" (formula "12") (term "1"))
      (rule "simplifyUpdate2" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "simplifyUpdate2" (formula "11") (term "0"))
      (rule "applyOnRigidFormula" (formula "9"))
      (rule "simplifyUpdate1" (formula "9") (term "1"))
      (rule "applyOnRigidFormula" (formula "8"))
      (rule "simplifyUpdate1" (formula "8") (term "0"))
      (rule "applyOnRigidFormula" (formula "13") (term "0"))
      (rule "applyOnPV" (formula "13") (term "0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "13") (term "1"))
      (rule "simplifyUpdate1" (formula "13") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "10"))
      (rule "applyOnRigidFormula" (formula "12") (term "1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1"))
      (rule "applyOnPV" (formula "12") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "12") (term "0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0"))
      (rule "eqSymm" (formula "12") (term "0"))
      (rule "applyOnRigidFormula" (formula "11") (term "1"))
      (rule "simplifyUpdate1" (formula "11") (term "1,1"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1"))
      (rule "applyOnPV" (formula "11") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "11") (term "0"))
      (rule "simplifyUpdate1" (formula "11") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "9") (term "0"))
      (rule "simplifyUpdate1" (formula "9") (term "0,0"))
      (rule "applyOnPV" (formula "9") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "8") (term "1"))
      (rule "simplifyUpdate1" (formula "8") (term "0,1"))
      (rule "applyOnPV" (formula "8") (term "1,1"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,1"))
      (rule "applyOnPV" (formula "13") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,1"))
      (rule "simplifyUpdate1" (formula "13") (term "0,0,1"))
      (rule "applyOnRigidFormula" (formula "10") (term "0"))
      (rule "simplifyUpdate2" (formula "10") (term "1,0"))
      (rule "simplifyUpdate2" (formula "10") (term "0,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,0"))
      (rule "applyOnPV" (formula "12") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0,0"))
      (rule "eqSymm" (formula "12") (term "0"))
      (rule "applyOnRigidTerm" (formula "11") (term "0,1"))
      (rule "simplifyUpdate1" (formula "11") (term "0,0,1"))
      (rule "applyOnRigidTerm" (formula "11") (term "0,0"))
      (rule "applyOnPV" (formula "11") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "11") (term "0,0,0"))
      (rule "applyOnRigidFormula" (formula "10") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "10") (term "0,0"))
      (rule "simplifyUpdate2" (formula "10") (term "0,0,0"))
      (rule "applyOnRigidTerm" (formula "11") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "11") (term "0,1,0,1"))
      (rule "applyOnPV" (formula "11") (term "1,1,0,1"))
      (rule "applyOnRigidFormula" (formula "10") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "10") (term "1,0,1,0"))
      (rule "applyOnRigidFormula" (formula "10") (term "1,0,0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,1,0,0"))
      (rule "applyOnRigidTerm" (formula "10") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "10") (term "1,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "10") (term "2,0,0,1,0"))
      (rule "applyOnRigidTerm" (formula "10") (term "1,1,0,0"))
      (rule "simplifyUpdate1" (formula "10") (term "0,1,1,0,0"))
      (rule "applyOnPV" (formula "10") (term "1,1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_homoInEq0" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1,0"))
      (rule "add_zero_right" (formula "8") (term "0"))
      (rule "variableDeclarationAssign" (formula "16") (term "1"))
      (rule "variableDeclaration" (formula "16") (term "1") (newnames "b_1"))
      (rule "blockEmpty" (formula "16") (term "1,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "inequality_comparison_simple" (formula "16") (term "1"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "applyOnElementary" (formula "16") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "emptyModality" (formula "16") (term "1"))
      (rule "impRight" (formula "16"))
      (rule "simplifyUpdate2" (formula "17"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "simplifyUpdate1" (formula "14") (term "1"))
      (rule "applyOnPV" (formula "14") (term "0"))
      (rule "ifthenelse_concrete4" (formula "14"))
      (rule "boolean_not_equal_2" (formula "14") (term "1"))
      (rule "concrete_or_4" (formula "14"))
      (rule "notRight" (formula "14"))
      (rule "replace_known_left" (formula "13") (term "1") (ifseqformula "1"))
      (rule "concrete_eq_3" (formula "13"))
      (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
      (rule "concrete_or_1" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "applyEqRigid" (formula "12") (term "1,1") (ifseqformula "1"))
      (rule "methodCallReturn" (formula "16") (term "1"))
      (rule "assignment" (formula "16") (term "1"))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "methodCallEmpty" (formula "16") (term "1"))
      (rule "tryEmpty" (formula "16") (term "1"))
      (rule "emptyModality" (formula "16") (term "1"))
      (rule "applyOnRigidFormula" (formula "16"))
      (rule "simplifyUpdate2" (formula "16") (term "0"))
      (rule "simplifyUpdate2" (formula "16") (term "1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1"))
      (rule "applyOnPV" (formula "16") (term "0,1"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1"))
      (rule "eqClose" (formula "16") (term "1"))
      (rule "concrete_and_3" (formula "16"))
      (rule "applyOnRigidFormula" (formula "16") (term "1"))
      (rule "simplifyUpdate2" (formula "16") (term "1,1"))
      (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "16") (term "1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0"))
      (rule "simplifyUpdate2" (formula "16") (term "1,0"))
      (rule "simplifyUpdate2" (formula "16") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1"))
      (rule "simplifyUpdate2" (formula "16") (term "1,1"))
      (rule "simplifyUpdate2" (formula "16") (term "0,1"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,1"))
      (rule "applyOnPV" (formula "16") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1"))
      (rule "boolean_not_equal_2" (formula "16") (term "0,1"))
      (rule "concrete_impl_2" (formula "16") (term "1"))
      (rule "concrete_and_3" (formula "16"))
      (rule "impRight" (formula "16"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "17") (term "1"))
      (rule "simplifyUpdate1" (formula "17") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "17") (term "0"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "applyOnPV" (formula "14") (term "0"))
      (rule "simplifyUpdate1" (formula "14") (term "1"))
      (rule "boolean_not_equal_2" (formula "14"))
      (rule "false_right" (formula "14"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1"))
      (rule "applyOnPV" (formula "16") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1"))
      (rule "eqClose" (formula "16") (term "1"))
      (rule "concrete_and_3" (formula "16"))
      (rule "allRight" (formula "16") (inst "sk=i_2"))
      (rule "orRight" (formula "16"))
      (rule "orRight" (formula "16"))
      (rule "simplifyUpdate2" (formula "16"))
      (rule "applyOnRigidFormula" (formula "18"))
      (rule "applyOnRigidFormula" (formula "17"))
      (rule "simplifyUpdate1" (formula "17") (term "0"))
      (rule "applyOnRigidFormula" (formula "18") (term "1"))
      (rule "simplifyUpdate2" (formula "18") (term "0,1"))
      (rule "replace_known_right" (formula "18") (term "0,1") (ifseqformula "14"))
      (rule "concrete_or_2" (formula "18") (term "1"))
      (rule "applyOnRigidFormula" (formula "18") (term "0"))
      (rule "simplifyUpdate2" (formula "18") (term "0,0"))
      (rule "replace_known_right" (formula "18") (term "0,0,0") (ifseqformula "14"))
      (rule "concrete_not_2" (formula "18") (term "0,0"))
      (rule "concrete_or_1" (formula "18") (term "0"))
      (rule "concrete_and_1" (formula "18"))
      (rule "notRight" (formula "18"))
      (rule "applyOnRigidTerm" (formula "18") (term "1"))
      (rule "inEqSimp_leqRight" (formula "17"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "applyOnRigidFormula" (formula "2"))
      (rule "simplifyUpdate1" (formula "2") (term "1"))
      (rule "applyOnRigidTerm" (formula "18") (term "0,1"))
      (rule "simplifyUpdate1" (formula "18") (term "1,0,1"))
      (rule "applyOnPV" (formula "18") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "18") (term "2,0,1"))
      (rule "applyOnRigidTerm" (formula "2") (term "0"))
      (rule "applyOnPV" (formula "2") (term "0,0"))
      (rule "simplifyUpdate1" (formula "2") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "2") (term "2,0"))
      (rule "simplifyUpdate1" (formula "2") (term "2,2,0"))
      (rule "applyOnPV" (formula "2") (term "0,2,0"))
      (rule "applyOnRigidTerm" (formula "2") (term "1,2,0"))
      (rule "simplifyUpdate1" (formula "2") (term "1,1,2,0"))
      (rule "applyOnRigidTerm" (formula "2") (term "0,1,2,0"))
      (rule "applyOnPV" (formula "2") (term "0,0,1,2,0"))
      (rule "simplifyUpdate1" (formula "2") (term "2,0,1,2,0"))
      (rule "simplifyUpdate1" (formula "2") (term "1,0,1,2,0"))
      (rule "inEqSimp_geqRight" (formula "18"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "add_zero_left" (formula "1") (term "0,0"))
      (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_homoInEq1" (formula "13"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "1,0"))
      (rule "times_zero_1" (formula "13") (term "0"))
      (rule "leq_literals" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
      (rule "inEqSimp_homoInEq1" (formula "14") (term "0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
      (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
      (rule "add_literals" (formula "14") (term "1,1,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0"))
      (rule "leq_literals" (formula "14") (term "0"))
      (rule "concrete_impl_2" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "allLeft" (formula "13") (inst "t=i_2"))
      (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
      (rule "concrete_not_1" (formula "13") (term "0,0"))
      (rule "concrete_or_2" (formula "13") (term "0"))
      (rule "inEqSimp_homoInEq1" (formula "13") (term "1"))
      (rule "polySimp_addComm1" (formula "13") (term "0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1"))
      (rule "mul_literals" (formula "13") (term "0,1,1"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
      (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "13") (term "0,0"))
      (rule "concrete_and_2" (formula "13") (term "0"))
      (rule "concrete_or_2" (formula "13"))
      (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
      (rule "andLeft" (formula "13"))
      (rule "inEqSimp_homoInEq1" (formula "13"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0"))
      (rule "polySimp_addComm0" (formula "13") (term "0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0"))
      (rule "add_literals" (formula "13") (term "1,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0"))
      (rule "add_zero_right" (formula "13") (term "0"))
      (rule "leq_literals" (formula "13"))
      (rule "closeFalse" (formula "13"))
   )
)
)

}
