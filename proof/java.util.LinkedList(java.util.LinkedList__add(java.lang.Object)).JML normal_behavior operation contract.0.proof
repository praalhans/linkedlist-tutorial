\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jan 15 12:32:16 CET 2020
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\bootclasspath "../jre";

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jan 15 12:32:16 CET 2020
name=java.util.LinkedList[java.util.LinkedList\\:\\:add(java.lang.Object)].JML normal_behavior operation contract.0
contract=java.util.LinkedList[java.util.LinkedList\\:\\:add(java.lang.Object)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mac" ) (keyVersion "7d3deab0763c88edee4f7a08e604661e0dbdd450"))

(autoModeTime "6022")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "1,0,1,0"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,0,1,0,0,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,1,0,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,0,1,0,1,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,0,1,0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "0"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,1,0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,1,0,0,0,0,0,0,0,1"))
(rule "castedGetAny" (formula "9") (term "1,0,1,0,0,0,0,0,1"))
(rule "inEqSimp_homoInEq0" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0"))
(rule "mul_literals" (formula "6") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0"))
(rule "add_literals" (formula "6") (term "0,0"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "concrete_and_3" (formula "9") (term "0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_add_0,savedHeapBefore_add_0"))
(rule "simplifyUpdate2" (formula "9") (term "1"))
(builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_checkSize_0,exc_2") (contract "java.util.LinkedList[java.util.LinkedList::checkSize()].JML exceptional_behavior operation contract.0#java.util.LinkedList[java.util.LinkedList::checkSize()].JML normal_behavior operation contract.0"))
(branch "Post (checkSize)"
   (rule "instanceof_static_type" (formula "8") (term "0,0,0,1,1,0,1,1,1"))
   (rule "boolean_equal" (formula "8") (term "0,0,1,1,0,1,1,1"))
   (rule "insert_constant_value" (formula "8") (term "1,0,0,0,1,1,1"))
   (rule "concrete_impl_1" (formula "8") (term "0,1,1,0,1,1,1"))
   (rule "insert_constant_value" (formula "8") (term "1,0,0,0,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "typeEqDerived" (formula "9") (term "0,1,1,1,0,1") (ifseqformula "8"))
   (rule "boolean_equal" (formula "9") (term "1,1,1,0,1"))
   (rule "concrete_and_3" (formula "9") (term "1,1,0,1"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "simplifyUpdate2" (formula "9") (term "1"))
   (rule "replace_known_left" (formula "9") (term "1,1") (ifseqformula "7"))
   (rule "concrete_and_3" (formula "9") (term "1"))
   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "8"))
   (rule "concrete_not_1" (formula "9") (term "1"))
   (rule "concrete_impl_3" (formula "9"))
   (rule "notLeft" (formula "9"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "simplifyUpdate2" (formula "9") (term "1"))
   (rule "replace_known_left" (formula "9") (term "0,1") (ifseqformula "7"))
   (rule "concrete_and_1" (formula "9") (term "1"))
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "8"))
   (rule "concrete_impl_4" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "applyOnRigidFormula" (formula "9") (term "1"))
   (rule "applyOnPV" (formula "9") (term "0,1"))
   (rule "simplifyUpdate1" (formula "9") (term "1,1"))
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "7"))
   (rule "concrete_and_3" (formula "9"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "simplifyUpdate1" (formula "9") (term "1"))
   (rule "applyOnRigidTerm" (formula "9") (term "0"))
   (rule "applyOnRigidTerm" (formula "9") (term "0,0"))
   (rule "simplifyUpdate1" (formula "9") (term "1,0,0"))
   (rule "simplifyUpdate1" (formula "9") (term "2,0,0"))
   (rule "applyOnPV" (formula "9") (term "0,0,0"))
   (rule "inEqSimp_contradEq3" (formula "9") (ifseqformula "6"))
   (rule "mul_literals" (formula "9") (term "1,0,0"))
   (rule "add_literals" (formula "9") (term "0,0"))
   (rule "qeq_literals" (formula "9") (term "0"))
   (rule "concrete_and_2" (formula "9"))
   (rule "false_right" (formula "9"))
   (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_linkLast_0,exc_3,heapAfter_linkLast_0,anon_heap_linkLast_0") (contract "java.util.LinkedList[java.util.LinkedList::linkLast(java.lang.Object)].JML normal_behavior operation contract.0"))
   (branch "Post (linkLast)"
      (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,0,0,0,1,1,1,1,1"))
      (rule "translateJavaSubInt" (formula "10") (term "1,0,1,0,1,0,0,1,1,1,1,1"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,1,0,1,0,0,1,1,1,1,1"))
      (rule "mul_literals" (formula "10") (term "1,1,0,1,0,1,0,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,1,0,0,0,0,1,1,1,1,1"))
      (rule "mul_literals" (formula "10") (term "1,1,0,1,0,0,0,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "sequentialToParallel2" (formula "10"))
      (rule "simplifyUpdate3" (formula "10") (term "1,0"))
      (rule "andLeft" (formula "10"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "sequentialToParallel2" (formula "11"))
      (rule "simplifyUpdate3" (formula "11") (term "1,0"))
      (rule "andLeft" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "polySimp_addComm0" (formula "13") (term "1,0,1,0,1"))
      (rule "polySimp_addComm0" (formula "12") (term "1,0,1,0,1"))
      (rule "applyOnRigidFormula" (formula "14"))
      (rule "applyOnPV" (formula "14") (term "0"))
      (rule "simplifyUpdate1" (formula "14") (term "1"))
      (rule "applyOnRigidFormula" (formula "13"))
      (rule "simplifyUpdate1" (formula "13") (term "1"))
      (rule "simplifyUpdate1" (formula "13") (term "0"))
      (rule "applyOnPV" (formula "13") (term "1"))
      (rule "applyOnRigidFormula" (formula "12"))
      (rule "simplifyUpdate1" (formula "12") (term "1"))
      (rule "castedGetAny" (formula "13") (term "1,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1"))
      (rule "simplifyUpdate1" (formula "12") (term "2,1"))
      (rule "applyOnPV" (formula "12") (term "0,1"))
      (rule "simplifyUpdate1" (formula "12") (term "1,1"))
      (rule "applyOnRigidTerm" (formula "13") (term "0"))
      (rule "applyOnPV" (formula "13") (term "0,0"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,0,0"))
      (rule "applyOnPV" (formula "12") (term "0,0,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "1,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "0,1,1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,1,0"))
      (rule "applyOnPV" (formula "13") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "0,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,0,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "0,0,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,0,1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "1,1,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "1,1,0,1,0"))
      (rule "applyOnRigidTerm" (formula "13") (term "0,1,1,1,0"))
      (rule "applyOnPV" (formula "13") (term "0,0,1,1,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "1,0,1,1,1,0"))
      (rule "simplifyUpdate1" (formula "13") (term "2,0,1,1,1,0"))
      (rule "applyOnRigidTerm" (formula "12") (term "0,1,1,0,1,0"))
      (rule "applyOnPV" (formula "12") (term "0,0,1,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "1,0,1,1,0,1,0"))
      (rule "simplifyUpdate1" (formula "12") (term "2,0,1,1,0,1,0"))
      (rule "lenOfSeqConcatEQ" (formula "13") (term "1,1,1,0") (ifseqformula "12"))
      (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "1,1,0"))
      (rule "add_literals" (formula "13") (term "0,1,1,0"))
      (rule "add_zero_left" (formula "13") (term "1,1,0"))
      (rule "lenOfSeqConcatEQ" (formula "12") (term "1,1,0,1,0") (ifseqformula "12"))
      (rule "lenOfSeqSingleton" (formula "12") (term "1,1,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "12") (term "1,1,0,1,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,0"))
      (rule "add_literals" (formula "12") (term "0,1,0,1,0"))
      (rule "add_zero_left" (formula "12") (term "1,0,1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "pullOutSelect" (formula "12") (term "1") (inst "selectSK=java_util_LinkedList_nodeList_1"))
      (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "10"))
      (rule "replaceKnownSelect_taclet00_0" (formula "14") (term "0,1,0"))
      (rule "elementOfFreshLocs" (formula "12") (term "1,0,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "13") (term "0,0,1,0"))
      (rule "elementOfAllLocs" (formula "12") (term "0,0,0,0"))
      (rule "concrete_and_1" (formula "12") (term "0,0,0"))
      (rule "equalUnique" (formula "12") (term "0,0,0,0"))
      (rule "concrete_not_2" (formula "12") (term "0,0,0"))
      (rule "concrete_or_1" (formula "12") (term "0,0"))
      (rule "ifthenelse_true" (formula "12") (term "0"))
      (rule "hideAuxiliaryEq" (formula "12"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "12") (term "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "13") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "12") (term "0,0,1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
      (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
      (rule "castedGetAny" (formula "13") (term "2,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
      (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
      (rule "add_literals" (formula "13") (term "0,0,1,0"))
      (rule "leq_literals" (formula "13") (term "0,1,0"))
      (rule "ifthenelse_false" (formula "13") (term "1,0"))
      (rule "getOfSeqConcatEQ" (formula "13") (term "1,0") (ifseqformula "12"))
      (rule "methodCallReturn" (formula "16") (term "1") (userinteraction))
      (rule "assignment" (formula "16") (term "1") (userinteraction))
      (rule "methodCallEmpty" (formula "16") (term "1,1") (userinteraction))
      (rule "tryEmpty" (formula "16") (term "1,1") (userinteraction))
      (rule "emptyModality" (formula "16") (term "1,1") (userinteraction))
      (rule "sequentialToParallel2" (formula "16"))
      (rule "simplifyUpdate3" (formula "16") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "16"))
      (rule "simplifyUpdate2" (formula "16") (term "0"))
      (rule "simplifyUpdate2" (formula "16") (term "1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0"))
      (rule "simplifyUpdate2" (formula "16") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1"))
      (rule "applyOnPV" (formula "16") (term "0,1"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0"))
      (rule "simplifyUpdate2" (formula "16") (term "0,0,0"))
      (rule "simplifyUpdate2" (formula "16") (term "1,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0"))
      (rule "simplifyUpdate2" (formula "16") (term "1,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,0,0"))
      (rule "applyOnRigidFormula" (formula "16") (term "1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,1,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,1,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,0,1,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "0,1,0,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,0,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,0,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "1,1,0,1,0,0,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,1,1,0,1,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,1,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,1,1,0,1,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,1,1,0,1,0,0,0"))
      (rule "applyOnRigidTerm" (formula "16") (term "0,1,1,0,1,0,0,0,0,0"))
      (rule "applyOnPV" (formula "16") (term "0,0,1,1,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "1,0,1,1,0,1,0,0,0,0,0"))
      (rule "simplifyUpdate1" (formula "16") (term "2,0,1,1,0,1,0,0,0,0,0"))
      (rule "andRight" (formula "16"))
      (branch "Case 1"
         (rule "andRight" (formula "16"))
         (branch "Case 1"
            (rule "andRight" (formula "16"))
            (branch "Case 1"
               (rule "andRight" (formula "16"))
               (branch "Case 1"
                  (rule "replaceKnownSelect_taclet00_0" (formula "16") (term "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "16") (term "1"))
                  (rule "replaceKnownSelect_taclet00_0" (formula "16") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "16") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet00_0" (formula "16") (term "0,1,1,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "16") (term "0,1,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
                  (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
                  (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
                  (rule "castedGetAny" (formula "13") (term "2,1,0"))
                  (rule "lenOfSeqConcatEQ" (formula "16") (term "1,1,0,1,0") (ifseqformula "12"))
                  (rule "lenOfSeqSingleton" (formula "16") (term "1,1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "1,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,1,0,1,0"))
                  (rule "add_zero_left" (formula "16") (term "1,0,1,0"))
                  (rule "close" (formula "16") (ifseqformula "12"))
               )
               (branch "Case 2"
                  (rule "replaceKnownSelect_taclet00_0" (formula "16") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "16") (term "0,1,0"))
                  (rule "replaceKnownSelect_taclet00_0" (formula "16") (term "0,1,1,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "16") (term "0,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
                  (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
                  (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
                  (rule "castedGetAny" (formula "13") (term "2,1,0"))
                  (rule "lenOfSeqConcatEQ" (formula "16") (term "1,1,1,0") (ifseqformula "12"))
                  (rule "lenOfSeqSingleton" (formula "16") (term "1,1,1,1,0"))
                  (rule "polySimp_addComm0" (formula "16") (term "1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,1,1,0"))
                  (rule "add_zero_left" (formula "16") (term "1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                  (rule "add_literals" (formula "13") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,1,0"))
                  (rule "ifthenelse_false" (formula "13") (term "1,0"))
                  (rule "close" (formula "16") (ifseqformula "13"))
               )
            )
            (branch "Case 2"
               (rule "boolean_equal" (formula "16"))
               (rule "closeTrue" (formula "16"))
            )
         )
         (branch
            (rule "close" (formula "16") (ifseqformula "14"))
         )
      )
      (branch "Case 2"
         (rule "eqClose" (formula "16"))
         (rule "closeTrue" (formula "16"))
      )
   )
   (branch "Exceptional Post (linkLast)"
      (rule "translateJavaSubInt" (formula "10") (term "1,0,1,0,1,0,0,1,1,1,1,1"))
      (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,0,0,0,1,1,1,1,1"))
      (rule "simplifyUpdate2" (formula "12"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "eqSymm" (formula "10") (term "0,0,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,1,0,1,0,0,1,1,1,1,1"))
      (rule "mul_literals" (formula "10") (term "1,1,0,1,0,1,0,0,1,1,1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,1,0,0,0,0,1,1,1,1,1"))
      (rule "mul_literals" (formula "10") (term "1,1,0,1,0,0,0,0,1,1,1,1,1"))
      (rule "sequentialToParallel2" (formula "12"))
      (rule "simplifyUpdate3" (formula "12") (term "1,0"))
      (rule "sequentialToParallel2" (formula "10"))
      (rule "simplifyUpdate3" (formula "10") (term "1,0"))
      (rule "andLeft" (formula "10"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "sequentialToParallel2" (formula "11"))
      (rule "simplifyUpdate3" (formula "11") (term "1,0"))
      (rule "andLeft" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "simplifyUpdate2" (formula "13"))
      (rule "andLeft" (formula "11"))
      (rule "simplifyUpdate2" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "notLeft" (formula "11"))
      (rule "close" (formula "15") (ifseqformula "14"))
   )
   (branch "Pre (linkLast)"
      (rule "insert_constant_value" (formula "10") (term "1,0,0,1,1"))
      (rule "simplifyUpdate2" (formula "10"))
      (rule "simplifyUpdate2" (formula "10") (term "1"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
      (rule "applyOnRigidFormula" (formula "10"))
      (rule "simplifyUpdate2" (formula "10") (term "0"))
      (rule "replace_known_left" (formula "10") (term "1,0") (ifseqformula "7"))
      (rule "concrete_and_3" (formula "10") (term "0"))
      (rule "applyOnRigidFormula" (formula "10") (term "1"))
      (rule "simplifyUpdate2" (formula "10") (term "0,1"))
      (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "1"))
      (rule "concrete_and_1" (formula "10") (term "1"))
      (rule "applyOnRigidFormula" (formula "10") (term "1"))
      (rule "applyOnRigidFormula" (formula "10") (term "0,1"))
      (rule "applyOnPV" (formula "10") (term "0,0,1"))
      (rule "simplifyUpdate1" (formula "10") (term "1,0,1"))
      (rule "applyOnRigidFormula" (formula "10") (term "1,1"))
      (rule "simplifyUpdate1" (formula "10") (term "1,1,1"))
      (rule "applyOnRigidTerm" (formula "10") (term "0,1,1"))
      (rule "simplifyUpdate1" (formula "10") (term "0,0,1,1"))
      (rule "applyOnPV" (formula "10") (term "1,0,1,1"))
      (rule "simplifyUpdate1" (formula "10") (term "2,0,1,1"))
      (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "4"))
      (rule "concrete_and_3" (formula "10"))
      (rule "inEqSimp_leqRight" (formula "10"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "7"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Exceptional Post (checkSize)"
   (rule "instanceof_static_type" (formula "8") (term "0,0,0,1,1,0,1,1,1"))
   (rule "boolean_equal" (formula "8") (term "0,0,1,1,0,1,1,1"))
   (rule "insert_constant_value" (formula "8") (term "1,0,0,0,1,1,1"))
   (rule "concrete_impl_1" (formula "8") (term "0,1,1,0,1,1,1"))
   (rule "insert_constant_value" (formula "8") (term "1,0,0,0,1,1,1,1"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "simplifyUpdate2" (formula "8"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "applyOnRigidFormula" (formula "10"))
   (rule "simplifyUpdate2" (formula "10") (term "1"))
   (rule "replace_known_left" (formula "10") (term "0,1") (ifseqformula "7"))
   (rule "concrete_and_1" (formula "10") (term "1"))
   (rule "replace_known_right" (formula "10") (term "1") (ifseqformula "11"))
   (rule "concrete_impl_3" (formula "10"))
   (rule "notLeft" (formula "10"))
   (rule "applyOnRigidFormula" (formula "9"))
   (rule "simplifyUpdate2" (formula "9") (term "1"))
   (rule "replace_known_left" (formula "9") (term "0,1,1") (ifseqformula "7"))
   (rule "concrete_and_1" (formula "9") (term "1,1"))
   (rule "replace_known_right" (formula "9") (term "0,0,1") (ifseqformula "11"))
   (rule "concrete_not_2" (formula "9") (term "0,1"))
   (rule "concrete_and_1" (formula "9") (term "1"))
   (rule "applyOnRigidFormula" (formula "10"))
   (rule "applyOnRigidFormula" (formula "9") (term "0"))
   (rule "applyOnRigidFormula" (formula "10") (term "0"))
   (rule "applyOnRigidFormula" (formula "10") (term "1"))
   (rule "simplifyUpdate1" (formula "10") (term "1,1"))
   (rule "applyOnPV" (formula "10") (term "0,1"))
   (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "7"))
   (rule "concrete_and_3" (formula "10"))
   (rule "notRight" (formula "10"))
   (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "10") (term "0"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "applyOnRigidFormula" (formula "10") (term "0"))
   (rule "simplifyUpdate1" (formula "10") (term "1,0"))
   (rule "applyOnPV" (formula "10") (term "0,0"))
   (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "8"))
   (rule "concrete_impl_1" (formula "10"))
   (rule "applyOnRigidTerm" (formula "1") (term "0"))
   (rule "applyOnRigidTerm" (formula "1") (term "0,0"))
   (rule "simplifyUpdate1" (formula "1") (term "2,0,0"))
   (rule "simplifyUpdate1" (formula "1") (term "1,0,0"))
   (rule "applyOnPV" (formula "1") (term "0,0,0"))
   (rule "inEqSimp_contradEq3" (formula "1") (ifseqformula "7"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "qeq_literals" (formula "1") (term "0"))
   (rule "concrete_and_2" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "Pre (checkSize)"
   (rule "insert_constant_value" (formula "9") (term "1,0,0,0,1,1"))
   (rule "insert_constant_value" (formula "9") (term "1,0,0,1,0,1,1"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "simplifyUpdate2" (formula "9"))
   (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "7"))
   (rule "concrete_and_3" (formula "9") (term "0,0"))
   (rule "replace_known_left" (formula "9") (term "1") (ifseqformula "1"))
   (rule "concrete_and_3" (formula "9"))
   (rule "orRight" (formula "9"))
   (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "9"))
   (rule "concrete_not_2" (formula "10") (term "0"))
   (rule "concrete_and_1" (formula "10"))
   (rule "close" (formula "10") (ifseqformula "7"))
)
)

}
