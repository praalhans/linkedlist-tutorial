\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jan 15 12:28:07 CET 2020
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\bootclasspath "../jre";

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jan 15 12:28:07 CET 2020
name=java.util.LinkedList[java.util.LinkedList\\:\\:linkLast(java.lang.Object)].JML normal_behavior operation contract.0
contract=java.util.LinkedList[java.util.LinkedList\\:\\:linkLast(java.lang.Object)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mac" ) (keyVersion "7d3deab0763c88edee4f7a08e604661e0dbdd450"))

(autoModeTime "26237")

(branch "dummy ID"
(rule "insert_constant_value" (formula "1") (term "1,0,1,0") (newnames "e,self,exc,heapAtPre,o,f"))
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,0,1,0,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,1,0,0,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "6") (term "0"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,0,1,0,0,0,0,0,0,1"))
(rule "castedGetAny" (formula "9") (term "1,0,1,0,0,0,0,1"))
(rule "inEqSimp_homoInEq0" (formula "6"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0"))
(rule "mul_literals" (formula "6") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0"))
(rule "add_literals" (formula "6") (term "0,0"))
(rule "assignment" (formula "9") (term "1"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "inEqSimp_sepNegMonomial1" (formula "6"))
(rule "polySimp_mulLiterals" (formula "6") (term "0"))
(rule "polySimp_elimOne" (formula "6") (term "0"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "all_unused" (formula "9") (term "1,0,1"))
(rule "concrete_and_3" (formula "9") (term "0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_linkLast,savedHeapBefore_linkLast"))
(rule "simplifyUpdate2" (formula "9") (term "1"))
(rule "variableDeclarationFinalAssign" (formula "9") (term "1"))
(rule "variableDeclarationFinal" (formula "9") (term "1") (newnames "l"))
(rule "assignment_read_attribute_this" (formula "9"))
(rule "sequentialToParallel2" (formula "9"))
(rule "simplifyUpdate3" (formula "9") (term "1,0"))
(rule "variableDeclarationFinalAssign" (formula "9") (term "1"))
(rule "variableDeclarationFinal" (formula "9") (term "1") (newnames "newNode"))
(rule "lenNonNegative" (formula "6") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "seqGetAlphaCast" (formula "10") (term "0,1,0,0,0,0,0,1"))
(rule "castDel" (formula "1") (term "0"))
(rule "eqClose" (formula "1"))
(rule "true_left" (formula "1"))
(rule "seqGetAlphaCast" (formula "10") (term "1,0,1,0,0,0,1"))
(rule "castedGetAny" (formula "1") (term "0"))
(rule "eqClose" (formula "1"))
(rule "true_left" (formula "1"))
(rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,1,0") (ifseqformula "1"))
(rule "instanceCreationAssignment" (formula "11") (term "1") (inst "#v0=n"))
(rule "variableDeclarationAssign" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "n"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "11") (term "1") (inst "#v0=n_1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "n_1"))
(rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(rule "simplifyUpdate2" (formula "11") (term "1"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "11") (term "1") (inst "#v0=n_2"))
(rule "variableDeclaration" (formula "11") (term "1") (newnames "n_2"))
(rule "allocateInstance" (formula "11"))
(rule "false_to_not_true" (formula "1") (term "1,1,0,1"))
(rule "simplifyUpdate2" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "replace_known_left" (formula "1") (term "0") (ifseqformula "4"))
(rule "concrete_impl_1" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(rule "simplifyUpdate2" (formula "14") (term "1"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "methodCallWithinClass" (formula "14") (term "1"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(rule "simplifyUpdate2" (formula "14") (term "1"))
(rule "methodCallSuper" (formula "14") (term "1"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(rule "simplifyUpdate2" (formula "14") (term "1"))
(rule "methodCallEmpty" (formula "14") (term "1"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "methodCallEmpty" (formula "14") (term "1"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "14") (term "1"))
(rule "methodCallReturn" (formula "14") (term "1"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnPV" (formula "14") (term "0,1,0"))
(rule "methodCallEmpty" (formula "14") (term "1"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnPV" (formula "14") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "var"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnPV" (formula "14") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "var_1"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnPV" (formula "14") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "14") (term "1"))
(rule "variableDeclaration" (formula "14") (term "1") (newnames "var_2"))
(rule "assignment" (formula "14") (term "1"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(rule "simplifyUpdate2" (formula "14") (term "1"))
(rule "methodCallSuper" (formula "14") (term "1"))
(rule "methodBodyExpand" (formula "14") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
(rule "simplifyUpdate2" (formula "14") (term "1"))
(rule "methodCallEmpty" (formula "14") (term "1"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "applyOnPV" (formula "14") (term "3,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "dropEffectlessStores" (formula "14") (term "0,1,0"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "3,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "dropEffectlessStores" (formula "14") (term "0,1,0"))
(rule "assignment_write_attribute_this" (formula "14"))
(rule "sequentialToParallel2" (formula "14"))
(rule "simplifyUpdate2" (formula "14"))
(rule "simplifyUpdate3" (formula "14") (term "1,0"))
(rule "applyOnElementary" (formula "14") (term "1,0"))
(rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
(rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
(rule "applyOnPV" (formula "14") (term "1,0,1,0"))
(rule "applyOnPV" (formula "14") (term "3,0,1,0"))
(rule "applyOnPV" (formula "14") (term "0,0,1,0"))
(rule "dropEffectlessStores" (formula "14") (term "0,1,0"))
(rule "methodCallEmpty" (formula "14") (term "1"))
(rule "blockEmpty" (formula "14") (term "1"))
(rule "assignment_write_attribute" (formula "14"))
(branch "Normal Execution (n != null)"
   (rule "sequentialToParallel2" (formula "14"))
   (rule "simplifyUpdate2" (formula "14"))
   (rule "simplifyUpdate3" (formula "14") (term "1,0"))
   (rule "applyOnElementary" (formula "14") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
   (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
   (rule "dropEffectlessStores" (formula "14") (term "0,1,0"))
   (rule "assignment" (formula "14") (term "1"))
   (rule "sequentialToParallel2" (formula "14"))
   (rule "simplifyUpdate2" (formula "14"))
   (rule "simplifyUpdate3" (formula "14") (term "1,0"))
   (rule "applyOnElementary" (formula "14") (term "1,0"))
   (rule "applyOnPV" (formula "14") (term "0,1,0"))
   (rule "assignment_write_attribute_this" (formula "14"))
   (rule "sequentialToParallel2" (formula "14"))
   (rule "simplifyUpdate2" (formula "14"))
   (rule "simplifyUpdate3" (formula "14") (term "1,0"))
   (rule "applyOnElementary" (formula "14") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "14") (term "3,0,1,0"))
   (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
   (rule "ifElseUnfold" (formula "14") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "14") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "14") (term "1"))
   (rule "sequentialToParallel2" (formula "14"))
   (rule "simplifyUpdate3" (formula "14") (term "1,0"))
   (rule "applyOnElementary" (formula "14") (term "1,0"))
   (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
   (rule "applyOnRigidFormula" (formula "14") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "14") (term "0,0,0,1,0"))
   (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0"))
   (rule "ifElseSplit" (formula "14"))
   (branch "if x true"
      (rule "simplifyUpdate2" (formula "15"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "ifthenelse_concrete3" (formula "1"))
      (rule "boolean_not_equal_2" (formula "1") (term "1"))
      (rule "concrete_or_4" (formula "1"))
      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
      (rule "concrete_or_1" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "assignment_write_attribute_this" (formula "14"))
      (rule "sequentialToParallel2" (formula "14"))
      (rule "simplifyUpdate2" (formula "14"))
      (rule "simplifyUpdate3" (formula "14") (term "1,0"))
      (rule "applyOnElementary" (formula "14") (term "1,0"))
      (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
      (rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
      (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "14") (term "3,0,1,0"))
      (rule "postincrement_attribute" (formula "14") (term "1") (inst "#v=l"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "l_3"))
      (rule "assignment" (formula "14") (term "1"))
      (rule "sequentialToParallel2" (formula "14"))
      (rule "simplifyUpdate3" (formula "14") (term "1,0"))
      (rule "eval_order_access4" (formula "14") (term "1") (inst "#v1=x") (inst "#v0=l_4"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "l_4"))
      (rule "assignment" (formula "14") (term "1"))
      (rule "sequentialToParallel2" (formula "14"))
      (rule "simplifyUpdate3" (formula "14") (term "1,0"))
      (rule "applyOnElementary" (formula "14") (term "1,0"))
      (rule "applyOnPV" (formula "14") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_7"))
      (rule "compound_int_cast_expression" (formula "14") (term "1") (inst "#v=x_8"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_8"))
      (rule "remove_parentheses_right" (formula "14") (term "1"))
      (rule "compound_addition_1" (formula "14") (term "1") (inst "#v=x_9"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_9"))
      (rule "assignment_read_attribute" (formula "14"))
      (branch "Normal Execution (l_3 != null)"
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
         (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=java_util_LinkedList_size_1"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (rule "equalUnique" (formula "1") (term "1,0,0"))
         (rule "concrete_and_4" (formula "1") (term "0,0"))
         (rule "ifthenelse_false" (formula "1") (term "0"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "14") (term "0,1,0"))
         (rule "assignmentAdditionInt" (formula "14") (term "1"))
         (rule "translateJavaAddInt" (formula "14") (term "0,0,1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "1,0,1,0"))
         (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
         (rule "widening_identity_cast_5" (formula "14") (term "1"))
         (rule "assignment" (formula "14") (term "1"))
         (rule "sequentialToParallel2" (formula "14"))
         (rule "simplifyUpdate2" (formula "14"))
         (rule "simplifyUpdate3" (formula "14") (term "1,0"))
         (rule "applyOnElementary" (formula "14") (term "1,0"))
         (rule "applyOnPV" (formula "14") (term "0,1,0"))
         (rule "assignment_write_attribute" (formula "14"))
         (branch "Normal Execution (l_4 != null)"
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "3,0,1,0"))
            (rule "eval_order_access4" (formula "14") (term "1") (inst "#v1=x") (inst "#v0=l"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "l_5"))
            (rule "assignment" (formula "14") (term "1"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_13"))
            (rule "seqConcatUnfoldLeft" (formula "14") (term "1") (inst "#vLeftNew=x_14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_14"))
            (rule "assignment_read_attribute_this" (formula "14"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=java_util_LinkedList_nodeList_4"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "equalUnique" (formula "1") (term "1,0,0"))
            (rule "concrete_and_4" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "14") (term "0,1,0"))
            (rule "seqConcatUnfoldRight" (formula "14") (term "1") (inst "#vRightNew=x_15"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_15"))
            (rule "seqSingletonUnfold" (formula "14") (term "1") (inst "#vNew=n"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "n_5"))
            (rule "assignment_read_attribute_this" (formula "14"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,1,0"))
            (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=java_util_LinkedList_last_2"))
            (rule "simplifySelectOfStore" (formula "1"))
            (rule "eqClose" (formula "1") (term "0,0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0,0"))
            (rule "equalUnique" (formula "1") (term "0,0,0"))
            (rule "concrete_and_1" (formula "1") (term "0,0"))
            (rule "equalUnique" (formula "1") (term "0,0,0"))
            (rule "concrete_not_2" (formula "1") (term "0,0"))
            (rule "ifthenelse_true" (formula "1") (term "0"))
            (rule "castDel" (formula "1") (term "0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "0,1,0"))
            (rule "assignment" (formula "14") (term "1"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "assignment" (formula "14") (term "1"))
            (rule "sequentialToParallel2" (formula "14"))
            (rule "simplifyUpdate2" (formula "14"))
            (rule "simplifyUpdate3" (formula "14") (term "1,0"))
            (rule "applyOnElementary" (formula "14") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
            (rule "assignment_write_attribute" (formula "14"))
            (branch "Normal Execution (l_5 != null)"
               (rule "sequentialToParallel2" (formula "14"))
               (rule "simplifyUpdate2" (formula "14"))
               (rule "simplifyUpdate3" (formula "14") (term "1,0"))
               (rule "applyOnElementary" (formula "14") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "3,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "14") (term "3,0,1,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "14") (term "1,0,1,0"))
               (rule "emptyStatement" (formula "14") (term "1"))
               (rule "methodCallEmpty" (formula "14") (term "1"))
               (rule "tryEmpty" (formula "14") (term "1"))
               (rule "emptyModality" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "14"))
               (rule "simplifyUpdate2" (formula "14") (term "0"))
               (rule "simplifyUpdate2" (formula "14") (term "1"))
               (rule "applyOnRigidFormula" (formula "14") (term "0"))
               (rule "simplifyUpdate2" (formula "14") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1"))
               (rule "applyOnPV" (formula "14") (term "0,1"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,0"))
               (rule "simplifyUpdate2" (formula "14") (term "1,0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1,0"))
               (rule "applyOnPV" (formula "14") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0"))
               (rule "applyOnRigidFormula" (formula "14") (term "1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,1,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,1,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,1,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,0,0,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,0,1,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,1,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "0,1,0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,0,1,0,0,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,1,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "1,1,0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,1,1,0,1,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,1,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,1,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,1,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "14") (term "0,1,1,0,1,0,0,0,0"))
               (rule "applyOnPV" (formula "14") (term "0,0,1,1,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "1,0,1,1,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "14") (term "2,0,1,1,0,1,0,0,0,0"))
               (rule "hide_left" (formula "6") (userinteraction))
               (rule "andRight" (formula "13"))
               (branch "Case 1"
                  (rule "andRight" (formula "13"))
                  (branch "Case 1"
                     (rule "andRight" (formula "13"))
                     (branch "Case 1"
                        (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "1"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "13") (inst "iv=iv"))
                        (rule "lenOfSeqConcat" (formula "13") (term "0,0"))
                        (rule "lenOfSeqSingleton" (formula "13") (term "1,0,0"))
                        (rule "eqSymm" (formula "13") (term "0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                        (rule "lenOfSeqConcat" (formula "13") (term "1,1,0,0,1"))
                        (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1"))
                        (rule "getOfSeqConcat" (formula "13") (term "0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,2,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,2,0,1,0,1"))
                        (rule "getOfSeqSingleton" (formula "13") (term "2,0,1,0,1"))
                        (rule "castDel" (formula "13") (term "1,2,0,1,0,1"))
                        (rule "castDel" (formula "13") (term "2,2,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "13") (term "0,2,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,2,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,0,2,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,1,0,1"))
                        (rule "pullOutSelect" (formula "13") (term "0,1,1,0,1") (inst "selectSK=java_util_LinkedList_nodeList_7"))
                        (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "14") (term "0,1,1,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "14") (term "0,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "14") (term "0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "14") (term "0,1,1,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "14") (term "0,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "lenOfSeqConcat" (formula "13") (term "0,0"))
                        (rule "lenOfSeqSingleton" (formula "13") (term "1,0,0"))
                        (rule "polySimp_homoEq" (formula "13") (term "0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "0,0"))
                        (rule "eqClose" (formula "13") (term "0"))
                        (rule "concrete_and_1" (formula "13"))
                        (rule "allRight" (formula "13") (inst "sk=iv_0"))
                        (rule "impRight" (formula "13"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "15") (term "0,2,0"))
                        (rule "lenOfSeqConcat" (formula "15") (term "1,1,1,2,0"))
                        (rule "lenOfSeqSingleton" (formula "15") (term "1,1,1,1,2,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "1,1,1,2,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "1,1,2,0"))
                        (rule "add_literals" (formula "15") (term "0,1,1,2,0"))
                        (rule "add_zero_left" (formula "15") (term "1,1,2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "getOfSeqConcat" (formula "15") (term "1"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                        (rule "getOfSeqSingleton" (formula "15") (term "2,0"))
                        (rule "castDel" (formula "15") (term "2,2,0"))
                        (rule "castDel" (formula "15") (term "1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "getOfSeqConcat" (formula "15") (term "1,2,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,2,1,2,0"))
                        (rule "polySimp_pullOutFactor1" (formula "15") (term "1,2,1,2,0"))
                        (rule "add_literals" (formula "15") (term "1,1,2,1,2,0"))
                        (rule "times_zero_1" (formula "15") (term "1,2,1,2,0"))
                        (rule "getOfSeqSingletonConcrete" (formula "15") (term "2,1,2,0"))
                        (rule "castDel" (formula "15") (term "2,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,2,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,2,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,1,2,0"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,1,2,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,1,2,0"))
                        (rule "add_literals" (formula "15") (term "0,0,1,2,0"))
                        (rule "leq_literals" (formula "15") (term "0,1,2,0"))
                        (rule "ifthenelse_false" (formula "15") (term "1,2,0"))
                        (rule "eqClose" (formula "15"))
                        (rule "closeTrue" (formula "15"))
                     )
                     (branch "Case 2"
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "dismissNonSelectedField" (formula "13") (term "0"))
                        (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,1,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
                        (rule "pullOutSelect" (formula "13") (term "0,1,1,1,0") (inst "selectSK=java_util_LinkedList_nodeList_6"))
                        (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "14") (term "0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "lenOfSeqConcat" (formula "13") (term "1,1,1,0"))
                        (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,1,0"))
                        (rule "add_literals" (formula "13") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "13") (term "1,1,0"))
                        (rule "getOfSeqConcat" (formula "13") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "13") (term "1,2,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,1,0"))
                        (rule "add_literals" (formula "13") (term "1,1,2,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,2,1,0"))
                        (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,1,0"))
                        (rule "castDel" (formula "13") (term "2,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                        (rule "add_literals" (formula "13") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "13") (term "0,1,0"))
                        (rule "ifthenelse_false" (formula "13") (term "1,0"))
                        (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_Node_item_3"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                        (rule "eqClose" (formula "14"))
                        (rule "closeTrue" (formula "14"))
                     )
                  )
                  (branch "Case 2"
                     (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
                     (rule "andRight" (formula "13"))
                     (branch "Case 1"
                        (rule "andRight" (formula "13"))
                        (branch "Case 1"
                           (rule "andRight" (formula "13"))
                           (branch "Case 1"
                              (rule "andRight" (formula "13"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "13"))
                                 (branch "Case 1"
                                    (rule "dismissNonSelectedField" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,1") (ifseqformula "1"))
                                    (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_9"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "13"))
                                    (rule "lenOfSeqConcat" (formula "13") (term "1"))
                                    (rule "lenOfSeqSingleton" (formula "13") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1"))
                                    (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_size_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "13"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "13") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "13"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "close" (formula "19") (ifseqformula "9"))
                                 )
                                 (branch "Case 2"
                                    (rule "insert_constant_value" (formula "13") (term "1"))
                                    (rule "inEqSimp_leqRight" (formula "13"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "3,0,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_8"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                    (rule "lenOfSeqSingleton" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                    (rule "concrete_or_1" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (rule "concrete_and_2" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "13") (inst "sk=i_1_0"))
                                 (rule "impRight" (formula "13"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,0,0,0,0,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "2") (term "3,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "15") (term "0,0,0,0") (inst "selectSK=java_util_LinkedList_nodeList_10"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "16") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0,0"))
                                 (rule "concrete_and_1" (formula "1") (term "0,0"))
                                 (rule "equalUnique" (formula "1") (term "0,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "1") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "16") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "lenOfSeqConcat" (formula "2") (term "0"))
                                 (rule "lenOfSeqSingleton" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "getOfSeqConcat" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,2,0,0,0"))
                                 (rule "ifEqualsNull" (formula "15") (term "0,0"))
                                 (rule "getOfSeqSingleton" (formula "15") (term "0,1,1,0,0"))
                                 (rule "castDel" (formula "15") (term "2,0,1,1,0,0"))
                                 (rule "castDel" (formula "15") (term "1,0,1,1,0,0"))
                                 (rule "ifEqualsNull" (formula "15") (term "1,1,0,0"))
                                 (rule "replace_known_right" (formula "15") (term "1,0,1,1,0,0") (ifseqformula "13"))
                                 (rule "concrete_and_4" (formula "15") (term "0,1,1,0,0"))
                                 (rule "concrete_or_2" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "15") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,0"))
                                 (rule "getOfSeqConcat" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,2,0,0,1"))
                                 (rule "getOfSeqSingleton" (formula "15") (term "2,0,0,1"))
                                 (rule "castDel" (formula "15") (term "1,2,0,0,1"))
                                 (rule "castDel" (formula "15") (term "2,2,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,0,1,0,0"))
                                 (rule "commute_and" (formula "16") (term "0,0,0"))
                                 (rule "commute_and" (formula "16") (term "1,1,0,0"))
                                 (rule "cnf_rightDist" (formula "16") (term "0,0"))
                                 (rule "commute_or" (formula "16") (term "0,0,0"))
                                 (rule "cnf_rightDist" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "16") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,1,1,1,0,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "1,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,1,0,0,0"))
                                 (rule "add_literals" (formula "16") (term "1,0,1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "0,1,1,0,0,0"))
                                 (rule "leq_literals" (formula "16") (term "1,1,0,0,0"))
                                 (rule "concrete_or_3" (formula "16") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "16") (term "0,0,0"))
                                 (rule "commute_or" (formula "16") (term "0,0,0"))
                                 (rule "cnf_rightDist" (formula "16") (term "1,0,0"))
                                 (rule "commute_or" (formula "16") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "commute_or" (formula "16") (term "0,1,1,0,0"))
                                 (rule "applyEq_or_int4" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "16") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0,1,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,1,1,1,1,0,0"))
                                 (rule "leq_literals" (formula "16") (term "1,1,1,1,0,0"))
                                 (rule "concrete_or_4" (formula "16") (term "1,1,1,0,0"))
                                 (rule "cnf_rightDist" (formula "16") (term "0,1,0,0"))
                                 (rule "commute_or" (formula "16") (term "0,0,1,0,0"))
                                 (rule "commute_or" (formula "16") (term "1,0,1,0,0"))
                                 (rule "commute_and_2" (formula "16") (term "1,0,0"))
                                 (rule "commute_and" (formula "16") (term "1,0,1,0,0"))
                                 (rule "shift_paren_and" (formula "16") (term "0,1,0,0"))
                                 (rule "commute_and" (formula "16") (term "0,0"))
                                 (rule "commute_and" (formula "16") (term "0,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "16") (term "0,0,1"))
                                 (branch "self.nodeList.length >= 1 + i_1_0 TRUE"
                                    (rule "replace_known_left" (formula "17") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "17") (term "1,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "17") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "17") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0,0,0,0,0,0"))
                                    (rule "concrete_not_2" (formula "17") (term "0,0,0,0,0"))
                                    (rule "concrete_and_1" (formula "17") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "17") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,0,1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,1,1,0,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,0,1,1,0,0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "0,1,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "17") (term "1,1,0,0,0"))
                                    (rule "concrete_or_3" (formula "17") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "17") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "17") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0,1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0"))
                                    (rule "leq_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "concrete_and_2" (formula "17") (term "1,1,0,0"))
                                    (rule "concrete_or_4" (formula "17") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "commute_and" (formula "16") (term "0,0"))
                                    (rule "cut_direct" (formula "16") (term "1"))
                                    (branch "CUT: java.util.LinkedList.Node::instance(self.nodeList[i_1_0]) = TRUE TRUE"
                                       (rule "concrete_and_3" (formula "17"))
                                       (rule "notRight" (formula "17"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "boolean_equal" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "eqClose" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                       (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0,1"))
                                       (rule "eqSymm" (formula "16") (term "1,1"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                       (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                                       (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                                       (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                                       (rule "concrete_and_2" (formula "16") (term "0,1"))
                                       (rule "concrete_and_2" (formula "16") (term "1"))
                                       (rule "concrete_or_4" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                       (rule "eqSymm" (formula "19") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                       (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "16"))
                                       (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                       (rule "leq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "18") (term "0,1,0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "14") (term "0,0,0,1,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "3") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                       (rule "qeq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: java.util.LinkedList.Node::instance(self.nodeList[i_1_0]) = TRUE FALSE"
                                       (rule "concrete_and_4" (formula "17"))
                                       (rule "false_right" (formula "17"))
                                       (rule "seqGetAlphaCast" (formula "16") (term "0,0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "eqClose" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "12") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                       (rule "insert_constant_value" (formula "12") (term "1,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,1,0,0"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,1"))
                                       (rule "eqSymm" (formula "15") (term "1,0,1"))
                                       (rule "replace_known_left" (formula "15") (term "1,0") (ifseqformula "4"))
                                       (rule "concrete_and_3" (formula "15") (term "0"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0,0,0,1") (ifseqformula "4"))
                                       (rule "concrete_not_1" (formula "15") (term "1,0,0,0,1"))
                                       (rule "concrete_and_4" (formula "15") (term "0,0,0,1"))
                                       (rule "concrete_and_2" (formula "15") (term "0,0,1"))
                                       (rule "concrete_and_2" (formula "15") (term "0,1"))
                                       (rule "concrete_and_2" (formula "15") (term "1"))
                                       (rule "concrete_or_4" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                       (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                       (rule "eqSymm" (formula "12"))
                                       (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "15"))
                                       (rule "lenOfSeqEmpty" (formula "10") (term "0"))
                                       (rule "qeq_literals" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                       (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                                       (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "14"))
                                       (rule "lenOfSeqEmpty" (formula "2") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                       (rule "leq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "21") (term "0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_and_2" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "self.nodeList.length >= 1 + i_1_0 FALSE"
                                    (rule "replace_known_right" (formula "17") (term "1,1,0,0,0,0") (ifseqformula "16"))
                                    (rule "concrete_or_4" (formula "17") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "16"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "replace_known_left" (formula "17") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "17") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "17") (term "0,0"))
                                    (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "18") (term "0,1,1,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "18") (term "1,1,0,0"))
                                    (rule "concrete_or_4" (formula "18") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0,1") (ifseqformula "4"))
                                    (rule "ifthenelse_true" (formula "18") (term "0,0,1"))
                                    (rule "instanceof_static_type" (formula "18") (term "0,1"))
                                    (rule "boolean_equal" (formula "18") (term "1"))
                                    (rule "concrete_and_3" (formula "18"))
                                    (rule "notRight" (formula "18"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "close" (formula "18") (ifseqformula "7"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "13"))
                              (rule "andRight" (formula "14"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "13"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "14"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "13"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "14"))
                                                   (branch
                                                      (rule "notRight" (formula "14"))
                                                      (rule "close" (formula "14") (ifseqformula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "notRight" (formula "14"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "3,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "14") (inst "iv=iv"))
                                                      (rule "lenOfSeqEmpty" (formula "14") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_first_0"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                      (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "1") (term "0"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "close" (formula "13") (ifseqformula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "3,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "3,0,0") (ifseqformula "1"))
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "13") (inst "iv=iv"))
                                                   (rule "lenOfSeqEmpty" (formula "13") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                                                   (rule "pullOutSelect" (formula "14") (term "1,0") (inst "selectSK=java_util_LinkedList_first_1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "13") (term "0,0,1,0,1") (inst "selectSK=java_util_LinkedList_nodeList_11"))
                                                   (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "14") (term "0,0,1,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "lenOfSeqConcat" (formula "13") (term "1,1,1,0,0,1"))
                                                   (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1"))
                                                   (rule "add_literals" (formula "13") (term "0,1,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "13") (term "1,1,0,0,1"))
                                                   (rule "lenOfSeqConcat" (formula "13") (term "0,0"))
                                                   (rule "lenOfSeqSingleton" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "13") (term "0"))
                                                   (rule "mul_literals" (formula "13") (term "1,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "13") (term "0") (ifseqformula "7"))
                                                   (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "13") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "13") (term "0"))
                                                   (rule "concrete_and_2" (formula "13"))
                                                   (rule "false_right" (formula "13"))
                                                   (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_0"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                                   (rule "eqClose" (formula "14"))
                                                   (rule "closeTrue" (formula "14"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "notRight" (formula "14"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "replaceKnownSelect_taclet0000_4" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "1") (term "0"))
                                                (rule "close" (formula "12") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                             (rule "replaceKnownSelect_taclet0000_4" (formula "14") (term "1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "13") (inst "iv=iv"))
                                             (rule "lenOfSeqEmpty" (formula "13") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                                             (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_Node_next_0"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                                             (rule "eqClose" (formula "15"))
                                             (rule "closeTrue" (formula "15"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "14"))
                                                   (branch "Case 1"
                                                      (rule "notRight" (formula "14"))
                                                      (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                      (rule "applyEq" (formula "14") (term "3,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "1") (term "3,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                      (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_first_2"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                      (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "1") (term "0"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeList_12"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                      (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "1") (term "0"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                                      (rule "lenOfSeqEmpty" (formula "1") (term "1,0"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                                      (rule "lenOfSeqSingleton" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "lenOfSeqConcat" (formula "2") (term "1,1,0,0"))
                                                      (rule "lenOfSeqSingleton" (formula "2") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                                      (rule "eqClose" (formula "2") (term "1,0"))
                                                      (rule "concrete_impl_4" (formula "2") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                   (branch
                                                      (rule "notRight" (formula "14"))
                                                      (rule "close" (formula "14") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "applyEq" (formula "14") (term "3,0,0,0,0,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "14") (term "3,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "13") (term "3,0,0,0,0,0") (ifseqformula "1"))
                                                   (rule "pullOutSelect" (formula "14") (term "1,0") (inst "selectSK=java_util_LinkedList_first_3"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                                   (rule "eqClose" (formula "14"))
                                                   (rule "closeTrue" (formula "14"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "notRight" (formula "14"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "replaceKnownSelect_taclet0000_4" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "1") (term "0"))
                                                (rule "close" (formula "12") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                             (rule "replaceKnownSelect_taclet0000_4" (formula "14") (term "1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "1,0"))
                                             (rule "applyEq" (formula "13") (term "3,0,0,0,0,0") (ifseqformula "1"))
                                             (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_Node_next_1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                                             (rule "eqClose" (formula "15"))
                                             (rule "closeTrue" (formula "15"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "13"))
                                       (branch "Case 1"
                                          (rule "eqSymm" (formula "14"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                          (rule "castedGetAny" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                          (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "14") (term "3,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "13") (inst "iv=iv"))
                                          (rule "lenOfSeqEmpty" (formula "13") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                                          (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_14"))
                                          (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "14") (term "0,0,1,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "14") (term "0,0,1,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "lenOfSeqConcat" (formula "13") (term "1,1,1,0,0,1"))
                                          (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,1,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1"))
                                          (rule "add_literals" (formula "13") (term "0,1,1,0,0,1"))
                                          (rule "add_zero_left" (formula "13") (term "1,1,0,0,1"))
                                          (rule "lenOfSeqConcat" (formula "13") (term "0,0"))
                                          (rule "lenOfSeqSingleton" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "13") (term "0"))
                                          (rule "mul_literals" (formula "13") (term "1,0"))
                                          (rule "inEqSimp_contradEq7" (formula "13") (term "0") (ifseqformula "7"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,0"))
                                          (rule "leq_literals" (formula "13") (term "0,0"))
                                          (rule "concrete_and_2" (formula "13") (term "0"))
                                          (rule "concrete_and_2" (formula "13"))
                                          (rule "false_right" (formula "13"))
                                          (rule "getOfSeqConcat" (formula "13") (term "1"))
                                          (rule "eqSymm" (formula "13"))
                                          (rule "polySimp_elimSub" (formula "13") (term "1,2,0"))
                                          (rule "add_zero_left" (formula "13") (term "1,2,0"))
                                          (rule "getOfSeqSingleton" (formula "13") (term "2,0"))
                                          (rule "castDel" (formula "13") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_invertEq" (formula "13") (term "0,2,0"))
                                          (rule "mul_literals" (formula "13") (term "1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "13") (term "1") (inst "selectSK=java_util_LinkedList_first_5"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "13") (term "2,0"))
                                          (branch "self.nodeList.length = 0 TRUE"
                                             (rule "ifthenelse_concrete4" (formula "14"))
                                             (rule "orRight" (formula "14"))
                                             (rule "notRight" (formula "14"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "self.nodeList.length = 0 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "13"))
                                             (rule "add_zero_right" (formula "7") (term "1"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "7"))
                                             (rule "ifthenelse_true" (formula "14") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_and_2" (formula "13"))
                                             (rule "false_right" (formula "13"))
                                             (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                             (rule "eqClose" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0"))
                                             (rule "eqSymm" (formula "12") (term "1,1"))
                                             (rule "eqSymm" (formula "12") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "12") (term "1,0,0,0,1"))
                                             (rule "concrete_and_4" (formula "12") (term "0,0,0,1"))
                                             (rule "concrete_and_2" (formula "12") (term "0,0,1"))
                                             (rule "concrete_and_2" (formula "12") (term "0,1"))
                                             (rule "concrete_and_2" (formula "12") (term "1"))
                                             (rule "concrete_or_4" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "11") (term "0,1,0,0,1,0,0"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,0,1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                                             (rule "qeq_literals" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "eqSymm" (formula "14"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                          (rule "castedGetAny" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                          (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "13") (term "3,0,0,0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "14") (term "3,0,0,0,0,1") (ifseqformula "1"))
                                          (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_13"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "getOfSeqConcat" (formula "14") (term "1"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,2,0"))
                                          (rule "add_zero_left" (formula "14") (term "1,2,0"))
                                          (rule "getOfSeqSingleton" (formula "14") (term "2,0"))
                                          (rule "castDel" (formula "14") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_invertEq" (formula "14") (term "0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,2,0"))
                                          (rule "times_zero_2" (formula "14") (term "1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_first_4"))
                                          (rule "applyEq" (formula "15") (term "1") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "13") (term "2,0"))
                                          (branch "self.nodeList.length = 0 TRUE"
                                             (rule "ifthenelse_concrete4" (formula "14"))
                                             (rule "orRight" (formula "14"))
                                             (rule "notRight" (formula "14"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "self.nodeList.length = 0 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "13"))
                                             (rule "add_zero_right" (formula "7") (term "1"))
                                             (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "7"))
                                             (rule "ifthenelse_true" (formula "14") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                             (rule "concrete_and_2" (formula "13"))
                                             (rule "false_right" (formula "13"))
                                             (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                             (rule "eqClose" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0"))
                                             (rule "eqSymm" (formula "12") (term "1,1"))
                                             (rule "eqSymm" (formula "12") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "1"))
                                             (rule "concrete_not_1" (formula "12") (term "1,0,0,0,1"))
                                             (rule "concrete_and_4" (formula "12") (term "0,0,0,1"))
                                             (rule "concrete_and_2" (formula "12") (term "0,0,1"))
                                             (rule "concrete_and_2" (formula "12") (term "0,1"))
                                             (rule "concrete_and_2" (formula "12") (term "1"))
                                             (rule "concrete_or_4" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "11") (term "0,1,0,0,1,0,0"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "11") (term "0,0,0,1,1,0") (ifseqformula "12"))
                                             (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                             (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "12"))
                                             (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                                             (rule "qeq_literals" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "14"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "14"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "notRight" (formula "14"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "replaceKnownSelect_taclet0000_4" (formula "14") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "3,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeList_15"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                                   (rule "lenOfSeqEmpty" (formula "1") (term "1,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                                   (rule "lenOfSeqSingleton" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "lenOfSeqConcat" (formula "2") (term "1,1,0,0"))
                                                   (rule "lenOfSeqSingleton" (formula "2") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                   (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                                   (rule "eqClose" (formula "2") (term "1,0"))
                                                   (rule "concrete_impl_4" (formula "2") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "10"))
                                                   (rule "closeFalse" (formula "10"))
                                                )
                                                (branch "Case 2"
                                                   (rule "notRight" (formula "14"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "replaceKnownSelect_taclet0000_4" (formula "14") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "3,0,0,0,0,0") (ifseqformula "2"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_first_6"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "13") (ifseqformula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                (rule "replaceKnownSelect_taclet0000_4" (formula "13") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "13") (term "1,0"))
                                                (rule "applyEq" (formula "13") (term "3,0,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "13") (term "3,0,0,0,0,1,0") (ifseqformula "1"))
                                                (rule "pullOutSelect" (formula "13") (term "1,0") (inst "selectSK=java_util_LinkedList_first_7"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                (rule "eqClose" (formula "1") (term "0,0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "1") (term "0"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "14") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_2"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                (rule "eqClose" (formula "1") (term "0,0,0"))
                                                (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_true" (formula "1") (term "0"))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                                (rule "eqClose" (formula "14"))
                                                (rule "closeTrue" (formula "14"))
                                             )
                                          )
                                          (branch
                                             (rule "notRight" (formula "14"))
                                             (rule "close" (formula "14") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "replaceKnownSelect_taclet0000_4" (formula "13") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "13") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet0000_4" (formula "13") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "13") (term "1,0"))
                                          (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_Node_next_2"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                          (rule "eqClose" (formula "14"))
                                          (rule "closeTrue" (formula "14"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "eqSymm" (formula "14"))
                                       (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                       (rule "replaceKnownSelect_taclet0000_4" (formula "13") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "13") (term "0"))
                                       (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "13") (term "3,0,0,0,0,1") (ifseqformula "1"))
                                       (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_16"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "getOfSeqConcat" (formula "13") (term "1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,2,0"))
                                       (rule "add_zero_left" (formula "13") (term "1,2,0"))
                                       (rule "getOfSeqSingleton" (formula "13") (term "2,0"))
                                       (rule "castDel" (formula "13") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                       (rule "polySimp_invertEq" (formula "13") (term "0,2,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "13") (term "1") (inst "selectSK=java_util_LinkedList_first_8"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "14") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "13") (term "2,0"))
                                       (branch "self.nodeList.length = 0 TRUE"
                                          (rule "ifthenelse_concrete4" (formula "14"))
                                          (rule "orRight" (formula "14"))
                                          (rule "notRight" (formula "14"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "self.nodeList.length = 0 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "13"))
                                          (rule "add_zero_right" (formula "7") (term "1"))
                                          (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "7"))
                                          (rule "ifthenelse_true" (formula "14") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "13") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                          (rule "concrete_and_2" (formula "13"))
                                          (rule "false_right" (formula "13"))
                                          (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                          (rule "eqClose" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                          (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                          (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                          (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "andLeft" (formula "9"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "eqSymm" (formula "12") (term "1,1"))
                                          (rule "eqSymm" (formula "12") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "1"))
                                          (rule "concrete_not_1" (formula "12") (term "1,0,0,0,1"))
                                          (rule "concrete_and_4" (formula "12") (term "0,0,0,1"))
                                          (rule "concrete_and_2" (formula "12") (term "0,0,1"))
                                          (rule "concrete_and_2" (formula "12") (term "0,1"))
                                          (rule "concrete_and_2" (formula "12") (term "1"))
                                          (rule "concrete_or_4" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "andLeft" (formula "12"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "14") (term "1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "15") (term "0,1,0"))
                                          (rule "eqSymm" (formula "15") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "14") (term "0,1,0"))
                                          (rule "eqSymm" (formula "14") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                          (rule "applyEq" (formula "11") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                          (rule "lenOfSeqEmpty" (formula "11") (term "0,1,0,0,1,0,0"))
                                          (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "14") (term "0,1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "12"))
                                          (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                          (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "12"))
                                          (rule "lenOfSeqEmpty" (formula "8") (term "0"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "10") (term "0,0,0,1,1,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "11"))
                                          (rule "lenOfSeqEmpty" (formula "7") (term "0"))
                                          (rule "qeq_literals" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "13"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "13"))
                                    (branch "Case 1"
                                       (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "replaceKnownSelect_taclet0000_4" (formula "14") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "1"))
                                       (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "13") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "14") (term "0,1,1,0") (inst "selectSK=java_util_LinkedList_nodeList_18"))
                                       (rule "applyEq" (formula "14") (term "0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "15") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "14") (term "0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "lenOfSeqConcat" (formula "14") (term "1,1,0"))
                                       (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                       (rule "add_literals" (formula "14") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "14") (term "1,0"))
                                       (rule "lenOfSeqConcat" (formula "13") (term "0,0"))
                                       (rule "lenOfSeqSingleton" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                       (rule "lenOfSeqConcat" (formula "13") (term "1,1,1,0,0,1"))
                                       (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "13") (term "0,1,1,0,0,1"))
                                       (rule "add_zero_left" (formula "13") (term "1,1,0,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "13") (term "0"))
                                       (rule "mul_literals" (formula "13") (term "1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "13") (term "0") (ifseqformula "7"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,0,0"))
                                       (rule "leq_literals" (formula "13") (term "0,0"))
                                       (rule "concrete_and_2" (formula "13") (term "0"))
                                       (rule "concrete_and_2" (formula "13"))
                                       (rule "false_right" (formula "13"))
                                       (rule "getOfSeqConcat" (formula "13") (term "0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,2,0"))
                                       (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,0"))
                                       (rule "castDel" (formula "13") (term "2,0"))
                                       (rule "ifthenelse_concrete4" (formula "13"))
                                       (rule "orRight" (formula "13"))
                                       (rule "notRight" (formula "13"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                       (rule "eqSymm" (formula "14"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "castedGetAny" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "replaceKnownSelect_taclet0000_4" (formula "14") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "14") (term "1"))
                                       (rule "applyEq" (formula "13") (term "3,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "14") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                       (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_util_LinkedList_first_9"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "13") (term "0,1,1,0") (inst "selectSK=java_util_LinkedList_nodeList_17"))
                                       (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "14") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "lenOfSeqConcat" (formula "13") (term "1,1,0"))
                                       (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                                       (rule "add_literals" (formula "13") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "13") (term "1,0"))
                                       (rule "getOfSeqConcat" (formula "13") (term "0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,0"))
                                       (rule "add_literals" (formula "13") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "13") (term "1,2,0"))
                                       (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,0"))
                                       (rule "castDel" (formula "13") (term "2,0"))
                                       (rule "ifthenelse_concrete4" (formula "13"))
                                       (rule "orRight" (formula "13"))
                                       (rule "notRight" (formula "13"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "translateJavaSubInt" (formula "14") (term "1,0,1"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                    (rule "castedGetAny" (formula "14") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "13") (term "0"))
                                    (rule "replaceKnownSelect_taclet0000_4" (formula "13") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "13") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "13") (term "1"))
                                    (rule "replaceKnownSelect_taclet0000_4" (formula "13") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "13") (term "1"))
                                    (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "pullOutSelect" (formula "13") (term "0,1,1,0") (inst "selectSK=java_util_LinkedList_nodeList_19"))
                                    (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "14") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "lenOfSeqConcat" (formula "13") (term "1,1,0"))
                                    (rule "lenOfSeqSingleton" (formula "13") (term "1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "13") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "1,0"))
                                    (rule "add_literals" (formula "13") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "13") (term "1,0"))
                                    (rule "getOfSeqConcat" (formula "13") (term "0"))
                                    (rule "polySimp_elimSub" (formula "13") (term "1,2,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "13") (term "1,2,0"))
                                    (rule "add_literals" (formula "13") (term "1,1,2,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,2,0"))
                                    (rule "getOfSeqSingletonConcrete" (formula "13") (term "2,0"))
                                    (rule "castDel" (formula "13") (term "2,0"))
                                    (rule "ifthenelse_concrete4" (formula "13"))
                                    (rule "orRight" (formula "13"))
                                    (rule "notRight" (formula "13"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "13") (inst "sk=i_0_0"))
                           (rule "impRight" (formula "13"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "15"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "1"))
                           (rule "castedGetAny" (formula "15") (term "0"))
                           (rule "eqSymm" (formula "15"))
                           (rule "castedGetAny" (formula "15") (term "1,0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "add_zero_right" (formula "1") (term "0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "applyEq" (formula "2") (term "3,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "15"))
                           (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                           (rule "eqSymm" (formula "15"))
                           (rule "applyEq" (formula "15") (term "3,0,0") (ifseqformula "3"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=java_util_LinkedList_nodeList_20"))
                           (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "eqClose" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "lenOfSeqConcat" (formula "2") (term "0"))
                           (rule "lenOfSeqSingleton" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "getOfSeqConcat" (formula "15") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,2,1,0"))
                           (rule "getOfSeqSingleton" (formula "15") (term "2,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,2,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                           (rule "getOfSeqConcat" (formula "15") (term "1"))
                           (rule "eqSymm" (formula "15"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                           (rule "getOfSeqSingleton" (formula "15") (term "2,0"))
                           (rule "castDel" (formula "15") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                           (rule "eqSymm" (formula "15"))
                           (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "2"))
                           (rule "ifthenelse_true" (formula "15") (term "1"))
                           (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_3"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "eqClose" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "16"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_prev_4"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_4" (formula "1") (term "0,0"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "ifthenelse_split" (formula "2") (term "0,0,0"))
                           (branch "self.nodeList.length >= 1 + i_0_0 TRUE"
                              (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "2"))
                              (rule "ifthenelse_true" (formula "1") (term "1,0"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_literals" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                              (rule "concrete_or_1" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                              (rule "leq_literals" (formula "5") (term "0"))
                              (rule "concrete_or_1" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "(java.util.LinkedList.Node)self.nodeList[i_0_0] = n_2 TRUE"
                                 (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                 (rule "eqClose" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0,1"))
                                 (rule "eqSymm" (formula "16") (term "1,1"))
                                 (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "5"))
                                 (rule "concrete_and_3" (formula "16") (term "0"))
                                 (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "1"))
                                 (rule "concrete_or_4" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                 (rule "lenOfSeqEmpty" (formula "14") (term "0"))
                                 (rule "leq_literals" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "13") (term "0"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                 (rule "qeq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "13"))
                                 (rule "lenOfSeqEmpty" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "13"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (rule "concrete_and_2" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                              (branch "(java.util.LinkedList.Node)self.nodeList[i_0_0] = n_2 FALSE"
                                 (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "17") (term "1"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "6"))
                                 (rule "cut_direct" (formula "1") (term "0"))
                                 (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0_0].prev = null TRUE"
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0,1"))
                                    (rule "eqSymm" (formula "16") (term "1,1"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                                    (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                    (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                    (rule "eqSymm" (formula "19") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "lenOfSeqEmpty" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                    (rule "lenOfSeqEmpty" (formula "14") (term "0"))
                                    (rule "leq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                    (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                    (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "14"))
                                    (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                    (rule "qeq_literals" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                    (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                    (rule "eqSymm" (formula "11"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "11"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "2") (term "0"))
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "3") (term "0"))
                                    (rule "concrete_and_2" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0_0].prev = null FALSE"
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0,1"))
                                    (rule "eqSymm" (formula "16") (term "1,1"))
                                    (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "5"))
                                    (rule "concrete_and_3" (formula "16") (term "0"))
                                    (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                    (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                                    (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "0,1"))
                                    (rule "concrete_and_2" (formula "16") (term "1"))
                                    (rule "concrete_or_4" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                    (rule "eqSymm" (formula "19") (term "1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "15") (term "0,0,0,0,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "lenOfSeqEmpty" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                    (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "16"))
                                    (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                    (rule "qeq_literals" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                    (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                    (rule "eqSymm" (formula "12"))
                                    (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "15"))
                                    (rule "eqSymm" (formula "25"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "15"))
                                    (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                    (rule "leq_literals" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                    (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                    (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "14"))
                                    (rule "lenOfSeqEmpty" (formula "3") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "times_zero_2" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "14"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                    (rule "leq_literals" (formula "12"))
                                    (rule "true_left" (formula "12"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (rule "concrete_and_2" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                           )
                           (branch "self.nodeList.length >= 1 + i_0_0 FALSE"
                              (rule "ifthenelse_concrete3" (formula "2") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0") (ifseqformula "15"))
                              (rule "ifthenelse_false" (formula "1") (term "1,0"))
                              (rule "inEqSimp_geqRight" (formula "15"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "6") (ifseqformula "1"))
                              (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "6"))
                              (rule "ifthenelse_true" (formula "2") (term "1,0"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "5"))
                              (rule "concrete_or_1" (formula "2") (term "0,0"))
                              (rule "ifthenelse_true" (formula "2") (term "0"))
                              (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "4"))
                              (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "5"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "1"))
                              (rule "leq_literals" (formula "10") (term "0"))
                              (rule "concrete_or_1" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "seqGetAlphaCast" (formula "14") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                              (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                              (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "eqSymm" (formula "13") (term "1,0,1"))
                              (rule "eqSymm" (formula "13") (term "1,1"))
                              (rule "replace_known_left" (formula "13") (term "0,1,0,0,0,1") (ifseqformula "4"))
                              (rule "concrete_not_1" (formula "13") (term "1,0,0,0,1"))
                              (rule "concrete_and_4" (formula "13") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "13") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "13") (term "0,1"))
                              (rule "concrete_and_2" (formula "13") (term "1"))
                              (rule "concrete_or_4" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,0"))
                              (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                              (rule "castedGetAny" (formula "15") (term "1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "16") (term "0,1,0"))
                              (rule "eqSymm" (formula "16") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "15") (term "0,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                              (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "10"))
                              (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,1,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "times_zero_2" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "3") (term "0"))
                              (rule "eqSymm" (formula "3"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0"))
                        (rule "allRight" (formula "13") (inst "sk=i_0"))
                        (rule "impRight" (formula "13"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_elimSub" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "1,1"))
                        (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1"))
                        (rule "castedGetAny" (formula "15") (term "0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "castedGetAny" (formula "15") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEq" (formula "2") (term "3,0,0,0,0,0,0,0,0,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "3,0,0,0,0,0,0,0,0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "15"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=java_util_LinkedList_nodeList_21"))
                        (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "lenOfSeqConcat" (formula "2") (term "0"))
                        (rule "lenOfSeqSingleton" (formula "2") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                        (rule "mul_literals" (formula "2") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "getOfSeqConcat" (formula "15") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,2,1,0"))
                        (rule "getOfSeqSingleton" (formula "15") (term "2,1,0"))
                        (rule "castDel" (formula "15") (term "1,2,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,2,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                        (rule "replace_known_left" (formula "15") (term "0,1,0") (ifseqformula "2"))
                        (rule "ifthenelse_true" (formula "15") (term "1,0"))
                        (rule "getOfSeqConcat" (formula "15") (term "1"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                        (rule "getOfSeqSingleton" (formula "15") (term "2,0"))
                        (rule "castDel" (formula "15") (term "1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                        (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=java_util_LinkedList_Node_next_3"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "11"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_next_4"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "17") (term "2,0"))
                        (branch "self.nodeList.length = 1 + i_0 TRUE"
                           (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                           (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0"))
                           (rule "leq_literals" (formula "18") (term "0,0"))
                           (rule "ifthenelse_false" (formula "18") (term "0"))
                           (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                           (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "5"))
                           (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,0"))
                           (rule "times_zero_1" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                           (rule "mul_literals" (formula "11") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                           (rule "polySimp_elimOne" (formula "12") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "3"))
                           (rule "leq_literals" (formula "11") (term "0"))
                           (rule "concrete_or_1" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "(java.util.LinkedList.Node)self.nodeList[i_0] = n_2 TRUE"
                              (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "seqGetAlphaCast" (formula "2") (term "0"))
                              (rule "castedGetAny" (formula "2") (term "0"))
                              (rule "eqClose" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                              (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                              (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                              (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "eqSymm" (formula "16") (term "1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "eqSymm" (formula "14") (term "1,1"))
                              (rule "eqSymm" (formula "14") (term "1,0,1"))
                              (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "5"))
                              (rule "concrete_and_3" (formula "14") (term "0"))
                              (rule "replace_known_left" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "5"))
                              (rule "concrete_not_1" (formula "14") (term "1,0,0,0,1"))
                              (rule "concrete_and_4" (formula "14") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "14") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "14") (term "0,1"))
                              (rule "concrete_and_2" (formula "14") (term "1"))
                              (rule "concrete_or_4" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                              (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                              (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "17") (term "0,1,0"))
                              (rule "eqSymm" (formula "17") (term "1,0"))
                              (rule "castedGetAny" (formula "16") (term "0,1,0"))
                              (rule "eqSymm" (formula "16") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                              (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "add_literals" (formula "12") (term "0,0"))
                              (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "14"))
                              (rule "lenOfSeqEmpty" (formula "1") (term "0"))
                              (rule "polySimp_homoEq" (formula "1"))
                              (rule "times_zero_2" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "14"))
                              (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                              (rule "eqSymm" (formula "11"))
                              (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                              (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "14"))
                              (rule "polySimp_sepPosMonomial" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "3"))
                              (rule "closeFalse" (formula "3"))
                           )
                           (branch "(java.util.LinkedList.Node)self.nodeList[i_0] = n_2 FALSE"
                              (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "eqSymm" (formula "15"))
                              (rule "seqGetAlphaCast" (formula "11") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "6"))
                              (rule "cut_direct" (formula "1") (term "0"))
                              (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0].next = null TRUE"
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,1"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1"))
                                 (rule "replace_known_left" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "14") (term "1,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "14") (term "0,0,0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "1"))
                                 (rule "concrete_or_4" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                 (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,0,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                 (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                 (rule "polySimp_homoEq" (formula "2"))
                                 (rule "times_zero_2" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0].next = null FALSE"
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1"))
                                 (rule "eqSymm" (formula "14") (term "1,1"))
                                 (rule "replace_known_left" (formula "14") (term "1,0") (ifseqformula "5"))
                                 (rule "concrete_and_3" (formula "14") (term "0"))
                                 (rule "replace_known_left" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "14") (term "1,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "14") (term "0,0,0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "0,1"))
                                 (rule "concrete_and_2" (formula "14") (term "1"))
                                 (rule "concrete_or_4" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                 (rule "eqSymm" (formula "11"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "add_literals" (formula "12") (term "0,0"))
                                 (rule "applyEq" (formula "13") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "13") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "2") (term "0"))
                                 (rule "polySimp_homoEq" (formula "2"))
                                 (rule "times_zero_2" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_sepPosMonomial" (formula "2"))
                                 (rule "mul_literals" (formula "2") (term "1"))
                                 (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "12") (term "1,0"))
                                 (rule "add_literals" (formula "12") (term "0"))
                                 (rule "qeq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "1") (term "1,1,1,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "18") (term "1,1,0") (ifseqformula "2"))
                                 (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                        (branch "self.nodeList.length = 1 + i_0 FALSE"
                           (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "17"))
                           (rule "polySimp_addAssoc" (formula "4") (term "1"))
                           (rule "add_literals" (formula "4") (term "0,1"))
                           (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "4"))
                           (rule "ifthenelse_true" (formula "18") (term "0"))
                           (rule "inEqSimp_contradEq7" (formula "17") (ifseqformula "4"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                           (rule "add_literals" (formula "17") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "17") (term "1,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (rule "concrete_and_2" (formula "17"))
                           (rule "false_right" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "12"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                           (rule "mul_literals" (formula "4") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (rule "concrete_or_1" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "(java.util.LinkedList.Node)self.nodeList[i_0] = n_2 TRUE"
                              (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "seqGetAlphaCast" (formula "17") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "1") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                              (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                              (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                              (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "eqSymm" (formula "17") (term "1,0"))
                              (rule "eqSymm" (formula "16") (term "1,1"))
                              (rule "eqSymm" (formula "16") (term "1,0,1"))
                              (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                              (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                              (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                              (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                              (rule "concrete_and_2" (formula "16") (term "0,1"))
                              (rule "concrete_and_2" (formula "16") (term "1"))
                              (rule "concrete_or_4" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                              (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                              (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "19") (term "0,1,0"))
                              (rule "eqSymm" (formula "19") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "castedGetAny" (formula "18") (term "0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "16"))
                              (rule "lenOfSeqEmpty" (formula "13") (term "0"))
                              (rule "eqSymm" (formula "13"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "16"))
                              (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                              (rule "leq_literals" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                              (rule "lenOfSeqEmpty" (formula "13") (term "0"))
                              (rule "leq_literals" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "14"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "14"))
                              (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                              (rule "qeq_literals" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "applyEq" (formula "16") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,1,0,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "12") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "4") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "times_zero_2" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "applyEq" (formula "12") (term "0,0,0,1,1,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "15") (term "0,0,1,0,0,1,0,0") (ifseqformula "13"))
                              (rule "lenOfSeqEmpty" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "times_zero_2" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_and_2" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "(java.util.LinkedList.Node)self.nodeList[i_0] = n_2 FALSE"
                              (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "17"))
                              (rule "seqGetAlphaCast" (formula "13") (term "0"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "seqGetAlphaCast" (formula "17") (term "1"))
                              (rule "castedGetAny" (formula "1") (term "0"))
                              (rule "eqClose" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "6"))
                              (rule "cut_direct" (formula "1") (term "0"))
                              (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0].next = null TRUE"
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0,1"))
                                 (rule "eqSymm" (formula "16") (term "1,1"))
                                 (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "5"))
                                 (rule "concrete_and_3" (formula "16") (term "0"))
                                 (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "1"))
                                 (rule "concrete_or_4" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "lenOfSeqEmpty" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "16"))
                                 (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                 (rule "qeq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "18") (term "0,1,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                 (rule "leq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "16") (term "0,1,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "4") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "times_zero_2" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "13") (term "0,0,0,0,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "4"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                 (rule "concrete_or_1" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (rule "concrete_and_2" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                              (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0].next = null FALSE"
                                 (rule "concrete_or_2" (formula "1"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,1"))
                                 (rule "eqSymm" (formula "16") (term "1,0,1"))
                                 (rule "replace_known_left" (formula "16") (term "1,0") (ifseqformula "5"))
                                 (rule "concrete_and_3" (formula "16") (term "0"))
                                 (rule "replace_known_left" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "5"))
                                 (rule "concrete_not_1" (formula "16") (term "1,0,0,0,1"))
                                 (rule "concrete_and_4" (formula "16") (term "0,0,0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "0,0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "0,1"))
                                 (rule "concrete_and_2" (formula "16") (term "1"))
                                 (rule "concrete_or_4" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                 (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,0,1,0,0,1,0,0") (ifseqformula "16"))
                                 (rule "lenOfSeqEmpty" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "16"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "applyEq" (formula "1") (term "0,1,1,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "16"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "16"))
                                 (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                 (rule "leq_literals" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "applyEq" (formula "14") (term "0,0,0,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "12") (term "0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "14") (term "0,0,0,1,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "14") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "17") (term "0,0,1,0,0,1,0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "times_zero_2" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                 (rule "lenOfSeqEmpty" (formula "13") (term "0"))
                                 (rule "leq_literals" (formula "13"))
                                 (rule "true_left" (formula "13"))
                                 (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "4") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "4"))
                                 (rule "times_zero_2" (formula "4") (term "1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "14"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "14"))
                                 (rule "lenOfSeqEmpty" (formula "11") (term "0"))
                                 (rule "qeq_literals" (formula "11"))
                                 (rule "true_left" (formula "11"))
                                 (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                 (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                 (rule "mul_literals" (formula "4") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (rule "concrete_and_2" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "eqClose" (formula "13"))
                  (rule "closeTrue" (formula "13"))
               )
            )
            (branch "Null Reference (l_5 = null)"
               (rule "false_right" (formula "15"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "close" (formula "14") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (l_4 = null)"
            (rule "false_right" (formula "15"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "14") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (l_3 = null)"
         (rule "false_right" (formula "15"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "close" (formula "14") (ifseqformula "1"))
      )
   )
   (branch "if x false"
      (rule "false_to_not_true" (formula "1") (term "1"))
      (rule "simplifyUpdate2" (formula "15"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "applyOnRigidFormula" (formula "11"))
      (rule "applyOnPV" (formula "11") (term "0"))
      (rule "simplifyUpdate1" (formula "11") (term "1"))
      (rule "ifthenelse_concrete3" (formula "11"))
      (rule "boolean_not_equal_2" (formula "11") (term "1"))
      (rule "concrete_or_4" (formula "11"))
      (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "11"))
      (rule "concrete_or_2" (formula "2"))
      (rule "assignment_write_attribute" (formula "15"))
      (branch "Normal Execution (l != null)"
         (rule "sequentialToParallel2" (formula "15"))
         (rule "simplifyUpdate2" (formula "15"))
         (rule "simplifyUpdate3" (formula "15") (term "1,0"))
         (rule "applyOnElementary" (formula "15") (term "1,0"))
         (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
         (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
         (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "15") (term "3,0,1,0"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "postincrement_attribute" (formula "15") (term "1") (inst "#v=l"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "l_1"))
         (rule "assignment" (formula "15") (term "1"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "simplifyUpdate3" (formula "15") (term "1,0"))
         (rule "eval_order_access4" (formula "15") (term "1") (inst "#v1=x") (inst "#v0=l_2"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "l_2"))
         (rule "assignment" (formula "15") (term "1"))
         (rule "sequentialToParallel2" (formula "15"))
         (rule "simplifyUpdate3" (formula "15") (term "1,0"))
         (rule "applyOnElementary" (formula "15") (term "1,0"))
         (rule "applyOnPV" (formula "15") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
         (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_2"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_2"))
         (rule "remove_parentheses_right" (formula "15") (term "1"))
         (rule "compound_addition_1" (formula "15") (term "1") (inst "#v=x_3"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_3"))
         (rule "assignment_read_attribute" (formula "15"))
         (branch "Normal Execution (l_1 != null)"
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
            (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
            (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
            (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=java_util_LinkedList_size_0"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "equalUnique" (formula "1") (term "1,0,0"))
            (rule "concrete_and_4" (formula "1") (term "0,0"))
            (rule "ifthenelse_false" (formula "1") (term "0"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0010_1" (formula "15") (term "0,1,0"))
            (rule "assignmentAdditionInt" (formula "15") (term "1"))
            (rule "translateJavaAddInt" (formula "15") (term "0,0,1"))
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "polySimp_addComm0" (formula "15") (term "1,0,1,0"))
            (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
            (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
            (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
            (rule "widening_identity_cast_5" (formula "15") (term "1"))
            (rule "assignment" (formula "15") (term "1"))
            (rule "sequentialToParallel2" (formula "15"))
            (rule "simplifyUpdate2" (formula "15"))
            (rule "simplifyUpdate3" (formula "15") (term "1,0"))
            (rule "applyOnElementary" (formula "15") (term "1,0"))
            (rule "applyOnPV" (formula "15") (term "0,1,0"))
            (rule "assignment_write_attribute" (formula "15"))
            (branch "Normal Execution (l_2 != null)"
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "3,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
               (rule "eval_order_access4_this" (formula "15") (term "1") (inst "#v1=x"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_4"))
               (rule "seqConcatUnfoldLeft" (formula "15") (term "1") (inst "#vLeftNew=x_5"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_5"))
               (rule "assignment_read_attribute_this" (formula "15"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=java_util_LinkedList_nodeList_0"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (rule "equalUnique" (formula "1") (term "1,0,0"))
               (rule "concrete_and_4" (formula "1") (term "0,0"))
               (rule "ifthenelse_false" (formula "1") (term "0"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_3" (formula "15") (term "0,1,0"))
               (rule "seqConcatUnfoldRight" (formula "15") (term "1") (inst "#vRightNew=x_6"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_6"))
               (rule "seqSingletonUnfold" (formula "15") (term "1") (inst "#vNew=n"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "n_3"))
               (rule "assignment_read_attribute_this" (formula "15"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1,0"))
               (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=java_util_LinkedList_last_0"))
               (rule "simplifySelectOfStore" (formula "1"))
               (rule "eqClose" (formula "1") (term "1,0,0,0"))
               (rule "concrete_and_3" (formula "1") (term "0,0,0"))
               (rule "eqClose" (formula "1") (term "0,0,0"))
               (rule "concrete_and_1" (formula "1") (term "0,0"))
               (rule "equalUnique" (formula "1") (term "0,0,0"))
               (rule "concrete_not_2" (formula "1") (term "0,0"))
               (rule "ifthenelse_true" (formula "1") (term "0"))
               (rule "castDel" (formula "1") (term "0"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "0,1,0"))
               (rule "assignment" (formula "15") (term "1"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "assignment" (formula "15") (term "1"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "1,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "assignment_write_attribute_this" (formula "15"))
               (rule "sequentialToParallel2" (formula "15"))
               (rule "simplifyUpdate2" (formula "15"))
               (rule "simplifyUpdate3" (formula "15") (term "1,0"))
               (rule "applyOnElementary" (formula "15") (term "1,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "3,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "3,0,1,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0"))
               (rule "emptyStatement" (formula "15") (term "1"))
               (rule "methodCallEmpty" (formula "15") (term "1"))
               (rule "tryEmpty" (formula "15") (term "1"))
               (rule "emptyModality" (formula "15") (term "1"))
               (rule "applyOnRigidFormula" (formula "15"))
               (rule "simplifyUpdate2" (formula "15") (term "0"))
               (rule "simplifyUpdate2" (formula "15") (term "1"))
               (rule "applyOnRigidFormula" (formula "15") (term "0"))
               (rule "simplifyUpdate2" (formula "15") (term "1,0"))
               (rule "applyOnRigidFormula" (formula "15") (term "1"))
               (rule "applyOnPV" (formula "15") (term "0,1"))
               (rule "simplifyUpdate1" (formula "15") (term "1,1"))
               (rule "applyOnRigidFormula" (formula "15") (term "0,0"))
               (rule "simplifyUpdate2" (formula "15") (term "1,0,0"))
               (rule "applyOnRigidFormula" (formula "15") (term "1,0"))
               (rule "applyOnPV" (formula "15") (term "0,1,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,1,0"))
               (rule "applyOnRigidFormula" (formula "15") (term "0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0"))
               (rule "applyOnRigidFormula" (formula "15") (term "1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,1,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,1,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,1,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,0,0,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,0,1,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,1,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "0,1,0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,0,1,0,0,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,1,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "1,1,0,1,0,0,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,1,1,0,1,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,1,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,1,1,0,1,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,1,1,0,1,0,0"))
               (rule "applyOnRigidTerm" (formula "15") (term "0,1,1,0,1,0,0,0,0"))
               (rule "applyOnPV" (formula "15") (term "0,0,1,1,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "1,0,1,1,0,1,0,0,0,0"))
               (rule "simplifyUpdate1" (formula "15") (term "2,0,1,1,0,1,0,0,0,0"))
               (rule "hide_left" (formula "6") (userinteraction))
               (rule "andRight" (formula "14"))
               (branch "Case 1"
                  (rule "andRight" (formula "14"))
                  (branch "Case 1"
                     (rule "andRight" (formula "14"))
                     (branch "Case 1"
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "14") (inst "iv=iv"))
                        (rule "lenOfSeqConcat" (formula "14") (term "0,0"))
                        (rule "lenOfSeqSingleton" (formula "14") (term "1,0,0"))
                        (rule "eqSymm" (formula "14") (term "0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                        (rule "lenOfSeqConcat" (formula "14") (term "1,1,0,0,1"))
                        (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,0,0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1"))
                        (rule "getOfSeqConcat" (formula "14") (term "0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,2,0,1,0,1"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,2,0,1,0,1"))
                        (rule "getOfSeqSingleton" (formula "14") (term "2,0,1,0,1"))
                        (rule "castDel" (formula "14") (term "1,2,0,1,0,1"))
                        (rule "castDel" (formula "14") (term "2,2,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0,1"))
                        (rule "polySimp_sepPosMonomial" (formula "14") (term "0,2,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,0,2,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,0,2,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,0,1"))
                        (rule "pullOutSelect" (formula "14") (term "0,1,1,0,1") (inst "selectSK=java_util_LinkedList_nodeList_23"))
                        (rule "applyEq" (formula "15") (term "0,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "0,1,1,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,1,2,0,1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "lenOfSeqConcat" (formula "14") (term "0,0"))
                        (rule "lenOfSeqSingleton" (formula "14") (term "1,0,0"))
                        (rule "polySimp_homoEq" (formula "14") (term "0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0,0"))
                        (rule "add_literals" (formula "14") (term "1,0,0"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "eqClose" (formula "14") (term "0"))
                        (rule "concrete_and_1" (formula "14"))
                        (rule "allRight" (formula "14") (inst "sk=iv_1"))
                        (rule "impRight" (formula "14"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "16") (term "0,2,0"))
                        (rule "lenOfSeqConcat" (formula "16") (term "1,1,1,2,0"))
                        (rule "lenOfSeqSingleton" (formula "16") (term "1,1,1,1,2,0"))
                        (rule "polySimp_addComm0" (formula "16") (term "1,1,1,2,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "1,1,2,0"))
                        (rule "add_literals" (formula "16") (term "0,1,1,2,0"))
                        (rule "add_zero_left" (formula "16") (term "1,1,2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "getOfSeqConcat" (formula "16") (term "1"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,2,0"))
                        (rule "getOfSeqSingleton" (formula "16") (term "2,0"))
                        (rule "castDel" (formula "16") (term "1,2,0"))
                        (rule "castDel" (formula "16") (term "2,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "16") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "getOfSeqConcat" (formula "16") (term "1,2,0"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,2,1,2,0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "1,2,1,2,0"))
                        (rule "add_literals" (formula "16") (term "1,1,2,1,2,0"))
                        (rule "times_zero_1" (formula "16") (term "1,2,1,2,0"))
                        (rule "getOfSeqSingletonConcrete" (formula "16") (term "2,1,2,0"))
                        (rule "castDel" (formula "16") (term "2,1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,2,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,2,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "16") (term "0,0,1,2,0"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1,2,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1,2,0"))
                        (rule "add_literals" (formula "16") (term "0,0,1,2,0"))
                        (rule "leq_literals" (formula "16") (term "0,1,2,0"))
                        (rule "ifthenelse_false" (formula "16") (term "1,2,0"))
                        (rule "eqClose" (formula "16"))
                        (rule "closeTrue" (formula "16"))
                     )
                     (branch "Case 2"
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "dismissNonSelectedField" (formula "14") (term "0"))
                        (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=java_util_LinkedList_nodeList_22"))
                        (rule "applyEq" (formula "15") (term "0,1,1,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "lenOfSeqConcat" (formula "14") (term "1,1,1,0"))
                        (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1,1,0"))
                        (rule "add_literals" (formula "14") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "14") (term "1,1,0"))
                        (rule "getOfSeqConcat" (formula "14") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,2,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "1,2,1,0"))
                        (rule "add_literals" (formula "14") (term "1,1,2,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,2,1,0"))
                        (rule "getOfSeqSingletonConcrete" (formula "14") (term "2,1,0"))
                        (rule "castDel" (formula "14") (term "2,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,1,0"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "14") (term "0,1,0"))
                        (rule "ifthenelse_false" (formula "14") (term "1,0"))
                        (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_Node_item_4"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "eqClose" (formula "1") (term "0,0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                        (rule "eqClose" (formula "15"))
                        (rule "closeTrue" (formula "15"))
                     )
                  )
                  (branch
                     (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "14") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "5") (userinteraction))
                     (rule "andRight" (formula "14"))
                     (branch "Case 1"
                        (rule "andRight" (formula "14"))
                        (branch "Case 1"
                           (rule "andRight" (formula "14"))
                           (branch "Case 1"
                              (rule "andRight" (formula "14"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "14"))
                                 (branch "Case 1"
                                    (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                    (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_25"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "lenOfSeqConcat" (formula "14") (term "1"))
                                    (rule "lenOfSeqSingleton" (formula "14") (term "1,1"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1"))
                                    (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_size_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "polySimp_homoEq" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "14"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "close" (formula "20") (ifseqformula "9"))
                                 )
                                 (branch "Case 2"
                                    (rule "insert_constant_value" (formula "14") (term "1"))
                                    (rule "inEqSimp_leqRight" (formula "14"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_24"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0,0"))
                                    (rule "concrete_and_1" (formula "1") (term "0,0"))
                                    (rule "equalUnique" (formula "1") (term "0,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                    (rule "lenOfSeqSingleton" (formula "1") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "8") (term "0"))
                                    (rule "concrete_or_1" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "8") (term "0"))
                                    (rule "concrete_and_2" (formula "8"))
                                    (rule "closeFalse" (formula "8"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "14") (inst "sk=i_1_1"))
                                 (rule "impRight" (formula "14"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "16") (term "0,0,0,0") (inst "selectSK=java_util_LinkedList_nodeList_26"))
                                 (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "17") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                 (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0"))
                                 (rule "eqClose" (formula "1") (term "1,0,0"))
                                 (rule "concrete_and_3" (formula "1") (term "0,0"))
                                 (rule "eqClose" (formula "1") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "1") (term "0"))
                                 (rule "castDel" (formula "1") (term "0"))
                                 (rule "applyEqReverse" (formula "17") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "17") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "lenOfSeqConcat" (formula "2") (term "0"))
                                 (rule "lenOfSeqSingleton" (formula "2") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "getOfSeqConcat" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,2,0,0,0"))
                                 (rule "ifEqualsNull" (formula "16") (term "0,0"))
                                 (rule "getOfSeqSingleton" (formula "16") (term "0,1,1,0,0"))
                                 (rule "castDel" (formula "16") (term "2,0,1,1,0,0"))
                                 (rule "castDel" (formula "16") (term "1,0,1,1,0,0"))
                                 (rule "ifEqualsNull" (formula "16") (term "1,1,0,0"))
                                 (rule "replace_known_right" (formula "16") (term "1,0,1,1,0,0") (ifseqformula "14"))
                                 (rule "concrete_and_4" (formula "16") (term "0,1,1,0,0"))
                                 (rule "concrete_or_2" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "16") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "getOfSeqConcat" (formula "16") (term "0,0,1"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,2,0,0,1"))
                                 (rule "getOfSeqSingleton" (formula "16") (term "2,0,0,1"))
                                 (rule "castDel" (formula "16") (term "2,2,0,0,1"))
                                 (rule "castDel" (formula "16") (term "1,2,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "16") (term "0,2,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,2,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,2,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "10"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0"))
                                 (rule "commute_and" (formula "17") (term "0,0,0"))
                                 (rule "commute_and" (formula "17") (term "1,1,0,0"))
                                 (rule "cnf_rightDist" (formula "17") (term "0,0"))
                                 (rule "commute_or" (formula "17") (term "0,0,0"))
                                 (rule "cnf_rightDist" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_or_tautInEq2" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "1,1,1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,1,1,1,0,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1,1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,1,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,0,1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "0,1,1,0,0,0"))
                                 (rule "leq_literals" (formula "17") (term "1,1,0,0,0"))
                                 (rule "concrete_or_3" (formula "17") (term "1,0,0,0"))
                                 (rule "concrete_and_3" (formula "17") (term "0,0,0"))
                                 (rule "commute_or" (formula "17") (term "0,0,0"))
                                 (rule "cnf_rightDist" (formula "17") (term "1,0,0"))
                                 (rule "commute_or" (formula "17") (term "0,1,0,0"))
                                 (rule "cnf_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "applyEq_or_int4" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "17") (term "1,1,1,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,1,1,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,1,1,1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,1,1,1,1,0,0"))
                                 (rule "leq_literals" (formula "17") (term "1,1,1,1,0,0"))
                                 (rule "concrete_or_4" (formula "17") (term "1,1,1,0,0"))
                                 (rule "commute_or" (formula "17") (term "0,1,1,0,0"))
                                 (rule "cnf_rightDist" (formula "17") (term "0,1,0,0"))
                                 (rule "commute_or" (formula "17") (term "1,0,1,0,0"))
                                 (rule "commute_or" (formula "17") (term "0,0,1,0,0"))
                                 (rule "commute_and_2" (formula "17") (term "1,0,0"))
                                 (rule "commute_and" (formula "17") (term "1,0,1,0,0"))
                                 (rule "shift_paren_and" (formula "17") (term "0,1,0,0"))
                                 (rule "commute_and" (formula "17") (term "0,0"))
                                 (rule "commute_and" (formula "17") (term "0,0,0,0,0"))
                                 (rule "ifthenelse_split" (formula "17") (term "0,0,1"))
                                 (branch "self.nodeList.length >= 1 + i_1_1 TRUE"
                                    (rule "replace_known_left" (formula "18") (term "1,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "18") (term "1,0,0,0,0"))
                                    (rule "concrete_and_3" (formula "18") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "18") (term "0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,0,0,0,0,0"))
                                    (rule "concrete_not_2" (formula "18") (term "0,0,0,0,0"))
                                    (rule "concrete_and_1" (formula "18") (term "0,0,0,0"))
                                    (rule "inEqSimp_contradEq7" (formula "18") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,0,1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,1,1,0,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0,1,1,0,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "0,1,1,0,0,0"))
                                    (rule "concrete_not_2" (formula "18") (term "1,1,0,0,0"))
                                    (rule "concrete_or_3" (formula "18") (term "1,0,0,0"))
                                    (rule "concrete_and_3" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0,1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0,1,1,0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,1,1,0,0"))
                                    (rule "leq_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "concrete_and_2" (formula "18") (term "1,1,0,0"))
                                    (rule "concrete_or_4" (formula "18") (term "1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (rule "concrete_or_1" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "commute_and" (formula "17") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "17") (term "0,0,1"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "cut_direct" (formula "17") (term "1"))
                                    (branch "CUT: java.util.LinkedList.Node::instance(self.nodeList[i_1_1]) = TRUE TRUE"
                                       (rule "concrete_and_3" (formula "18"))
                                       (rule "notRight" (formula "18"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "typeEqDerived" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "boolean_equal" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "replace_known_left" (formula "2") (term "1") (ifseqformula "1"))
                                       (rule "concrete_or_3" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                       (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0,1"))
                                       (rule "eqSymm" (formula "16") (term "1,1"))
                                       (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "20"))
                                       (rule "concrete_and_4" (formula "16") (term "0"))
                                       (rule "concrete_or_2" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "18") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                       (rule "eqSymm" (formula "21") (term "1,0"))
                                       (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                       (rule "eqSymm" (formula "20") (term "1,0"))
                                       (rule "castedGetAny" (formula "19") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                       (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "14") (term "0"))
                                       (rule "concrete_or_1" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "23") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "20") (term "0"))
                                       (rule "nnf_imp2or" (formula "23") (term "0,1"))
                                       (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "cnf_rightDist" (formula "14") (term "0"))
                                       (rule "distr_forallAnd" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "commute_or_2" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "shift_paren_or" (formula "15") (term "0"))
                                       (rule "commute_or" (formula "14") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                       (rule "castedGetAny" (formula "18") (term "0"))
                                       (rule "eqClose" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                       (rule "castedGetAny" (formula "19") (term "0"))
                                       (rule "eqClose" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "allLeft" (formula "14") (inst "t=i_1_1"))
                                       (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                       (rule "concrete_not_1" (formula "14") (term "0,0"))
                                       (rule "concrete_or_2" (formula "14") (term "0"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                       (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,1"))
                                       (rule "leq_literals" (formula "14") (term "0,1"))
                                       (rule "concrete_and_2" (formula "14") (term "1"))
                                       (rule "concrete_or_4" (formula "14"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "14"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_and_2" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                    (branch "CUT: java.util.LinkedList.Node::instance(self.nodeList[i_1_1]) = TRUE FALSE"
                                       (rule "concrete_and_4" (formula "18"))
                                       (rule "false_right" (formula "18"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "12") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                       (rule "insert_constant_value" (formula "12") (term "1,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,1,0,0,1"))
                                       (rule "translateJavaSubInt" (formula "12") (term "1,0,1,1,1,1,0,0"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,1"))
                                       (rule "eqSymm" (formula "15") (term "1,0,1"))
                                       (rule "replace_known_right" (formula "15") (term "0,1,0,0,0,1") (ifseqformula "19"))
                                       (rule "concrete_not_2" (formula "15") (term "1,0,0,0,1"))
                                       (rule "concrete_and_3" (formula "15") (term "0,0,0,1"))
                                       (rule "replace_known_right" (formula "15") (term "1,0") (ifseqformula "19"))
                                       (rule "concrete_and_4" (formula "15") (term "0"))
                                       (rule "concrete_or_2" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "notLeft" (formula "15"))
                                       (rule "polySimp_elimSub" (formula "20") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                       (rule "eqSymm" (formula "20") (term "1,0"))
                                       (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                       (rule "eqSymm" (formula "19") (term "1,0"))
                                       (rule "castedGetAny" (formula "18") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "11"))
                                       (rule "leq_literals" (formula "13") (term "0"))
                                       (rule "concrete_or_1" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "21") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "21") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
                                       (rule "applyEq" (formula "21") (term "0,0") (ifseqformula "12"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,1") (ifseqformula "12"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "nnf_imp2or" (formula "18") (term "0"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "nnf_imp2or" (formula "19") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,1"))
                                       (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                       (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
                                       (rule "commute_or_2" (formula "18") (term "0"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "cnf_rightDist" (formula "13") (term "0"))
                                       (rule "distr_forallAnd" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "commute_or_2" (formula "13") (term "0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "shift_paren_or" (formula "14") (term "0"))
                                       (rule "commute_or" (formula "13") (term "0,0"))
                                       (rule "seqGetAlphaCast" (formula "17") (term "0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                       (rule "eqClose" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                       (rule "castedGetAny" (formula "18") (term "0"))
                                       (rule "eqClose" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "allLeft" (formula "14") (inst "t=i_1_1"))
                                       (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "29"))
                                       (rule "concrete_or_2" (formula "14") (term "0"))
                                       (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "14") (term "0,0"))
                                       (rule "concrete_and_2" (formula "14") (term "0"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0"))
                                       (rule "add_zero_right" (formula "14") (term "0"))
                                       (rule "leq_literals" (formula "14"))
                                       (rule "closeFalse" (formula "14"))
                                    )
                                 )
                                 (branch "self.nodeList.length >= 1 + i_1_1 FALSE"
                                    (rule "replace_known_right" (formula "18") (term "1,1,0,0,0,0") (ifseqformula "17"))
                                    (rule "concrete_or_4" (formula "18") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "17"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "replace_known_left" (formula "18") (term "1,1,0,0") (ifseqformula "1"))
                                    (rule "concrete_or_3" (formula "18") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0,0,0,0") (ifseqformula "4"))
                                    (rule "concrete_not_1" (formula "19") (term "0,0,0,0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "0,0,0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "0,0,0"))
                                    (rule "concrete_and_2" (formula "19") (term "0,0"))
                                    (rule "concrete_not_2" (formula "19") (term "0"))
                                    (rule "concrete_and_1" (formula "19"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "4"))
                                    (rule "ifthenelse_true" (formula "19") (term "0,0"))
                                    (rule "instanceof_static_type" (formula "19") (term "0"))
                                    (rule "boolean_equal" (formula "19"))
                                    (rule "closeTrue" (formula "19"))
                                 )
                              )
                           )
                           (branch "Case 2"
                              (rule "orRight" (formula "14"))
                              (rule "andRight" (formula "15"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "15"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "15"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "15"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "15"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "15"))
                                             (branch "Case 1"
                                                (rule "notRight" (formula "15"))
                                                (rule "andRight" (formula "15"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "15"))
                                                   (branch
                                                      (rule "close" (formula "15") (ifseqformula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeList_27"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                      (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                      (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                      (rule "eqClose" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "1") (term "0"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_first_10"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                      (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                                      (rule "lenOfSeqEmpty" (formula "1") (term "1,0"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                                      (rule "lenOfSeqSingleton" (formula "1") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                      (rule "lenOfSeqConcat" (formula "2") (term "1,1,0,0"))
                                                      (rule "lenOfSeqSingleton" (formula "2") (term "1,1,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                                      (rule "eqClose" (formula "2") (term "1,0"))
                                                      (rule "concrete_impl_4" (formula "2") (term "0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "10"))
                                                      (rule "closeFalse" (formula "10"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "replaceKnownSelect_taclet00010_4" (formula "15") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "0"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_nodeList_28"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "equalityToSeqGetAndSeqLenLeft" (formula "1") (inst "iv=iv"))
                                                   (rule "lenOfSeqEmpty" (formula "1") (term "1,0"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "lenOfSeqConcat" (formula "2") (term "1,1,0,0"))
                                                   (rule "lenOfSeqSingleton" (formula "2") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "2") (term "1,1,0,0"))
                                                   (rule "lenOfSeqConcat" (formula "1") (term "0"))
                                                   (rule "lenOfSeqSingleton" (formula "1") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                   (rule "applyEq" (formula "2") (term "0,0,1,0") (ifseqformula "3"))
                                                   (rule "eqClose" (formula "2") (term "1,0"))
                                                   (rule "concrete_impl_4" (formula "2") (term "0"))
                                                   (rule "polySimp_sepPosMonomial" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "10"))
                                                   (rule "closeFalse" (formula "10"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "notRight" (formula "15"))
                                                (rule "andRight" (formula "15"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "15"))
                                                   (branch "Case 1"
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "15") (inst "iv=iv"))
                                                      (rule "lenOfSeqEmpty" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_first_11"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                      (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_false" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "15") (term "0,0,0") (inst "selectSK=java_util_LinkedList_nodeList_29"))
                                                      (rule "applyEq" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                      (rule "eqClose" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                      (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                      (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                      (rule "ifthenelse_true" (formula "1") (term "0"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "lenOfSeqConcat" (formula "15") (term "0,0"))
                                                      (rule "lenOfSeqSingleton" (formula "15") (term "1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                      (rule "lenOfSeqConcat" (formula "15") (term "1,1,1,0,0,1"))
                                                      (rule "lenOfSeqSingleton" (formula "15") (term "1,1,1,1,0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0,1"))
                                                      (rule "add_literals" (formula "15") (term "0,1,1,0,0,1"))
                                                      (rule "add_zero_left" (formula "15") (term "1,1,0,0,1"))
                                                      (rule "polySimp_sepPosMonomial" (formula "15") (term "0"))
                                                      (rule "mul_literals" (formula "15") (term "1,0"))
                                                      (rule "inEqSimp_contradEq7" (formula "15") (term "0") (ifseqformula "8"))
                                                      (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "15") (term "0"))
                                                      (rule "concrete_and_2" (formula "15"))
                                                      (rule "false_right" (formula "15"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                                      (rule "concrete_or_1" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                      (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "andLeft" (formula "10"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "13") (term "1,1"))
                                                      (rule "replace_known_left" (formula "13") (term "0,1,0,0,0,0,0,1") (ifseqformula "1"))
                                                      (rule "concrete_not_1" (formula "13") (term "1,0,0,0,0,0,1"))
                                                      (rule "concrete_and_4" (formula "13") (term "0,0,0,0,0,1"))
                                                      (rule "concrete_and_2" (formula "13") (term "0,0,0,0,1"))
                                                      (rule "concrete_and_2" (formula "13") (term "0,0,0,1"))
                                                      (rule "concrete_and_2" (formula "13") (term "0,0,1"))
                                                      (rule "concrete_and_2" (formula "13") (term "0,1"))
                                                      (rule "concrete_and_2" (formula "13") (term "1"))
                                                      (rule "concrete_or_4" (formula "13"))
                                                      (rule "andLeft" (formula "13"))
                                                      (rule "close" (formula "18") (ifseqformula "14"))
                                                   )
                                                   (branch
                                                      (rule "close" (formula "15") (ifseqformula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "replaceKnownSelect_taclet00010_4" (formula "15") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=java_util_LinkedList_first_12"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "1") (term "0") (ifseqformula "4"))
                                                   (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "2"))
                                                   (rule "concrete_or_1" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                   (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                                   (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                                   (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "eqSymm" (formula "15") (term "1,0"))
                                                   (rule "eqSymm" (formula "14") (term "1,0"))
                                                   (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                   (rule "eqSymm" (formula "13") (term "1,1"))
                                                   (rule "replace_known_left" (formula "13") (term "0,1,0,0,0,0,0,1") (ifseqformula "1"))
                                                   (rule "concrete_not_1" (formula "13") (term "1,0,0,0,0,0,1"))
                                                   (rule "concrete_and_4" (formula "13") (term "0,0,0,0,0,1"))
                                                   (rule "concrete_and_2" (formula "13") (term "0,0,0,0,1"))
                                                   (rule "concrete_and_2" (formula "13") (term "0,0,0,1"))
                                                   (rule "concrete_and_2" (formula "13") (term "0,0,1"))
                                                   (rule "concrete_and_2" (formula "13") (term "0,1"))
                                                   (rule "concrete_and_2" (formula "13") (term "1"))
                                                   (rule "concrete_or_4" (formula "13"))
                                                   (rule "andLeft" (formula "13"))
                                                   (rule "close" (formula "18") (ifseqformula "14"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "14"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "14"))
                                                (branch "Case 1"
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "equalityToSeqGetAndSeqLenRight" (formula "14") (inst "iv=iv"))
                                                   (rule "lenOfSeqEmpty" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                                                   (rule "pullOutSelect" (formula "15") (term "1,0") (inst "selectSK=java_util_LinkedList_first_14"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=java_util_LinkedList_nodeList_30"))
                                                   (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                                   (rule "eqClose" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_and_1" (formula "1") (term "0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_true" (formula "1") (term "0"))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "lenOfSeqConcat" (formula "14") (term "0,0"))
                                                   (rule "lenOfSeqSingleton" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                                   (rule "lenOfSeqConcat" (formula "14") (term "1,1,1,0,0,1"))
                                                   (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,1,0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "0,1,1,0,0,1"))
                                                   (rule "add_zero_left" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "polySimp_sepPosMonomial" (formula "14") (term "0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0"))
                                                   (rule "inEqSimp_contradEq7" (formula "14") (term "0") (ifseqformula "7"))
                                                   (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,0"))
                                                   (rule "concrete_and_2" (formula "14") (term "0"))
                                                   (rule "concrete_and_2" (formula "14"))
                                                   (rule "false_right" (formula "14"))
                                                   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_7"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_prev_8"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "self.first = n_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "13") (ifseqformula "1") (ifseqformula "14"))
                                                      (rule "close" (formula "13") (ifseqformula "5"))
                                                   )
                                                   (branch "self.first = n_2 FALSE"
                                                      (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "3"))
                                                      (rule "cut_direct" (formula "1") (term "0"))
                                                      (branch "CUT: self.first = null TRUE"
                                                         (rule "concrete_or_1" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                         (rule "eqSymm" (formula "11"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "4"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                                                         (rule "concrete_or_2" (formula "1"))
                                                         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                         (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "eqSymm" (formula "16") (term "1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "14") (term "1,1"))
                                                         (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "18"))
                                                         (rule "concrete_and_4" (formula "14") (term "0"))
                                                         (rule "concrete_or_2" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "notLeft" (formula "15"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "notLeft" (formula "14"))
                                                         (rule "close" (formula "21") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: self.first = null FALSE"
                                                         (rule "concrete_or_2" (formula "1"))
                                                         (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "4"))
                                                         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
                                                         (rule "concrete_or_2" (formula "1"))
                                                         (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                         (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                                         (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "andLeft" (formula "11"))
                                                         (rule "eqSymm" (formula "16") (term "1,0"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "eqSymm" (formula "14") (term "1,1"))
                                                         (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                         (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "18"))
                                                         (rule "concrete_and_4" (formula "14") (term "0,0"))
                                                         (rule "concrete_and_2" (formula "14") (term "0"))
                                                         (rule "concrete_or_2" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "andLeft" (formula "14"))
                                                         (rule "close" (formula "29") (ifseqformula "15"))
                                                      )
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_first_13"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "16") (term "1,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_5"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                   (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                   (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                   (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_prev_6"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                   (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                   (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                   (rule "ifthenelse_false" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "self.first = n_2 TRUE"
                                                      (rule "referencedObjectIsCreatedRightEQ" (formula "13") (ifseqformula "1") (ifseqformula "14"))
                                                      (rule "close" (formula "13") (ifseqformula "5"))
                                                   )
                                                   (branch "self.first = n_2 FALSE"
                                                      (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "3"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                      (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "eqSymm" (formula "16") (term "1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "23"))
                                                      (rule "concrete_and_4" (formula "14") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "14") (term "0"))
                                                      (rule "concrete_or_2" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "close" (formula "29") (ifseqformula "15"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "replaceKnownSelect_taclet00010_4" (formula "14") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                                (rule "pullOutSelect" (formula "14") (term "1,0") (inst "selectSK=java_util_LinkedList_first_15"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "15") (term "1,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_9"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                                (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                                (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                                (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                                (rule "concrete_and_3" (formula "1") (term "0,0"))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_prev_10"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                (rule "equalUnique" (formula "1") (term "1,0,0"))
                                                (rule "concrete_and_4" (formula "1") (term "0,0"))
                                                (rule "ifthenelse_false" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "self.first = n_2 TRUE"
                                                   (rule "referencedObjectIsCreatedRightEQ" (formula "13") (ifseqformula "1") (ifseqformula "14"))
                                                   (rule "close" (formula "13") (ifseqformula "5"))
                                                )
                                                (branch "self.first = n_2 FALSE"
                                                   (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0") (ifseqformula "3"))
                                                   (rule "cut_direct" (formula "1") (term "0"))
                                                   (branch "CUT: self.first = null TRUE"
                                                      (rule "concrete_or_1" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "16"))
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                      (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "eqSymm" (formula "16") (term "1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "18"))
                                                      (rule "concrete_and_4" (formula "14") (term "0"))
                                                      (rule "concrete_or_2" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "15"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "notLeft" (formula "14"))
                                                      (rule "close" (formula "21") (ifseqformula "2"))
                                                   )
                                                   (branch "CUT: self.first = null FALSE"
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "4"))
                                                      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "18"))
                                                      (rule "concrete_or_2" (formula "1"))
                                                      (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                      (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                                      (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                                      (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "andLeft" (formula "11"))
                                                      (rule "eqSymm" (formula "16") (term "1,0"))
                                                      (rule "eqSymm" (formula "15") (term "1,0"))
                                                      (rule "eqSymm" (formula "14") (term "1,1"))
                                                      (rule "eqSymm" (formula "14") (term "1,0,1"))
                                                      (rule "replace_known_right" (formula "14") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "concrete_and_4" (formula "14") (term "0,0"))
                                                      (rule "concrete_and_2" (formula "14") (term "0"))
                                                      (rule "concrete_or_2" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "close" (formula "29") (ifseqformula "15"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "notRight" (formula "15"))
                                          (rule "andRight" (formula "15"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "15"))
                                             (branch "Case 1"
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "replaceKnownSelect_taclet00010_4" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "1") (term "0"))
                                                (rule "close" (formula "13") (ifseqformula "1"))
                                             )
                                             (branch "Case 2"
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                                (rule "dismissNonSelectedField" (formula "1") (term "0"))
                                                (rule "replaceKnownSelect_taclet00010_4" (formula "1") (term "0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "1") (term "0"))
                                                (rule "close" (formula "13") (ifseqformula "1"))
                                             )
                                          )
                                          (branch
                                             (rule "close" (formula "15") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "14"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "14"))
                                          (branch "Case 1"
                                             (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                             (rule "replaceKnownSelect_taclet00010_4" (formula "15") (term "1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "1,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "14") (inst "iv=iv"))
                                             (rule "lenOfSeqEmpty" (formula "14") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                                             (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                                             (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_Node_next_7"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "pullOutSelect" (formula "15") (term "0,0,1,0,1") (inst "selectSK=java_util_LinkedList_nodeList_31"))
                                             (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "16") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "16") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "16") (term "0,0,1,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "lenOfSeqConcat" (formula "15") (term "0,0"))
                                             (rule "lenOfSeqSingleton" (formula "15") (term "1,0,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                             (rule "lenOfSeqConcat" (formula "15") (term "1,1,1,0,0,1"))
                                             (rule "lenOfSeqSingleton" (formula "15") (term "1,1,1,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,1,1,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "1,1,0,0,1"))
                                             (rule "add_literals" (formula "15") (term "0,1,1,0,0,1"))
                                             (rule "add_zero_left" (formula "15") (term "1,1,0,0,1"))
                                             (rule "polySimp_sepPosMonomial" (formula "15") (term "0"))
                                             (rule "mul_literals" (formula "15") (term "1,0"))
                                             (rule "inEqSimp_contradEq7" (formula "15") (term "0") (ifseqformula "8"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,0"))
                                             (rule "leq_literals" (formula "15") (term "0,0"))
                                             (rule "concrete_and_2" (formula "15") (term "0"))
                                             (rule "concrete_and_2" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_next_8"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "self.last = n_2 TRUE"
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "13") (ifseqformula "1") (ifseqformula "14"))
                                                (rule "close" (formula "13") (ifseqformula "5"))
                                             )
                                             (branch "self.last = n_2 FALSE"
                                                (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                                (rule "eqClose" (formula "16"))
                                                (rule "closeTrue" (formula "16"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                             (rule "replaceKnownSelect_taclet00010_4" (formula "15") (term "1,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                             (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_Node_next_5"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_3" (formula "1") (term "0,0"))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                             (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_first_16"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (rule "equalUnique" (formula "1") (term "1,0,0"))
                                             (rule "concrete_and_4" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_next_6"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                             (rule "eqClose" (formula "1") (term "0,0,0"))
                                             (rule "concrete_and_1" (formula "1") (term "0,0"))
                                             (rule "equalUnique" (formula "1") (term "0,0,0"))
                                             (rule "concrete_not_2" (formula "1") (term "0,0"))
                                             (rule "ifthenelse_true" (formula "1") (term "0"))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "self.last = n_2 TRUE"
                                                (rule "referencedObjectIsCreatedRightEQ" (formula "13") (ifseqformula "1") (ifseqformula "14"))
                                                (rule "close" (formula "13") (ifseqformula "5"))
                                             )
                                             (branch "self.last = n_2 FALSE"
                                                (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
                                                (rule "eqClose" (formula "17"))
                                                (rule "closeTrue" (formula "17"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "replaceKnownSelect_taclet00010_4" (formula "14") (term "0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "1,0"))
                                          (rule "replaceKnownSelect_taclet00010_4" (formula "14") (term "1,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "14") (term "1,0"))
                                          (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_Node_next_9"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_next_10"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "self.last = n_2 TRUE"
                                             (rule "referencedObjectIsCreatedRightEQ" (formula "13") (ifseqformula "1") (ifseqformula "14"))
                                             (rule "close" (formula "13") (ifseqformula "5"))
                                          )
                                          (branch "self.last = n_2 FALSE"
                                             (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                                             (rule "eqClose" (formula "16"))
                                             (rule "closeTrue" (formula "16"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "14"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "14"))
                                       (branch "Case 1"
                                          (rule "eqSymm" (formula "15"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "castedGetAny" (formula "15") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "equalityToSeqGetAndSeqLenRight" (formula "14") (inst "iv=iv"))
                                          (rule "lenOfSeqEmpty" (formula "14") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                                          (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_33"))
                                          (rule "applyEq" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "lenOfSeqConcat" (formula "14") (term "0,0"))
                                          (rule "lenOfSeqSingleton" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                          (rule "lenOfSeqConcat" (formula "14") (term "1,1,1,0,0,1"))
                                          (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,1,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1"))
                                          (rule "add_literals" (formula "14") (term "0,1,1,0,0,1"))
                                          (rule "add_zero_left" (formula "14") (term "1,1,0,0,1"))
                                          (rule "polySimp_sepPosMonomial" (formula "14") (term "0"))
                                          (rule "mul_literals" (formula "14") (term "1,0"))
                                          (rule "inEqSimp_contradEq7" (formula "14") (term "0") (ifseqformula "7"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,0"))
                                          (rule "leq_literals" (formula "14") (term "0,0"))
                                          (rule "concrete_and_2" (formula "14") (term "0"))
                                          (rule "concrete_and_2" (formula "14"))
                                          (rule "false_right" (formula "14"))
                                          (rule "getOfSeqConcat" (formula "14") (term "0"))
                                          (rule "polySimp_elimSub" (formula "14") (term "1,2,0"))
                                          (rule "add_zero_left" (formula "14") (term "1,2,0"))
                                          (rule "getOfSeqSingleton" (formula "14") (term "2,0"))
                                          (rule "castDel" (formula "14") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_invertEq" (formula "14") (term "0,2,0"))
                                          (rule "times_zero_2" (formula "14") (term "1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "14") (term "1") (inst "selectSK=java_util_LinkedList_first_18"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "14") (term "2,0"))
                                          (branch "self.nodeList.length = 0 TRUE"
                                             (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "15") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "15") (term "0"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "4"))
                                             (rule "cut_direct" (formula "1") (term "0"))
                                             (branch "CUT: self.first = null TRUE"
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "14"))
                                                (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                                (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,0"))
                                                (rule "eqSymm" (formula "12") (term "1,0,1"))
                                                (rule "eqSymm" (formula "12") (term "1,1"))
                                                (rule "replace_known_right" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "16"))
                                                (rule "concrete_not_2" (formula "12") (term "1,0,0,0,1"))
                                                (rule "concrete_and_3" (formula "12") (term "0,0,0,1"))
                                                (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                                (rule "concrete_and_3" (formula "12") (term "0,0"))
                                                (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "16"))
                                                (rule "concrete_and_4" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "close" (formula "20") (ifseqformula "1"))
                                             )
                                             (branch "CUT: self.first = null FALSE"
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                                (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "andLeft" (formula "9"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,0"))
                                                (rule "eqSymm" (formula "12") (term "1,0,1"))
                                                (rule "eqSymm" (formula "12") (term "1,1"))
                                                (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "16"))
                                                (rule "concrete_and_4" (formula "12") (term "0,0"))
                                                (rule "concrete_and_2" (formula "12") (term "0"))
                                                (rule "concrete_or_2" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "14"))
                                                (rule "andLeft" (formula "12"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "notLeft" (formula "12"))
                                                (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "14") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                                (rule "eqSymm" (formula "17") (term "1,0"))
                                                (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                                (rule "eqSymm" (formula "16") (term "1,0"))
                                                (rule "castedGetAny" (formula "15") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                                (rule "add_literals" (formula "15") (term "1,0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "9"))
                                                (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                                (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                                                (rule "lenOfSeqEmpty" (formula "18") (term "1,0"))
                                                (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "2"))
                                                (rule "concrete_and_1" (formula "18"))
                                                (rule "allRight" (formula "18") (inst "sk=iv_3"))
                                                (rule "impRight" (formula "18"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "1"))
                                                (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                                (rule "mul_literals" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (rule "concrete_and_2" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "self.nodeList.length = 0 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "14"))
                                             (rule "add_zero_right" (formula "7") (term "1"))
                                             (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "7"))
                                             (rule "ifthenelse_true" (formula "15") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "14") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                             (rule "concrete_and_2" (formula "14"))
                                             (rule "false_right" (formula "14"))
                                             (rule "seqGetAlphaCast" (formula "14") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                             (rule "eqClose" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "3"))
                                             (rule "cut_direct" (formula "1") (term "0"))
                                             (branch "CUT: self.first = null TRUE"
                                                (rule "concrete_or_1" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "15") (term "1") (ifseqformula "1"))
                                                (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                                (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "replace_known_right" (formula "13") (term "0,1,0,0,0,1") (ifseqformula "17"))
                                                (rule "concrete_not_2" (formula "13") (term "1,0,0,0,1"))
                                                (rule "concrete_and_3" (formula "13") (term "0,0,0,1"))
                                                (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "17"))
                                                (rule "concrete_and_4" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "close" (formula "20") (ifseqformula "1"))
                                             )
                                             (branch "CUT: self.first = null FALSE"
                                                (rule "concrete_or_2" (formula "1"))
                                                (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                                (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                                (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                                (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "andLeft" (formula "10"))
                                                (rule "eqSymm" (formula "15") (term "1,0"))
                                                (rule "eqSymm" (formula "14") (term "1,0"))
                                                (rule "eqSymm" (formula "13") (term "1,0,1"))
                                                (rule "eqSymm" (formula "13") (term "1,1"))
                                                (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "17"))
                                                (rule "concrete_and_4" (formula "13") (term "0,0"))
                                                (rule "concrete_and_2" (formula "13") (term "0"))
                                                (rule "concrete_or_2" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "notLeft" (formula "15"))
                                                (rule "andLeft" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                                (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                                (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "16") (term "1,0,0"))
                                                (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                                (rule "castedGetAny" (formula "15") (term "0"))
                                                (rule "close" (formula "26") (ifseqformula "15"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "eqSymm" (formula "15"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "castedGetAny" (formula "15") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                          (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_32"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                          (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                          (rule "eqClose" (formula "1") (term "0,0,0"))
                                          (rule "concrete_and_1" (formula "1") (term "0,0"))
                                          (rule "equalUnique" (formula "1") (term "0,0,0"))
                                          (rule "concrete_not_2" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_true" (formula "1") (term "0"))
                                          (rule "castDel" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "getOfSeqConcat" (formula "15") (term "0"))
                                          (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                                          (rule "add_zero_left" (formula "15") (term "1,2,0"))
                                          (rule "getOfSeqSingleton" (formula "15") (term "2,0"))
                                          (rule "castDel" (formula "15") (term "1,2,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_invertEq" (formula "15") (term "0,2,0"))
                                          (rule "times_zero_2" (formula "15") (term "1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                                          (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_LinkedList_first_17"))
                                          (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "equalUnique" (formula "1") (term "1,0,0"))
                                          (rule "concrete_and_4" (formula "1") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "1") (term "0"))
                                          (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "16") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "15") (term "2,0"))
                                          (branch "self.nodeList.length = 0 TRUE"
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "14") (term "0,0"))
                                             (rule "ifthenelse_false" (formula "14") (term "0"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "4"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "14"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0"))
                                             (rule "eqSymm" (formula "12") (term "1,0,1"))
                                             (rule "eqSymm" (formula "12") (term "1,1"))
                                             (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "20"))
                                             (rule "concrete_and_4" (formula "12") (term "0,0"))
                                             (rule "concrete_and_2" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                                             (rule "lenOfSeqEmpty" (formula "18") (term "1,0"))
                                             (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "2"))
                                             (rule "concrete_and_1" (formula "18"))
                                             (rule "allRight" (formula "18") (inst "sk=iv_2"))
                                             (rule "impRight" (formula "18"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_and_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "self.nodeList.length = 0 FALSE"
                                             (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "15"))
                                             (rule "add_literals" (formula "7") (term "1"))
                                             (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "7"))
                                             (rule "ifthenelse_true" (formula "16") (term "0"))
                                             (rule "inEqSimp_contradEq7" (formula "15") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "15") (term "0,0"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (rule "concrete_and_2" (formula "15"))
                                             (rule "false_right" (formula "15"))
                                             (rule "seqGetAlphaCast" (formula "15") (term "0"))
                                             (rule "castedGetAny" (formula "1") (term "0"))
                                             (rule "eqClose" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "15") (term "1") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "21"))
                                             (rule "concrete_and_4" (formula "13") (term "0,0"))
                                             (rule "concrete_and_2" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "notLeft" (formula "15"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0"))
                                             (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "close" (formula "26") (ifseqformula "15"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "eqSymm" (formula "15"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "castedGetAny" (formula "15") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "replaceKnownSelect_taclet00010_4" (formula "14") (term "0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                       (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_34"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "0,0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "getOfSeqConcat" (formula "14") (term "0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,2,0"))
                                       (rule "add_zero_left" (formula "14") (term "1,2,0"))
                                       (rule "getOfSeqSingleton" (formula "14") (term "2,0"))
                                       (rule "castDel" (formula "14") (term "1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                                       (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                       (rule "polySimp_invertEq" (formula "14") (term "0,2,0"))
                                       (rule "times_zero_2" (formula "14") (term "1,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,2,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "14") (term "1") (inst "selectSK=java_util_LinkedList_first_19"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_4" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_false" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "15") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "14") (term "2,0"))
                                       (branch "self.nodeList.length = 0 TRUE"
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "applyEq" (formula "14") (term "0,0,0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "14") (term "0,0"))
                                          (rule "ifthenelse_false" (formula "14") (term "0"))
                                          (rule "eqSymm" (formula "14"))
                                          (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "4"))
                                          (rule "cut_direct" (formula "1") (term "0"))
                                          (branch "CUT: self.first = null TRUE"
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "14"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0"))
                                             (rule "eqSymm" (formula "12") (term "1,0,1"))
                                             (rule "eqSymm" (formula "12") (term "1,1"))
                                             (rule "replace_known_right" (formula "12") (term "0,1,0,0,0,1") (ifseqformula "16"))
                                             (rule "concrete_not_2" (formula "12") (term "1,0,0,0,1"))
                                             (rule "concrete_and_3" (formula "12") (term "0,0,0,1"))
                                             (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "1"))
                                             (rule "concrete_and_3" (formula "12") (term "0,0"))
                                             (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "16"))
                                             (rule "concrete_and_4" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "close" (formula "20") (ifseqformula "1"))
                                          )
                                          (branch "CUT: self.first = null FALSE"
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "9") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "9") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,0,1,1,1,1,0,0"))
                                             (rule "translateJavaSubInt" (formula "9") (term "1,1,0,0,1"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "andLeft" (formula "9"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0"))
                                             (rule "eqSymm" (formula "12") (term "1,0,1"))
                                             (rule "eqSymm" (formula "12") (term "1,1"))
                                             (rule "replace_known_right" (formula "12") (term "1,0,0") (ifseqformula "16"))
                                             (rule "concrete_and_4" (formula "12") (term "0,0"))
                                             (rule "concrete_and_2" (formula "12") (term "0"))
                                             (rule "concrete_or_2" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "14"))
                                             (rule "andLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "notLeft" (formula "12"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "16") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "14") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                             (rule "eqSymm" (formula "17") (term "1,0"))
                                             (rule "castedGetAny" (formula "16") (term "0,1,0"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                             (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "2"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                                             (rule "eqSymm" (formula "9"))
                                             (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "11") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                             (rule "times_zero_2" (formula "16") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "equalityToSeqGetAndSeqLenRight" (formula "18") (inst "iv=iv"))
                                             (rule "lenOfSeqEmpty" (formula "18") (term "1,0"))
                                             (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "2"))
                                             (rule "concrete_and_1" (formula "18"))
                                             (rule "allRight" (formula "18") (inst "sk=iv_4"))
                                             (rule "impRight" (formula "18"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "1"))
                                             (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (rule "concrete_and_2" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "self.nodeList.length = 0 FALSE"
                                          (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "14"))
                                          (rule "add_zero_right" (formula "7") (term "1"))
                                          (rule "replace_known_left" (formula "15") (term "0,0") (ifseqformula "7"))
                                          (rule "ifthenelse_true" (formula "15") (term "0"))
                                          (rule "inEqSimp_contradEq7" (formula "14") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (rule "concrete_and_2" (formula "14"))
                                          (rule "false_right" (formula "14"))
                                          (rule "seqGetAlphaCast" (formula "14") (term "0"))
                                          (rule "castedGetAny" (formula "1") (term "0"))
                                          (rule "eqClose" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "1") (ifseqformula "3"))
                                          (rule "cut_direct" (formula "1") (term "0"))
                                          (branch "CUT: self.first = null TRUE"
                                             (rule "concrete_or_1" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "applyEq" (formula "15") (term "1") (ifseqformula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "replace_known_right" (formula "13") (term "0,1,0,0,0,1") (ifseqformula "17"))
                                             (rule "concrete_not_2" (formula "13") (term "1,0,0,0,1"))
                                             (rule "concrete_and_3" (formula "13") (term "0,0,0,1"))
                                             (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "17"))
                                             (rule "concrete_and_4" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "close" (formula "20") (ifseqformula "1"))
                                          )
                                          (branch "CUT: self.first = null FALSE"
                                             (rule "concrete_or_2" (formula "1"))
                                             (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                             (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                             (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "eqSymm" (formula "15") (term "1,0"))
                                             (rule "eqSymm" (formula "14") (term "1,0"))
                                             (rule "eqSymm" (formula "13") (term "1,0,1"))
                                             (rule "eqSymm" (formula "13") (term "1,1"))
                                             (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "17"))
                                             (rule "concrete_and_4" (formula "13") (term "0,0"))
                                             (rule "concrete_and_2" (formula "13") (term "0"))
                                             (rule "concrete_or_2" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "notLeft" (formula "15"))
                                             (rule "andLeft" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "notLeft" (formula "13"))
                                             (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                                             (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "1,0,0"))
                                             (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                             (rule "castedGetAny" (formula "15") (term "0"))
                                             (rule "close" (formula "26") (ifseqformula "15"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "14"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "14"))
                                    (branch "Case 1"
                                       (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "castedGetAny" (formula "15") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "replaceKnownSelect_taclet00010_4" (formula "15") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "1"))
                                       (rule "equalityToSeqGetAndSeqLenRight" (formula "14") (inst "iv=iv"))
                                       (rule "lenOfSeqEmpty" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1"))
                                       (rule "pullOutSelect" (formula "15") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_36"))
                                       (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "16") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "eqClose" (formula "1") (term "1,0,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "equalUnique" (formula "1") (term "0,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "16") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "15") (term "0,0,1,0,1") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "lenOfSeqConcat" (formula "14") (term "1,1,1,0,0,1"))
                                       (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,1,0,0,1"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0,1"))
                                       (rule "add_literals" (formula "14") (term "0,1,1,0,0,1"))
                                       (rule "add_zero_left" (formula "14") (term "1,1,0,0,1"))
                                       (rule "lenOfSeqConcat" (formula "15") (term "1,1,0"))
                                       (rule "lenOfSeqSingleton" (formula "15") (term "1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                       (rule "lenOfSeqConcat" (formula "14") (term "0,0"))
                                       (rule "lenOfSeqSingleton" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                                       (rule "add_literals" (formula "15") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "14") (term "0"))
                                       (rule "mul_literals" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_contradEq7" (formula "14") (term "0") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                       (rule "add_zero_left" (formula "14") (term "0,0,0"))
                                       (rule "leq_literals" (formula "14") (term "0,0"))
                                       (rule "concrete_and_2" (formula "14") (term "0"))
                                       (rule "concrete_and_2" (formula "14"))
                                       (rule "false_right" (formula "14"))
                                       (rule "getOfSeqConcat" (formula "14") (term "0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "14") (term "1,2,0"))
                                       (rule "add_literals" (formula "14") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,2,0"))
                                       (rule "getOfSeqSingletonConcrete" (formula "14") (term "2,0"))
                                       (rule "castDel" (formula "14") (term "2,0"))
                                       (rule "ifthenelse_concrete4" (formula "14"))
                                       (rule "orRight" (formula "14"))
                                       (rule "notRight" (formula "14"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "castedGetAny" (formula "15") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                       (rule "replaceKnownSelect_taclet00010_4" (formula "15") (term "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "15") (term "1"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                       (rule "pullOutSelect" (formula "15") (term "0,1,1,0") (inst "selectSK=java_util_LinkedList_nodeList_35"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                       (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                       (rule "concrete_and_3" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0,0"))
                                       (rule "concrete_and_1" (formula "1") (term "0,0"))
                                       (rule "eqClose" (formula "1") (term "0,0"))
                                       (rule "ifthenelse_true" (formula "1") (term "0"))
                                       (rule "castDel" (formula "1") (term "0"))
                                       (rule "applyEqReverse" (formula "16") (term "0,1,1,0") (ifseqformula "1"))
                                       (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "lenOfSeqConcat" (formula "15") (term "1,1,0"))
                                       (rule "lenOfSeqSingleton" (formula "15") (term "1,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "1,0"))
                                       (rule "add_literals" (formula "15") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "15") (term "1,0"))
                                       (rule "getOfSeqConcat" (formula "15") (term "0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "15") (term "1,2,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,2,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,2,0"))
                                       (rule "getOfSeqSingletonConcrete" (formula "15") (term "2,0"))
                                       (rule "castDel" (formula "15") (term "2,0"))
                                       (rule "ifthenelse_concrete4" (formula "15"))
                                       (rule "orRight" (formula "15"))
                                       (rule "notRight" (formula "15"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "translateJavaSubInt" (formula "15") (term "1,0,1"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                    (rule "castedGetAny" (formula "15") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "15") (term "1"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "0"))
                                    (rule "replaceKnownSelect_taclet00010_4" (formula "14") (term "0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "14") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "14") (term "1"))
                                    (rule "replaceKnownSelect_taclet00010_4" (formula "14") (term "1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "14") (term "1"))
                                    (rule "pullOutSelect" (formula "14") (term "0,0") (inst "selectSK=java_util_LinkedList_nodeList_37"))
                                    (rule "applyEq" (formula "15") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                                    (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "1,0,0"))
                                    (rule "concrete_and_3" (formula "1") (term "0,0"))
                                    (rule "eqClose" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_true" (formula "1") (term "0"))
                                    (rule "castDel" (formula "1") (term "0"))
                                    (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "15") (term "0,1,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "lenOfSeqConcat" (formula "14") (term "1,1,0"))
                                    (rule "lenOfSeqSingleton" (formula "14") (term "1,1,1,0"))
                                    (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "1,0"))
                                    (rule "add_literals" (formula "14") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "14") (term "1,0"))
                                    (rule "getOfSeqConcat" (formula "14") (term "0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,2,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "1,2,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,2,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,2,0"))
                                    (rule "getOfSeqSingletonConcrete" (formula "14") (term "2,0"))
                                    (rule "castDel" (formula "14") (term "2,0"))
                                    (rule "ifthenelse_concrete4" (formula "14"))
                                    (rule "orRight" (formula "14"))
                                    (rule "notRight" (formula "14"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "14") (inst "sk=i_0_2") (userinteraction))
                           (rule "impRight" (formula "14") (userinteraction))
                           (rule "pullOutSelect" (formula "1") (term "0,1,1") (inst "selectSK=java_util_LinkedList_nodeList_41"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "replaceKnownSelect_taclet101000010_7" (formula "16") (term "0,0,1"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "eqClose" (formula "1") (term "0,0,0"))
                           (rule "concrete_and_1" (formula "1") (term "0,0"))
                           (rule "equalUnique" (formula "1") (term "0,0"))
                           (rule "ifthenelse_true" (formula "1") (term "0"))
                           (rule "replaceKnownSelect_taclet101000010_7" (formula "16") (term "0,0,1,0"))
                           (rule "castDel" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "16") (term "0,0,1") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "15"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                           (rule "lenOfSeqConcat" (formula "1") (term "1,1"))
                           (rule "lenOfSeqSingleton" (formula "1") (term "1,1,1"))
                           (rule "castedGetAny" (formula "15") (term "1,1"))
                           (rule "castedGetAny" (formula "15") (term "0"))
                           (rule "eqSymm" (formula "15"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "dismissNonSelectedField" (formula "15") (term "0"))
                           (rule "getOfSeqConcat" (formula "15") (term "1"))
                           (rule "eqSymm" (formula "15"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                           (rule "getOfSeqSingleton" (formula "15") (term "2,0"))
                           (rule "castDel" (formula "15") (term "1,2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                           (rule "getOfSeqConcat" (formula "15") (term "1,1"))
                           (rule "eqSymm" (formula "15"))
                           (rule "polySimp_elimSub" (formula "15") (term "1,2,1,0"))
                           (rule "getOfSeqSingleton" (formula "15") (term "2,1,0"))
                           (rule "castDel" (formula "15") (term "1,2,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,2,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                           (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_LinkedList_Node_prev_15"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                           (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                           (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_3" (formula "1") (term "0,0"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "16"))
                           (rule "eqSymm" (formula "1") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_prev_16"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (rule "equalUnique" (formula "1") (term "1,0,0"))
                           (rule "concrete_and_4" (formula "1") (term "0,0"))
                           (rule "ifthenelse_false" (formula "1") (term "0"))
                           (rule "ifthenelse_split" (formula "2") (term "0,0,0"))
                           (branch "self.nodeList.length >= 1 + i_0_2 TRUE"
                              (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "2"))
                              (rule "ifthenelse_true" (formula "1") (term "1,0"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "inEqSimp_contradEq7" (formula "17") (term "0,2,0") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,2,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,0,2,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,2,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0,2,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0,2,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,2,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,0,2,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,2,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,2,0"))
                              (rule "leq_literals" (formula "17") (term "0,0,2,0"))
                              (rule "concrete_and_2" (formula "17") (term "0,2,0"))
                              (rule "ifthenelse_false" (formula "17") (term "2,0"))
                              (rule "inEqSimp_subsumption1" (formula "17") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "17") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "17") (term "0,0,0"))
                              (rule "concrete_or_1" (formula "17") (term "0,0"))
                              (rule "ifthenelse_true" (formula "17") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch "(java.util.LinkedList.Node)self.nodeList[i_0_2] = n_2 TRUE"
                                 (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                 (rule "eqClose" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "polySimp_addComm0" (formula "5") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "add_zero_right" (formula "4") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_1" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0,1"))
                                 (rule "eqSymm" (formula "16") (term "1,1"))
                                 (rule "replace_known_right" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "20"))
                                 (rule "concrete_not_2" (formula "16") (term "1,0,0,0,1"))
                                 (rule "concrete_and_3" (formula "16") (term "0,0,0,1"))
                                 (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "20"))
                                 (rule "concrete_and_4" (formula "16") (term "0"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                 (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                 (rule "eqSymm" (formula "21") (term "1,0"))
                                 (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                 (rule "eqSymm" (formula "20") (term "1,0"))
                                 (rule "castedGetAny" (formula "19") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                 (rule "concrete_or_1" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "22") (inst "iv=iv"))
                                 (rule "lenOfSeqEmpty" (formula "22") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_imp2or" (formula "22") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or_2" (formula "20") (term "0"))
                                 (rule "cnf_rightDist" (formula "14") (term "0"))
                                 (rule "distr_forallAnd" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "commute_or_2" (formula "14") (term "0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "shift_paren_or" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                 (rule "eqClose" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                 (rule "castedGetAny" (formula "19") (term "0"))
                                 (rule "eqClose" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "cut_direct" (formula "23") (term "0"))
                                 (branch "CUT: self.size = 0 TRUE"
                                    (rule "concrete_and_1" (formula "24"))
                                    (rule "allRight" (formula "24") (inst "sk=iv_7"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "inEqSimp_geqRight" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "25"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "times_zero_2" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                    (rule "times_zero_2" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "3"))
                                    (rule "add_zero_right" (formula "23") (term "1,1,0"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "3"))
                                    (rule "add_zero_right" (formula "21") (term "1,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "14") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "7"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_and_2" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "CUT: self.size = 0 FALSE"
                                    (rule "concrete_and_2" (formula "24"))
                                    (rule "false_right" (formula "24"))
                                    (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "23"))
                                    (rule "add_zero_right" (formula "11") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "11"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (rule "concrete_and_2" (formula "23"))
                                    (rule "false_right" (formula "23"))
                                    (rule "allLeft" (formula "20") (inst "t=i_0_2"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,0,0,0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (rule "concrete_and_2" (formula "20") (term "1"))
                                    (rule "concrete_or_4" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "20") (term "0,1"))
                                    (rule "concrete_and_2" (formula "20") (term "1"))
                                    (rule "concrete_or_4" (formula "20"))
                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "20"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "allLeft" (formula "22") (inst "t=add(Z(neglit(1(#))), i_0_2)"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "1,1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,1,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,1,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,1,0"))
                                    (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "20"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                    (rule "inEqSimp_invertInEq1" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                    (rule "times_zero_2" (formula "22") (term "1,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "22") (term "0,1,0"))
                                    (rule "concrete_and_2" (formula "22") (term "1,0"))
                                    (rule "concrete_or_4" (formula "22") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                    (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                    (rule "leq_literals" (formula "22") (term "0,1"))
                                    (rule "concrete_and_2" (formula "22") (term "1"))
                                    (rule "concrete_or_4" (formula "22"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "27") (ifseqformula "22") (ifseqformula "28"))
                                    (rule "close" (formula "27") (ifseqformula "7"))
                                 )
                              )
                              (branch "(java.util.LinkedList.Node)self.nodeList[i_0_2] = n_2 FALSE"
                                 (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "1"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "6"))
                                 (rule "cut_direct" (formula "1") (term "0"))
                                 (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0_2].prev = null TRUE"
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,1"))
                                    (rule "eqSymm" (formula "16") (term "1,0,1"))
                                    (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "21"))
                                    (rule "concrete_and_4" (formula "16") (term "0"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "1,0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (rule "concrete_or_1" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "22") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "22") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "eqClose" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "eqClose" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "cut_direct" (formula "23") (term "0"))
                                    (branch "CUT: self.size = 0 TRUE"
                                       (rule "concrete_and_1" (formula "24"))
                                       (rule "allRight" (formula "24") (inst "sk=iv_8"))
                                       (rule "orRight" (formula "24"))
                                       (rule "orRight" (formula "24"))
                                       (rule "inEqSimp_geqRight" (formula "25"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "times_zero_2" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                                       (rule "add_zero_right" (formula "20") (term "1,0"))
                                       (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "3"))
                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "3"))
                                       (rule "add_zero_right" (formula "22") (term "1,1,0"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (rule "concrete_and_2" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "CUT: self.size = 0 FALSE"
                                       (rule "concrete_and_2" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "23"))
                                       (rule "add_zero_right" (formula "11") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "11"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (rule "concrete_and_2" (formula "23"))
                                       (rule "false_right" (formula "23"))
                                       (rule "allLeft" (formula "20") (inst "t=i_0_2"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "20") (term "0,0"))
                                       (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "30"))
                                       (rule "concrete_or_2" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (rule "concrete_and_2" (formula "20") (term "1"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "20"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "19") (term "0"))
                                       (rule "concrete_and_2" (formula "19"))
                                       (rule "closeFalse" (formula "19"))
                                    )
                                 )
                                 (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_0_2].prev = null FALSE"
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "polySimp_addComm0" (formula "5") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,0,1"))
                                    (rule "eqSymm" (formula "16") (term "1,1"))
                                    (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "22"))
                                    (rule "concrete_and_4" (formula "16") (term "0"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "1,0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (rule "concrete_or_1" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "22") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "22") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "eqClose" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "eqClose" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "allLeft" (formula "20") (inst "t=i_0_2"))
                                    (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "32"))
                                    (rule "concrete_or_2" (formula "20") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                    (rule "concrete_and_2" (formula "20") (term "0"))
                                    (rule "concrete_or_2" (formula "20"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "20"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                           )
                           (branch "self.nodeList.length >= 1 + i_0_2 FALSE"
                              (rule "ifthenelse_concrete3" (formula "2") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,1,0") (ifseqformula "13"))
                              (rule "ifthenelse_false" (formula "1") (term "1,0"))
                              (rule "inEqSimp_geqRight" (formula "13"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "commute_or" (formula "3") (term "0,0"))
                              (rule "ifthenelse_split" (formula "18") (term "0"))
                              (branch "self.nodeList.length >= i_0_2 TRUE"
                                 (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                 (rule "concrete_or_3" (formula "5") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "5") (term "0"))
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "0,1,0") (ifseqformula "1"))
                                 (rule "ifthenelse_true" (formula "4") (term "1,0"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3"))
                                 (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "qeq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,0"))
                                 (rule "times_zero_1" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "applyEq" (formula "2") (term "0,1,1") (ifseqformula "1"))
                                 (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                                 (rule "seqGetAlphaCast" (formula "16") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0,0"))
                                 (rule "polySimp_pullOutFactor2" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "1,0"))
                                 (rule "times_zero_1" (formula "3") (term "0"))
                                 (rule "leq_literals" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                 (rule "concrete_or_1" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "10") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "10") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "10") (term "1,0,1,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "10") (term "1,1,0,0,1"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "eqSymm" (formula "13") (term "1,0,1"))
                                 (rule "eqSymm" (formula "13") (term "1,1"))
                                 (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "17"))
                                 (rule "concrete_and_4" (formula "13") (term "0"))
                                 (rule "concrete_or_2" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "15"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "notLeft" (formula "13"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "16") (term "1,0,0"))
                                 (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "17") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "15") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "castedGetAny" (formula "17") (term "0,1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "castedGetAny" (formula "16") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "1"))
                                 (rule "close" (formula "26") (ifseqformula "16"))
                              )
                              (branch "self.nodeList.length >= i_0_2 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_contradEq3" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,0"))
                                 (rule "qeq_literals" (formula "3") (term "0,0,1,0"))
                                 (rule "concrete_and_2" (formula "3") (term "0,1,0"))
                                 (rule "ifthenelse_false" (formula "3") (term "1,0"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "inEqSimp_contradEq3" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "concrete_and_2" (formula "3") (term "1,0,0"))
                                 (rule "concrete_or_4" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (rule "concrete_or_1" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "ifthenelse_split" (formula "17") (term "0"))
                                 (branch "self.nodeList.length = -1 + i_0_2 TRUE"
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,0"))
                                    (rule "times_zero_1" (formula "2") (term "0"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "3") (term "0,1,1") (ifseqformula "1"))
                                    (rule "polySimp_addComm1" (formula "3") (term "1,1"))
                                    (rule "add_literals" (formula "3") (term "0,1,1"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "(java.util.LinkedList.Node)(seqGetOutside) = n_2 TRUE"
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "add_zero_left" (formula "3") (term "1,1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_literals" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "(java.util.LinkedList.Node)(seqGetOutside) = n_2 FALSE"
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "5"))
                                       (rule "cut_direct" (formula "1") (term "0"))
                                       (branch "CUT: (java.util.LinkedList.Node)(seqGetOutside).prev = null TRUE"
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "add_zero_left" (formula "3") (term "1,1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "CUT: (java.util.LinkedList.Node)(seqGetOutside).prev = null FALSE"
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "add_zero_left" (formula "3") (term "1,1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                 )
                                 (branch "self.nodeList.length = -1 + i_0_2 FALSE"
                                    (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "17"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "1"))
                                    (rule "add_literals" (formula "1") (term "0,1"))
                                    (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "17") (term "0,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                    (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                    (rule "add_literals" (formula "17") (term "0,0"))
                                    (rule "qeq_literals" (formula "17") (term "0"))
                                    (rule "concrete_and_2" (formula "17"))
                                    (rule "false_right" (formula "17"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "(java.util.LinkedList.Node)(seqGetOutside) = n_2 TRUE"
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "polySimp_addComm0" (formula "4") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "(java.util.LinkedList.Node)(seqGetOutside) = n_2 FALSE"
                                       (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0") (ifseqformula "5"))
                                       (rule "cut_direct" (formula "1") (term "0"))
                                       (branch "CUT: (java.util.LinkedList.Node)(seqGetOutside).prev = null TRUE"
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "CUT: (java.util.LinkedList.Node)(seqGetOutside).prev = null FALSE"
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "polySimp_addComm0" (formula "4") (term "1"))
                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "4") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch
                        (rule "allRight" (formula "14") (inst "sk=i_3") (userinteraction))
                        (rule "impRight" (formula "14") (userinteraction))
                        (rule "translateJavaSubInt" (formula "1") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOneLeft0" (formula "1") (term "1,1,1"))
                        (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                        (rule "pullOutSelect" (formula "1") (term "0,1,1,1") (inst "selectSK=java_util_LinkedList_nodeList_43"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "replaceKnownSelect_taclet11000010_7" (formula "16") (term "0,0,1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "eqClose" (formula "1") (term "0,0,0"))
                        (rule "concrete_and_1" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "0,0"))
                        (rule "ifthenelse_true" (formula "1") (term "0"))
                        (rule "replaceKnownSelect_taclet11000010_7" (formula "16") (term "0,0,1,0"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "2") (term "0,1,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_addComm0" (formula "15") (term "1,0,0"))
                        (rule "lenOfSeqConcat" (formula "1") (term "1,1,1"))
                        (rule "lenOfSeqSingleton" (formula "1") (term "1,1,1,1"))
                        (rule "polySimp_addAssoc" (formula "1") (term "1,1"))
                        (rule "polySimp_addComm1" (formula "1") (term "1,1"))
                        (rule "add_literals" (formula "1") (term "0,1,1"))
                        (rule "add_zero_left" (formula "1") (term "1,1"))
                        (rule "dismissNonSelectedField" (formula "15") (term "1"))
                        (rule "castedGetAny" (formula "15") (term "0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "castedGetAny" (formula "15") (term "1,0"))
                        (rule "dismissNonSelectedField" (formula "15") (term "0"))
                        (rule "getOfSeqConcat" (formula "15") (term "1"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,2,0"))
                        (rule "getOfSeqSingleton" (formula "15") (term "2,0"))
                        (rule "castDel" (formula "15") (term "1,2,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,2,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                        (rule "getOfSeqConcat" (formula "15") (term "1,1"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,2,1,0"))
                        (rule "getOfSeqSingleton" (formula "15") (term "2,1,0"))
                        (rule "castDel" (formula "15") (term "1,2,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
                        (rule "polySimp_sepNegMonomial" (formula "15") (term "0,2,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,2,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,2,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "pullOutSelect" (formula "15") (term "1") (inst "selectSK=java_util_LinkedList_Node_next_17"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0,0"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_next_18"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "0,1,0,0"))
                        (rule "concrete_not_2" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_3" (formula "1") (term "0,0"))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "eqSymm" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=java_util_LinkedList_Node_next_19"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (rule "equalUnique" (formula "1") (term "1,0,0"))
                        (rule "concrete_and_4" (formula "1") (term "0,0"))
                        (rule "ifthenelse_false" (formula "1") (term "0"))
                        (rule "ifthenelse_split" (formula "18") (term "0"))
                        (branch "self.nodeList.length >= 2 + i_3 TRUE"
                           (rule "inEqSimp_contradEq7" (formula "4") (term "0,2,0,0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,2,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,2,0,0,0"))
                           (rule "add_literals" (formula "4") (term "1,1,0,0,0,2,0,0,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0,0,0,2,0,0,0"))
                           (rule "add_zero_right" (formula "4") (term "0,0,0,2,0,0,0"))
                           (rule "leq_literals" (formula "4") (term "0,0,2,0,0,0"))
                           (rule "concrete_and_2" (formula "4") (term "0,2,0,0,0"))
                           (rule "ifthenelse_false" (formula "4") (term "2,0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "3") (term "0,2,0,0,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,2,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,2,0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,2,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,2,0,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,0,2,0,0,0"))
                           (rule "leq_literals" (formula "3") (term "0,0,2,0,0,0"))
                           (rule "concrete_and_2" (formula "3") (term "0,2,0,0,0"))
                           (rule "ifthenelse_false" (formula "3") (term "2,0,0,0"))
                           (rule "inEqSimp_contradEq7" (formula "2") (term "0,2,1,0") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,2,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,2,1,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,2,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,2,1,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0,2,1,0"))
                           (rule "leq_literals" (formula "2") (term "0,0,2,1,0"))
                           (rule "concrete_and_2" (formula "2") (term "0,2,1,0"))
                           (rule "ifthenelse_false" (formula "2") (term "2,1,0"))
                           (rule "inEqSimp_subsumption1" (formula "2") (term "0,1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                           (rule "qeq_literals" (formula "2") (term "0,0,1,0"))
                           (rule "concrete_or_1" (formula "2") (term "0,1,0"))
                           (rule "ifthenelse_true" (formula "2") (term "1,0"))
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "inEqSimp_subsumption1" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                           (rule "qeq_literals" (formula "3") (term "0,0,0,0,0"))
                           (rule "concrete_or_1" (formula "3") (term "0,0,0,0"))
                           (rule "ifthenelse_true" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_subsumption1" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "1,1,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "qeq_literals" (formula "2") (term "0,0,0,0,0"))
                           (rule "concrete_or_1" (formula "2") (term "0,0,0,0"))
                           (rule "ifthenelse_true" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "12"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "seqGetAlphaCast" (formula "19") (term "0"))
                           (rule "castedGetAny" (formula "1") (term "0"))
                           (rule "eqClose" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "(java.util.LinkedList.Node)self.nodeList[i_3] = n_2 TRUE"
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "4") (term "0,0"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "self.last = n_2 TRUE"
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                 (rule "eqClose" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "referencedObjectIsCreatedRightEQ" (formula "16") (ifseqformula "4") (ifseqformula "17"))
                                 (rule "close" (formula "16") (ifseqformula "8"))
                              )
                              (branch "self.last = n_2 FALSE"
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                 (rule "eqClose" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0"))
                                 (rule "qeq_literals" (formula "5") (term "0"))
                                 (rule "concrete_or_1" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                 (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "eqSymm" (formula "16") (term "1,0,1"))
                                 (rule "eqSymm" (formula "16") (term "1,1"))
                                 (rule "replace_known_right" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "21"))
                                 (rule "concrete_not_2" (formula "16") (term "1,0,0,0,1"))
                                 (rule "concrete_and_3" (formula "16") (term "0,0,0,1"))
                                 (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "21"))
                                 (rule "concrete_and_4" (formula "16") (term "0"))
                                 (rule "concrete_or_2" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "notLeft" (formula "16"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                 (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                 (rule "eqSymm" (formula "21") (term "1,0"))
                                 (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                 (rule "eqSymm" (formula "20") (term "1,0"))
                                 (rule "castedGetAny" (formula "19") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "2") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                 (rule "leq_literals" (formula "14") (term "0"))
                                 (rule "concrete_or_1" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "22") (inst "iv=iv"))
                                 (rule "lenOfSeqEmpty" (formula "22") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "13"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                 (rule "mul_literals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "nnf_imp2or" (formula "14") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_imp2or" (formula "22") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                 (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                                 (rule "commute_or_2" (formula "19") (term "0"))
                                 (rule "commute_or_2" (formula "20") (term "0"))
                                 (rule "cnf_rightDist" (formula "14") (term "0"))
                                 (rule "distr_forallAnd" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "commute_or_2" (formula "14") (term "0"))
                                 (rule "commute_or" (formula "20") (term "0,0"))
                                 (rule "commute_or" (formula "21") (term "0,0"))
                                 (rule "shift_paren_or" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                 (rule "castedGetAny" (formula "18") (term "0"))
                                 (rule "eqClose" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                 (rule "castedGetAny" (formula "19") (term "0"))
                                 (rule "eqClose" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "cut_direct" (formula "23") (term "0"))
                                 (branch "CUT: self.size = 0 TRUE"
                                    (rule "concrete_and_1" (formula "24"))
                                    (rule "allRight" (formula "24") (inst "sk=iv_11"))
                                    (rule "orRight" (formula "24"))
                                    (rule "orRight" (formula "24"))
                                    (rule "inEqSimp_leqRight" (formula "24"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                    (rule "times_zero_2" (formula "1") (term "1,0"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "15"))
                                    (rule "true_left" (formula "15"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "3"))
                                    (rule "add_zero_right" (formula "21") (term "1,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "times_zero_2" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "3"))
                                    (rule "add_zero_right" (formula "22") (term "1,1,0"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "14") (term "1") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (rule "concrete_and_2" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                                 (branch "CUT: self.size = 0 FALSE"
                                    (rule "concrete_and_2" (formula "24"))
                                    (rule "false_right" (formula "24"))
                                    (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "23"))
                                    (rule "add_zero_right" (formula "11") (term "1"))
                                    (rule "inEqSimp_contradEq7" (formula "23") (ifseqformula "11"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                    (rule "add_literals" (formula "23") (term "0,0"))
                                    (rule "leq_literals" (formula "23") (term "0"))
                                    (rule "concrete_and_2" (formula "23"))
                                    (rule "false_right" (formula "23"))
                                    (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_3)"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "20") (term "1,1,0,0"))
                                    (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                    (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                    (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "20") (term "0,0,1"))
                                    (rule "leq_literals" (formula "20") (term "0,1"))
                                    (rule "concrete_and_2" (formula "20") (term "1"))
                                    (rule "concrete_or_4" (formula "20"))
                                    (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "20") (term "0,1"))
                                    (rule "concrete_and_2" (formula "20") (term "1"))
                                    (rule "concrete_or_4" (formula "20"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "27") (ifseqformula "20") (ifseqformula "28"))
                                    (rule "close" (formula "27") (ifseqformula "7"))
                                 )
                              )
                           )
                           (branch "(java.util.LinkedList.Node)self.nodeList[i_3] = n_2 FALSE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "ifthenelse_split" (formula "3") (term "0"))
                              (branch " (java.util.LinkedList.Node)self.nodeList[i_3] = self.last TRUE"
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                 (rule "seqGetAlphaCast" (formula "3") (term "0"))
                                 (rule "castedGetAny" (formula "3") (term "0"))
                                 (rule "eqClose" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "Class_invariant_axiom_for_java_util_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1") (ifseqformula "9") (userinteraction))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "orLeft" (formula "16"))
                                 (branch " self.nodeList = seqEmpty & self.first = null & self.last = null"
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "close" (formula "22") (ifseqformula "18"))
                                 )
                                 (branch " !self.nodeList = seqEmpty & !self.first = null & self.first.prev = null & !self.last = null & self.last.next = null & self.first = (java.util.LinkedList.Node)(self.nodeList[0]) & self.last = (java.util.LinkedList.Node)(self.nodeList[javaSubInt(self.nodeList.length, 1)])"
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "17"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "allLeft" (formula "21") (inst "t=i_3") (userinteraction))
                                    (rule "impLeft" (formula "21") (userinteraction))
                                    (branch "Case 1"
                                       (rule "insert_constant_value" (formula "14") (term "1"))
                                       (rule "translateJavaSubInt" (formula "22") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "19") (term "1,0,1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "eqSymm" (formula "21") (term "1,0"))
                                       (rule "eqSymm" (formula "22") (term "1,0"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "eqSymm" (formula "20"))
                                       (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "4"))
                                       (rule "concrete_and_1" (formula "23"))
                                       (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "21") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "23") (term "1"))
                                       (rule "mul_literals" (formula "23") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "1"))
                                       (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "22") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "19") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "22") (term "0,1,0"))
                                       (rule "eqSymm" (formula "22") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                       (rule "eqSymm" (formula "21") (term "1,0"))
                                       (rule "castedGetAny" (formula "20") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "23"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "5"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "castedGetAny" (formula "21") (term "1,0") (userinteraction))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "3") (userinteraction))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "17") (userinteraction))
                                       (rule "allLeft" (formula "15") (inst "t=add(i_3, Z(1(#)))") (userinteraction))
                                       (rule "impLeft" (formula "15") (userinteraction))
                                       (branch "Case 1"
                                          (rule "insert_constant_value" (formula "14") (term "1"))
                                          (rule "translateJavaSubInt" (formula "19") (term "1,0,1"))
                                          (rule "translateJavaSubInt" (formula "22") (term "1,1,0,0"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "eqSymm" (formula "21") (term "1,0"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "eqSymm" (formula "20"))
                                          (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "21") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "21") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "20") (term "1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "0,1"))
                                          (rule "polySimp_addComm0" (formula "24") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_addComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "20") (term "1,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "19") (term "0"))
                                          (rule "castedGetAny" (formula "23") (term "1,1,1,0"))
                                          (rule "castedGetAny" (formula "23") (term "0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0"))
                                          (rule "castedGetAny" (formula "22") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                          (rule "eqSymm" (formula "21") (term "1,0"))
                                          (rule "castedGetAny" (formula "20") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                          (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                          (rule "times_zero_2" (formula "24") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0"))
                                          (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "24") (term "0,1,0,1") (ifseqformula "14"))
                                          (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "22"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                          (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0"))
                                          (rule "mul_literals" (formula "24") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0,1"))
                                          (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "2"))
                                          (rule "concrete_and_3" (formula "24"))
                                          (rule "inEqSimp_geqRight" (formula "24"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (rule "concrete_and_2" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch "Case 2"
                                          (rule "andLeft" (formula "15") (userinteraction))
                                          (rule "castAdd" (formula "15") (term "0,0") (ifseqformula "16") (userinteraction))
                                          (rule "notLeft" (formula "15") (userinteraction))
                                          (rule "eqSymm" (formula "24") (userinteraction))
                                          (rule "close" (formula "24") (ifseqformula "22") (userinteraction))
                                       )
                                    )
                                 )
                              )
                              (branch " (java.util.LinkedList.Node)self.nodeList[i_3] = self.last FALSE"
                                 (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "19"))
                                 (rule "seqGetAlphaCast" (formula "14") (term "0"))
                                 (rule "castedGetAny" (formula "1") (term "0"))
                                 (rule "eqClose" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "6"))
                                 (rule "cut_direct" (formula "1") (term "0"))
                                 (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_3].next = null TRUE"
                                    (rule "concrete_or_1" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,1"))
                                    (rule "eqSymm" (formula "16") (term "1,0,1"))
                                    (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "22"))
                                    (rule "concrete_and_4" (formula "16") (term "0"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "1,0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (rule "concrete_or_1" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "eqClose" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "eqClose" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "cut_direct" (formula "24") (term "0"))
                                    (branch "CUT: self.size = 0 TRUE"
                                       (rule "concrete_and_1" (formula "25"))
                                       (rule "allRight" (formula "25") (inst "sk=iv_12"))
                                       (rule "orRight" (formula "25"))
                                       (rule "orRight" (formula "25"))
                                       (rule "inEqSimp_leqRight" (formula "25"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "times_zero_2" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                       (rule "times_zero_2" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "applyEq" (formula "14") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "3"))
                                       (rule "add_zero_right" (formula "20") (term "1,0"))
                                       (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "3"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "applyEq" (formula "14") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "6"))
                                       (rule "qeq_literals" (formula "7") (term "0"))
                                       (rule "concrete_and_2" (formula "7"))
                                       (rule "closeFalse" (formula "7"))
                                    )
                                    (branch "CUT: self.size = 0 FALSE"
                                       (rule "concrete_and_2" (formula "25"))
                                       (rule "false_right" (formula "25"))
                                       (rule "inEqSimp_strengthen1" (formula "11") (ifseqformula "24"))
                                       (rule "add_zero_right" (formula "11") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "11"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "leq_literals" (formula "24") (term "0"))
                                       (rule "concrete_and_2" (formula "24"))
                                       (rule "false_right" (formula "24"))
                                       (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_3)"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                       (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                       (rule "add_zero_left" (formula "20") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                       (rule "concrete_and_2" (formula "20") (term "1,0"))
                                       (rule "concrete_or_4" (formula "20") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "20") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                       (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "20") (term "0,0,1"))
                                       (rule "leq_literals" (formula "20") (term "0,1"))
                                       (rule "concrete_and_2" (formula "20") (term "1"))
                                       (rule "concrete_or_4" (formula "20"))
                                       (rule "allLeft" (formula "22") (inst "t=i_3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                       (rule "applyEq" (formula "22") (term "0,0,0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "22") (term "0,0"))
                                       (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "32"))
                                       (rule "concrete_or_2" (formula "22") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (rule "concrete_and_2" (formula "22") (term "1"))
                                       (rule "concrete_or_4" (formula "22"))
                                       (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "22"))
                                       (rule "leq_literals" (formula "2") (term "0"))
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "21"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (rule "concrete_and_2" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_3].next = null FALSE"
                                    (rule "concrete_or_2" (formula "1"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (rule "concrete_or_1" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "13") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "13") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,0,1,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "13") (term "1,1,0,0,1"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "eqSymm" (formula "16") (term "1,1"))
                                    (rule "eqSymm" (formula "16") (term "1,0,1"))
                                    (rule "replace_known_right" (formula "16") (term "0,1,0,0,0,1") (ifseqformula "23"))
                                    (rule "concrete_not_2" (formula "16") (term "1,0,0,0,1"))
                                    (rule "concrete_and_3" (formula "16") (term "0,0,0,1"))
                                    (rule "replace_known_right" (formula "16") (term "1,0") (ifseqformula "23"))
                                    (rule "concrete_and_4" (formula "16") (term "0"))
                                    (rule "concrete_or_2" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "20") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "20") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "21") (term "0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,0"))
                                    (rule "castedGetAny" (formula "20") (term "0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "1,0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "13"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "12"))
                                    (rule "leq_literals" (formula "14") (term "0"))
                                    (rule "concrete_or_1" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv"))
                                    (rule "lenOfSeqEmpty" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                    (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "13"))
                                    (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,1") (ifseqformula "13"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "12"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "cnf_rightDist" (formula "14") (term "0"))
                                    (rule "distr_forallAnd" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "commute_or_2" (formula "14") (term "0"))
                                    (rule "commute_or" (formula "20") (term "0,0"))
                                    (rule "commute_or" (formula "21") (term "0,0"))
                                    (rule "shift_paren_or" (formula "15") (term "0"))
                                    (rule "commute_or" (formula "14") (term "0,0"))
                                    (rule "seqGetAlphaCast" (formula "18") (term "0"))
                                    (rule "castedGetAny" (formula "18") (term "0"))
                                    (rule "eqClose" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "19") (term "0"))
                                    (rule "castedGetAny" (formula "19") (term "0"))
                                    (rule "eqClose" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "allLeft" (formula "21") (inst "t=i_3"))
                                    (rule "replace_known_right" (formula "21") (term "0,0") (ifseqformula "33"))
                                    (rule "concrete_or_2" (formula "21") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "21") (term "0,0"))
                                    (rule "concrete_and_2" (formula "21") (term "0"))
                                    (rule "concrete_or_2" (formula "21"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "3"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "inEqSimp_homoInEq1" (formula "21"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0"))
                                    (rule "add_zero_right" (formula "21") (term "0"))
                                    (rule "leq_literals" (formula "21"))
                                    (rule "closeFalse" (formula "21"))
                                 )
                              )
                           )
                        )
                        (branch "self.nodeList.length >= 2 + i_3 FALSE"
                           (rule "inEqSimp_geqRight" (formula "18"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "ifthenelse_split" (formula "4") (term "0,0,0"))
                           (branch "self.nodeList.length >= 1 + i_3 TRUE"
                              (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "4"))
                              (rule "ifthenelse_true" (formula "2") (term "1,0"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
                              (rule "ifthenelse_true" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                              (rule "replace_known_left" (formula "20") (term "0,0") (ifseqformula "3"))
                              (rule "ifthenelse_true" (formula "20") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "(java.util.LinkedList.Node)self.nodeList[i_3] = n_2 TRUE"
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "3") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "self.last = n_2 TRUE"
                                    (rule "close" (formula "19") (ifseqformula "4"))
                                 )
                                 (branch "self.last = n_2 FALSE"
                                    (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "seqGetAlphaCast" (formula "1") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,0"))
                                    (rule "times_zero_1" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                                    (rule "leq_literals" (formula "10") (term "0"))
                                    (rule "concrete_or_1" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                    (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                    (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                    (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "eqSymm" (formula "14") (term "1,1"))
                                    (rule "eqSymm" (formula "14") (term "1,0,1"))
                                    (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "19"))
                                    (rule "concrete_and_4" (formula "14") (term "0"))
                                    (rule "concrete_or_2" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "17") (term "1,0,0"))
                                    (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                    (rule "castedGetAny" (formula "16") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                    (rule "eqSymm" (formula "19") (term "1,0"))
                                    (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "castedGetAny" (formula "17") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "2"))
                                    (rule "polySimp_addAssoc" (formula "17") (term "1,0"))
                                    (rule "add_literals" (formula "17") (term "0,1,0"))
                                    (rule "add_zero_left" (formula "17") (term "1,0"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "add_literals" (formula "12") (term "0,0"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                    (rule "close" (formula "23") (ifseqformula "1"))
                                 )
                              )
                              (branch "(java.util.LinkedList.Node)self.nodeList[i_3] = n_2 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " (java.util.LinkedList.Node)self.nodeList[i_3] = self.last TRUE"
                                    (rule "close" (formula "19") (ifseqformula "3"))
                                 )
                                 (branch " (java.util.LinkedList.Node)self.nodeList[i_3] = self.last FALSE"
                                    (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "18"))
                                    (rule "seqGetAlphaCast" (formula "13") (term "0"))
                                    (rule "castedGetAny" (formula "1") (term "0"))
                                    (rule "eqClose" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "5"))
                                    (rule "cut_direct" (formula "1") (term "0"))
                                    (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_3].next = null TRUE"
                                       (rule "concrete_or_1" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "19"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                       (rule "concrete_or_1" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                       (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0,1"))
                                       (rule "eqSymm" (formula "14") (term "1,1"))
                                       (rule "replace_known_right" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "20"))
                                       (rule "concrete_not_2" (formula "14") (term "1,0,0,0,1"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,0,1"))
                                       (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "20"))
                                       (rule "concrete_and_4" (formula "14") (term "0"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "notLeft" (formula "15"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "16") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                       (rule "eqSymm" (formula "19") (term "1,0"))
                                       (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "0,0"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "1,0"))
                                       (rule "add_literals" (formula "17") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "1,0"))
                                       (rule "close" (formula "23") (ifseqformula "17"))
                                    )
                                    (branch "CUT: (java.util.LinkedList.Node)self.nodeList[i_3].next = null FALSE"
                                       (rule "concrete_or_2" (formula "1"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,0"))
                                       (rule "times_zero_1" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "11"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                       (rule "mul_literals" (formula "11") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                       (rule "add_literals" (formula "11") (term "0,0"))
                                       (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "3"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                       (rule "concrete_or_1" (formula "10"))
                                       (rule "true_left" (formula "10"))
                                       (rule "Partial_inv_axiom_for_JML_class_invariant_nr_0_in_LinkedList" (formula "11") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                                       (rule "insert_constant_value" (formula "11") (term "1,1,0,0,0,0"))
                                       (rule "translateJavaSubInt" (formula "11") (term "1,0,1,1,1,1,0,0"))
                                       (rule "translateJavaSubInt" (formula "11") (term "1,1,0,0,1"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "andLeft" (formula "11"))
                                       (rule "eqSymm" (formula "16") (term "1,0"))
                                       (rule "eqSymm" (formula "15") (term "1,0"))
                                       (rule "eqSymm" (formula "14") (term "1,0,1"))
                                       (rule "eqSymm" (formula "14") (term "1,1"))
                                       (rule "replace_known_right" (formula "14") (term "0,1,0,0,0,1") (ifseqformula "21"))
                                       (rule "concrete_not_2" (formula "14") (term "1,0,0,0,1"))
                                       (rule "concrete_and_3" (formula "14") (term "0,0,0,1"))
                                       (rule "replace_known_right" (formula "14") (term "1,0") (ifseqformula "21"))
                                       (rule "concrete_and_4" (formula "14") (term "0"))
                                       (rule "concrete_or_2" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "notLeft" (formula "15"))
                                       (rule "notLeft" (formula "14"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,0,0"))
                                       (rule "castedGetAny" (formula "19") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "18") (term "1,1,1,0"))
                                       (rule "castedGetAny" (formula "16") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                       (rule "castedGetAny" (formula "19") (term "0,1,0"))
                                       (rule "eqSymm" (formula "19") (term "1,0"))
                                       (rule "castedGetAny" (formula "18") (term "0,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "castedGetAny" (formula "17") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                       (rule "applyEq" (formula "17") (term "1,1,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "1,0"))
                                       (rule "add_literals" (formula "17") (term "0,1,0"))
                                       (rule "add_zero_left" (formula "17") (term "1,0"))
                                       (rule "close" (formula "24") (ifseqformula "17"))
                                    )
                                 )
                              )
                           )
                           (branch "self.nodeList.length >= 1 + i_3 FALSE"
                              (rule "replace_known_right" (formula "2") (term "0,1,0") (ifseqformula "15"))
                              (rule "ifthenelse_false" (formula "2") (term "1,0"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "15"))
                              (rule "ifthenelse_false" (formula "3") (term "0,0,0"))
                              (rule "ifthenelse_concrete3" (formula "3") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "15"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "20") (term "0,0") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "20") (term "0,0,0"))
                              (rule "concrete_and_2" (formula "20") (term "0,0"))
                              (rule "ifthenelse_false" (formula "20") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (rule "concrete_or_1" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "commute_or" (formula "3") (term "0,0"))
                              (rule "ifthenelse_split" (formula "4") (term "0,0,0"))
                              (branch "self.nodeList.length = i_3 TRUE"
                                 (rule "eqSymm" (formula "5") (term "0,0"))
                                 (rule "replace_known_left" (formula "2") (term "0,1,0") (ifseqformula "4"))
                                 (rule "ifthenelse_true" (formula "2") (term "1,0"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "3"))
                                 (rule "concrete_or_3" (formula "2") (term "0,0"))
                                 (rule "ifthenelse_true" (formula "2") (term "0"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "2"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,0"))
                                 (rule "times_zero_1" (formula "1") (term "0"))
                                 (rule "qeq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "self.last = n_2 TRUE"
                                    (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "referencedObjectIsCreatedRightEQ" (formula "14") (ifseqformula "2") (ifseqformula "15"))
                                    (rule "close" (formula "14") (ifseqformula "6"))
                                 )
                                 (branch "self.last = n_2 FALSE"
                                    (rule "applyEqReverse" (formula "18") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                              )
                              (branch "self.nodeList.length = i_3 FALSE"
                                 (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "15"))
                                 (rule "concrete_or_4" (formula "3") (term "0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,0") (ifseqformula "15"))
                                 (rule "ifthenelse_false" (formula "2") (term "1,0"))
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "14"))
                                 (rule "inEqSimp_contradEq3" (formula "14") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "qeq_literals" (formula "14") (term "0"))
                                 (rule "concrete_and_2" (formula "14"))
                                 (rule "false_right" (formula "14"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "(java.util.LinkedList.Node)(seqGetOutside) = n_2 TRUE"
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                    (rule "eqSymm" (formula "3") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "3") (term "0"))
                                    (branch "self.last = n_2 TRUE"
                                       (rule "close" (formula "19") (ifseqformula "4"))
                                    )
                                    (branch "self.last = n_2 FALSE"
                                       (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                 )
                                 (branch "(java.util.LinkedList.Node)(seqGetOutside) = n_2 FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "(java.util.LinkedList.Node)(seqGetOutside) = self.last TRUE"
                                       (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "2"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "leq_literals" (formula "4"))
                                       (rule "closeFalse" (formula "4"))
                                    )
                                    (branch "(java.util.LinkedList.Node)(seqGetOutside) = self.last FALSE"
                                       (rule "applyEqReverse" (formula "19") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "18"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "18") (term "0") (ifseqformula "5"))
                                       (rule "cut_direct" (formula "1") (term "0"))
                                       (branch "CUT: (java.util.LinkedList.Node)(seqGetOutside).next = null TRUE"
                                          (rule "concrete_or_1" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "19"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_literals" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "CUT: (java.util.LinkedList.Node)(seqGetOutside).next = null FALSE"
                                          (rule "concrete_or_2" (formula "1"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "3"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "4"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Case 2"
                  (rule "eqClose" (formula "14"))
                  (rule "closeTrue" (formula "14"))
               )
            )
            (branch "Null Reference (l_2 = null)"
               (rule "false_right" (formula "16"))
               (rule "simplifyUpdate2" (formula "1"))
               (rule "applyOnRigidFormula" (formula "1"))
               (rule "applyOnPV" (formula "1") (term "0"))
               (rule "simplifyUpdate1" (formula "1") (term "1"))
               (rule "close" (formula "15") (ifseqformula "1"))
            )
         )
         (branch "Null Reference (l_1 = null)"
            (rule "false_right" (formula "16"))
            (rule "simplifyUpdate2" (formula "1"))
            (rule "applyOnRigidFormula" (formula "1"))
            (rule "applyOnPV" (formula "1") (term "0"))
            (rule "simplifyUpdate1" (formula "1") (term "1"))
            (rule "close" (formula "15") (ifseqformula "1"))
         )
      )
      (branch "Null Reference (l = null)"
         (rule "false_right" (formula "16"))
         (rule "simplifyUpdate2" (formula "1"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "close" (formula "12") (ifseqformula "1"))
      )
   )
)
(branch "Null Reference (n = null)"
   (rule "false_right" (formula "15"))
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "close" (formula "13") (ifseqformula "1"))
)
)

}
